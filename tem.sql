/*
 Navicat Premium Data Transfer

 Source Server         : 192.168.18.17
 Source Server Type    : MySQL
 Source Server Version : 80032 (8.0.32)
 Source Host           : 127.0.0.1:3306
 Source Schema         : datae_base_remake

 Target Server Type    : MySQL
 Target Server Version : 80032 (8.0.32)
 File Encoding         : 65001

 Date: 06/07/2023 17:11:53
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1447 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'config_info' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (266, 'rpa-warning-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19094\n  servlet:\n    context-path: /warning\n\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.warning.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    lettuce:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000\n  quartz:\n    job-store-type: jdbc\n    properties:\n      org:\n        quartz:\n          jobStore:\n            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore\n            clusterCheckinInterval: 10000\n            misfireThreshold: 60000\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            useProperties: false\n            tablePrefix: QRTZ_\n            isClustered: true\n        scheduler:\n          instanceId: AUTO\n        threadPool:\n          class: org.quartz.simpl.SimpleThreadPool\n          threadCount: 10\n          threadPriority: 5\n          threadsInheritContextClassLoaderOfInitializingThread: true\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nrobot_unconn: true\n\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n  dingtalk:\n    webhook: https://oapi.dingtalk.com/robot/send?access_token=dddb5af98809d7f32e8cb64efdaef0743394fdb500f8b3b980953c1a2e74c4ee\n    secretKey: SEC6833fbf4d8d56f92ea5e362db2d3084458f6dd9ac23c941b5bd6492c53c35a55\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27778\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  warning-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', '09de752df7baaab8ab8803a952d63116', '2021-11-15 21:11:25', '2023-06-16 09:07:46', 'nacos', '192.168.18.15', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (278, 'controller.yml', 'DEFAULT_GROUP', 'server:\n  port: 19090\n  servlet:\n    context-path: /controller\n  compression:\n    enabled: true\n    mime-types: application/json\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.sendi.controller.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: \n        max-active: 10\n        max-wait: -1\n        max-idle: 8\n        min-idle: 0\n  quartz:\n    job-store-type: jdbc\n    properties:\n      org:\n        quartz:\n          jobStore:\n            # class: org.quartz.impl.jdbcjobstore.JobStoreTX\n            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore\n            clusterCheckinInterval: 10000\n            misfireThreshold: 600000\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            useProperties: false\n            tablePrefix: QRTZ_\n            isClustered: true\n        scheduler:\n          instanceId: AUTO\n          instanceName: clusteredScheduler\n        threadPool:\n          class: org.quartz.simpl.SimpleThreadPool\n          threadCount: 10\n          threadPriority: 5\n          threadsInheritContextClassLoaderOfInitializingThread: true\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    #log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nTASK_PHOTO_NGINX_PATH: /task_photo/\nTASK_VIDEO_NGINX_PATH: /task_video/\nocr_default_url: http://127.0.0.1:18888/image_code\ngeneral_default_url: http://127.0.0.1:18810/text_cls\n\nrobot_unconn: true   \nadd_userInfo_interceptor: true\n\n\n\npowerjob:\n  systemLogJob: 流程易-广播清理系统日志\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27781\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  console-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}\n\nalipay:\n  appId: 9021000122682369\n  merchantPrivateKey: MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCO9H0Xtusc4hU8oXqCp3+Jy4mqy+sPsQkWmKZoTdpbgGmw6avG1N7AzAekPYOaaLa8xmhNWxAPcOd47f7iFPDirS3mqZwXz6uWKQWeqQNl4hWk+cmLI0ca3o23w91DLCbde+oyJva1YKUlSPuSK7AABeDhCrHqkx3pnWSEfqcBNcVAMYLZVTpDmKgaJiUA61tY/6DpClK2trdFhOUGg2X+9ZpimPt1iACz7bcNjtMGFKD7zBuV1l+oLiS6YSP1j/xImTLa7FuXWAoLkqXG9nLpnmACeoMemyXvYLBmRFEnRChogwgIlZOXcHbW/e7y8nFiOn4J7RiDNNFtaxmoELk5AgMBAAECggEAcljybrOsITBemF76JeRhShF7DxmJ7sVHZcG46hnMHgD7ib1/382KWGFbg26JBEvaT+nMqIO8tv0yyjJk/OaPQGISIz1sVEeTEsvBaQX8Z9SOR6ZeJmOTjtSSO3n6VK7Ob7+ct30fPjoOH2LfiC5V287X8GqjoeUHukRhkPHWGEp0Q9ry9bCmltWhPC5b/tD+9zUgdoAMnZihv+Mwhf54TTcbxVAHQf5utLKB6rzQADd/pqNz98igRLeKaIe2XGaE8mV+dj5YZJS6L83nNr0rsD/AJ6KNRRX9Zz1dJ6yRyhnmU5XnbXHeyxW01ixxJE13MI6DLnSh4G8X/Z2HpKxTAQKBgQD3ZMVY+RiTTkBEVG/OBqZPYFRsS6iEuhrjpXCeAxEEw3N8Q0ZUEIt2vwD1uu0EwUXlrV9xglDjLHK8gV9Q4F89DGceIS0A8SuoLNRmGihGNGHOT/nMzovlS/ZigtoJK0WL4jDNb5fk9yXRYFyGAFPNXXBFNGRPw2TH3x6227LlaQKBgQCT7Zy/+GvxLfP+2hkGCJzIqC3q3eZOfdGOuiR4CZhXn5Uthc7OzcRnt+A2I3RT1fStO0kmI5hHCsdlNtGZ3iZRtGoFgpIDWR3sbi3mHAdjEsRgM6CdvbJRcO+rUrhSPv85gq1R2xPBD7W4neqdu/EQ4+CAZrNWPy2NoUwdt1GrUQKBgDZw8JTRzDyuXaorwqbeA783/ZwPUjhTFBPAlnXPSvF3aXSRAWsCcQ5inf11cy82sQEIFBbQjKhRYbZl6enMVmkCz7ZrqpGogOjzZJJLc01vvY4/P0N4uIRvIPswvHaEFTvhPMgYpJ54XNQklnfOnqJ0y34PN3vuDcGGMiYfVtDxAoGBAIPWOOU+WbVQ5ywy5CpkcpbCjGnN6fv6VlGFxArXQlaVezZfErls2aY2UjTt1DcDcFUTiVXcU1K9YIfsG1GukyguSm8ut0MUoX6dk3qJcGvzxeCXIoZzEgFTTca6qltimcR/mkhhn3FotuQamYaKgYY0EVleLmanV8np/xRc1QSBAoGADHZEmllp931219Rfty5kJYquQRNvIlOUAC6BhjmXGeJsy4C0oSBuriH8XucJ2Wgqn/6hFKQtiybY/pMEwdBOjYBA3QoT38yWjUC+6f1MlkIEpVDnvI8y8Cwhpi748U/eb4JZkXOss6XJEKWV0z1Qy0uy+YqYi+2mXbp8oZx4Uzo=\n  alipayPublicKey: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqFxk1A1LYFLuBDo2uCPxVmMtEI7SKkjAAuiIoRBjdGywY6Ze1SNiD2jaawp3lvzLLW7ZQ0ILQk9+r3uf20ZNehOwAOfoWRbpzYtuNgCsAZg9O2bPwNOPX7siph9cLKx+5/8wuhNk3lejDvYTT6McmbumhlK+sQNirlcrlt2xxNgQZNhGoJbO9yVqt0hPeXZTV3q+D8wLn7cj1XcPMfFyMOV+NAeGTsvsGqNNEdjIb4zVH6bRBi2ARktCCl3dbz9Gz+qK6Ml/hLVvcvQg/KT2cn+phgpHwNuDUI61HvMSbQf2n0vc5RC7H8DGAggs1bmNu98CfXIy57dPpYA3zxCuVQIDAQAB\n  gatewayUrl: https://openapi-sandbox.dl.alipaydev.com/gateway.do\n  notifyUrl: http://121.33.214.30:44390/chargeOrder/alipay/notify\n  returnUrl:\n\nwechat-pay:\n  app-id: 1\n  merchant-id: 1\n  merchant-serial-number: 1\n  notify-url: 1\n  private-key: MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCO9H0Xtusc4hU8oXqCp3+Jy4mqy+sPsQkWmKZoTdpbgGmw6avG1N7AzAekPYOaaLa8xmhNWxAPcOd47f7iFPDirS3mqZwXz6uWKQWeqQNl4hWk+cmLI0ca3o23w91DLCbde+oyJva1YKUlSPuSK7AABeDhCrHqkx3pnWSEfqcBNcVAMYLZVTpDmKgaJiUA61tY/6DpClK2trdFhOUGg2X+9ZpimPt1iACz7bcNjtMGFKD7zBuV1l+oLiS6YSP1j/xImTLa7FuXWAoLkqXG9nLpnmACeoMemyXvYLBmRFEnRChogwgIlZOXcHbW/e7y8nFiOn4J7RiDNNFtaxmoELk5AgMBAAECggEAcljybrOsITBemF76JeRhShF7DxmJ7sVHZcG46hnMHgD7ib1/382KWGFbg26JBEvaT+nMqIO8tv0yyjJk/OaPQGISIz1sVEeTEsvBaQX8Z9SOR6ZeJmOTjtSSO3n6VK7Ob7+ct30fPjoOH2LfiC5V287X8GqjoeUHukRhkPHWGEp0Q9ry9bCmltWhPC5b/tD+9zUgdoAMnZihv+Mwhf54TTcbxVAHQf5utLKB6rzQADd/pqNz98igRLeKaIe2XGaE8mV+dj5YZJS6L83nNr0rsD/AJ6KNRRX9Zz1dJ6yRyhnmU5XnbXHeyxW01ixxJE13MI6DLnSh4G8X/Z2HpKxTAQKBgQD3ZMVY+RiTTkBEVG/OBqZPYFRsS6iEuhrjpXCeAxEEw3N8Q0ZUEIt2vwD1uu0EwUXlrV9xglDjLHK8gV9Q4F89DGceIS0A8SuoLNRmGihGNGHOT/nMzovlS/ZigtoJK0WL4jDNb5fk9yXRYFyGAFPNXXBFNGRPw2TH3x6227LlaQKBgQCT7Zy/+GvxLfP+2hkGCJzIqC3q3eZOfdGOuiR4CZhXn5Uthc7OzcRnt+A2I3RT1fStO0kmI5hHCsdlNtGZ3iZRtGoFgpIDWR3sbi3mHAdjEsRgM6CdvbJRcO+rUrhSPv85gq1R2xPBD7W4neqdu/EQ4+CAZrNWPy2NoUwdt1GrUQKBgDZw8JTRzDyuXaorwqbeA783/ZwPUjhTFBPAlnXPSvF3aXSRAWsCcQ5inf11cy82sQEIFBbQjKhRYbZl6enMVmkCz7ZrqpGogOjzZJJLc01vvY4/P0N4uIRvIPswvHaEFTvhPMgYpJ54XNQklnfOnqJ0y34PN3vuDcGGMiYfVtDxAoGBAIPWOOU+WbVQ5ywy5CpkcpbCjGnN6fv6VlGFxArXQlaVezZfErls2aY2UjTt1DcDcFUTiVXcU1K9YIfsG1GukyguSm8ut0MUoX6dk3qJcGvzxeCXIoZzEgFTTca6qltimcR/mkhhn3FotuQamYaKgYY0EVleLmanV8np/xRc1QSBAoGADHZEmllp931219Rfty5kJYquQRNvIlOUAC6BhjmXGeJsy4C0oSBuriH8XucJ2Wgqn/6hFKQtiybY/pMEwdBOjYBA3QoT38yWjUC+6f1MlkIEpVDnvI8y8Cwhpi748U/eb4JZkXOss6XJEKWV0z1Qy0uy+YqYi+2mXbp8oZx4Uzo=\n  api-v3-key: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqFxk1A1LYFLuBDo2uCPxVmMtEI7SKkjAAuiIoRBjdGywY6Ze1SNiD2jaawp3lvzLLW7ZQ0ILQk9+r3uf20ZNehOwAOfoWRbpzYtuNgCsAZg9O2bPwNOPX7siph9cLKx+5/8wuhNk3lejDvYTT6McmbumhlK+sQNirlcrlt2xxNgQZNhGoJbO9yVqt0hPeXZTV3q+D8wLn7cj1XcPMfFyMOV+NAeGTsvsGqNNEdjIb4zVH6bRBi2ARktCCl3dbz9Gz+qK6Ml/hLVvcvQg/KT2cn+phgpHwNuDUI61HvMSbQf2n0vc5RC7H8DGAggs1bmNu98CfXIy57dPpYA3zxCuVQIDAQAB\n', 'a507486a91cad530f6da098d7dc229b8', '2021-11-17 03:53:04', '2023-06-19 07:21:17', 'nacos', '192.168.18.16', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (282, 'datae-authentication-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9040\n  servlet:\n    context-path: /auth\n\ndatae:\n  auth:\n    enabled: true\n    checkCodeBasePath: /tmp/check_code_image\n    ignoreCheckCode: true\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.datae.authenticationserver.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}', '8b2cdce1f9f827acd952e97c24ae7964', '2021-11-17 03:53:04', '2023-05-08 02:48:39', 'nacos', '192.168.18.3', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (283, 'datae-base.yml', 'DEFAULT_GROUP', 'spring:\n  devtools:\n    restart:\n      enabled: false\n  cloud:\n    nacos:\n      discovery:\n        server-addr: \'192.168.18.17:9002\'\n        namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n\nswagger:\n    enabled: true\n\n# 关闭actuator的所有端点\n# management:\n#   endpoints:\n#     enabled-by-default: true\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 25000\n        readTimeout: 25000\n\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker:\n        requestVolumeThreshold: 1000\n      execution:\n        timeout:\n          enabled: true\n        isolation:\n          thread:\n            timeoutInMilliseconds: 20000\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default\n\nlogging:\n  config: classpath:logback-spring.xml\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    # 基础服务\n    cn.gzsendi.rpa.operationLog: debug\n    cn.gzsendi.rpa.operationLog.aop: debug\n    cn.gzsendi.datae.authenticationclient: debug\n    cn.gzsendi.datae.authenticationserver: debug\n    cn.gzsendi.datae.gateway: info\n    cn.gzsendi.rpa.system: debug\n    # 业务服务\n    cn.sendi.controller: info\n    cn.gzsendi.rpa.controller.dao.mapper: debug\n    cn.gzsendi.rpa.controller.service.impl: debug\n    cn.gzsendi.rpa.controller: info\n    cn.gzsendi.rpa.designer: info\n    cn.gzsendi.rpa.robot: info\n    cn.gzsendi.rpa.taskQueue: info\n    cn.gzsendi.rpa.warning: info\n    # mybatis-plus\n    #com.baomidou.mybatisplus: debug\n    #org.casbin: debug\n  # file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7\n\n\n\nschedule: \n  #是否集群模式，false：scheduler + quartz  , true: powerjob\n  cluster_mode: false\n  powerjob:\n    worker:\n      #是否启动powerJob\n      enabled: ${schedule.cluster_mode:false}\n      # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n      server-address: 192.168.18.17:7700\n      # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n      protocol: akka\n      # 持久化方式，可选，默认 disk\n      store-strategy: disk\n      # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n      max-result-length: 4096\n      # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n      max-appended-wf-context-length: 4096\n      # 同时运行的轻量级任务数量上限\n      max-lightweight-task-num: 1024\n      # 同时运行的重量级任务数量上限\n      max-heavy-task-num: 64\n\n# 短信云\nsms:\n  huawei:\n    # 是否允许通过短信云平台发送短信，默认不打开，不打开情况下验证码会在显示在响应内容中（打开会产生短信费用）\n    enable: false\n    # APP接入地址(在控制台\"应用管理\"页面获取)+接口访问URI\n    url: https://smsapi.cn-south-1.myhuaweicloud.com:443/sms/batchSendSms/v1\n    appKey: qLv9PLV1KL4Sy1P803loqI4imd7y\n    appSecret: 43Sxr6sSWYFZHRcenRoLxnDuSfl3\n    # 短信签名通道号\n    sender: 8823041724996\n    # 模板ID\n    templateId: 5691fcf5464e49fb81893fc860e64780\n    # 当templateId指定的模板类型为通用模板时生效且必填,必须是已审核通过的,与模板类型一致0\n    signature: 广州云迪科技有限公司\n    # 选填,短信状态报告接收地址,推荐使用域名,为空或者不填表示不接收状态报告\n    statusCallBack: \n', '5be0b5e1887777d0fac812c94e446235', '2021-11-17 03:53:04', '2023-06-01 01:16:56', 'nacos', '192.168.18.16', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (284, 'datae-gateway.yml', 'DEFAULT_GROUP', 'server:\n  port: 9030\n  # 2.x gateway 使用的是netty\n  tomcat:\n    max-threads: 100\n    accept-count: 2000\n    max-connections: 2000\n\nspring:\n  servlet:\n    #文件上传大小限制\n    multipart:\n      maxRequestSize: 100MB\n      max-file-size: 100MB\n  cloud:\n    # 负载均衡器缓存\n    loadbalancer:\n      ribbon:\n          enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    gateway:\n      #基于手动设置进行路由\n      routes:\n        ####################   RPA start   #######################\n        # 认证服务swagger\n        - id: auth_swagger\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_user_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/user/**\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务token\n        - id: auth_token_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/token/**\n        # 流程易基础系统服务\n        - id: rpa-system-swagger\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易告警管理服务\n        - id: rpa-warning-swagger\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # console服务druid监控\n        - id: console_druid\n          uri: lb://controller\n          predicates:\n            - Path=/controller/druid/**\n          filters:\n            - AuthSkipFilterFactory\n        # console服务prometheus监控\n        - id: console_prometheus\n          uri: lb://controller\n          predicates:\n            - Path=/controller/actuator/prometheus\n          filters:\n            - AuthSkipFilterFactory\n        # controller-swagger\n        - id: controller-swagger\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # controller-version\n        - id: controller-version\n          uri: lb://controller\n          predicates:\n            - Path=/controller/statistics/homePage/version\n          filters:\n            - AuthSkipFilterFactory\n        # controller-pay-notify\n        - id: controller-pay-notify\n          uri: lb://controller\n          predicates:\n            - Path=/controller/chargeOrder/pay/notify/**\n          filters:\n            - AuthSkipFilterFactory\n        # 任务队列swagger\n        - id: taskQueue-swagger\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 设计器服务swagger\n        - id: designer-swagger\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人服务swagger\n        - id: robot-swagger\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 组件市场swagger\n        - id: component-market-server-swagger\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server-downloadIcon\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/moduleMenu/downloadIconFile\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/**\n        # 在线升级swagger\n        - id: online-update-swagger\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-reload\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/casbinController/reload\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-saas\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/system/saas/**\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system1\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/**\n        - id: rpa-robot-server\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/**\n        ####################   RPA end  #######################\n        # 设计器登录    \n        - id: controller-designer-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/designerLogin/signIn\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人登录    \n        - id: controller-robot-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/robotLogin/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1    \n        - id: controller-api1\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1.5   \n        - id: controller-api15\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.5/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V2    \n        - id: controller-api2\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 控制台服务\n        - id: controller\n          uri: lb://controller\n          predicates:\n            - Path=/controller/**\n        # 任务队列服务\n        - id: rpa-taskQueue-server\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/**\n        # 设计器服务\n        - id: rpa-designer-server\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/**\n        - id: rpa-warning-server\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/**\n        # 在线更新服务-获取最新安装包\n        - id: online-update-install-package\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/robotOnlineUpdate/getLatestInstallPkgDownloadPath,/online-update/designerOnlineUpdate/getLatestInstallPkgDownloadPath\n          filters:\n            - AuthSkipFilterFactory\n        - id: online-update\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/**  \n        - id: ai-system-server\n          uri: lb://ai-system-server\n          predicates:\n            - Path=/aiProject/** \n\n      #基于服务发现进行路由\n#hystrix 取消超时\nhystrix:\n  #10分钟熔断\n  metrics:\n    enabled: true\n    polling-interval-ms: 20000', '2e1d0649223a045f4478e3dcc92cf4ba', '2021-11-17 03:53:04', '2023-06-15 01:28:09', 'nacos', '192.168.18.57', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (288, 'rpa-designer-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19100\n  servlet:\n    context-path: /designer\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.designer.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: true\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27779\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  designer-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', 'a60a2e1c2aacd2c22bcac674c786459a', '2021-11-17 03:53:04', '2023-06-07 03:31:08', 'nacos', '192.168.18.3', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (289, 'rpa-robot-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19098\n  servlet:\n    context-path: /rpa-robot-server\n\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.robot.dao.mapper.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j     \n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny: \n  #redis#\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nocr_default_url: http://127.0.0.1:18888/image_code\ngeneral_default_url: http://127.0.0.1:18810/text_cls\nreconnTime: 300\n\nfailMessage:\n  running_task_not_concurrent_message: 机器人正在运行不能并发的流程，需要等待任务运行结束\n  wait_task_not_concurrent_message: 等待运行的任务为独占流程，需要等待机器人正在运行的任务结束\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27780\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  robot-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', 'e03b0f96e82072a3b21f98ababfe9a6d', '2021-11-17 03:53:04', '2023-06-01 01:15:17', 'nacos', '192.168.18.16', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (290, 'rpa-system-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9020\n  servlet:\n    context-path: /system\n\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    default-enum-type-handler: com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n\ncasbin:\n    enableCasbin: true\n    useSyncedEnforcer: true\n    storeType: jdbc\n    initializeSchema: create\n    model: classpath:casbin/model.conf\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.system.dao.mapper.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: \n        max-active: 10\n        max-wait: -1\n        max-idle: 8\n        min-idle: 0\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}', '43a9e6eb14bf4e1d5e0fec2216aa4575', '2021-11-17 03:53:04', '2023-05-08 02:51:18', 'nacos', '192.168.18.3', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (291, 'rpa-taskQueue-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19099\n  servlet:\n    context-path: /taskQueue\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.taskQueue.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27777\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  taskqueue-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', '87513a1123c40e1f37a324fd7b73594f', '2021-11-17 03:53:04', '2023-05-08 02:51:37', 'nacos', '192.168.18.3', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (292, 'service.vgroupMapping.my_test_tx_group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2021-11-17 03:54:39', '2023-03-23 09:46:27', NULL, '192.168.18.3', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (294, 'rpa-warning-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19094\n  servlet:\n    context-path: /warning\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    default-enum-type-handler: com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler\n    cache-enabled: true\nswagger:\n    enabled: true\nspring:\n  datasource:\n    url: jdbc:mysql://172.168.201.90:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 172.168.201.90\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\n\n  #redis#\n  redis:\n    database: 0\n    host: 172.168.200.243\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\n\nrobot_unconn: true\nknife4j:\n  enable: true    \nquartz_url: jdbc:mysql://172.168.201.90:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\nquartz_user: datae\nquartz_password: Sd_12345\norg:\n    quartz:\n        dataSource:\n            test:\n                driver: com.mysql.jdbc.Driver\n                URL: jdbc:mysql://172.168.201.90:3306/lcy_warning\n                user: datae\n                password: Sd_12345\n                validationQuery: select 0 from dual\n', 'fd0d9ddbb69ece4e603e457bf2e22e57', '2021-11-17 19:44:22', '2021-12-29 20:44:33', 'nacos', '192.168.75.116', '', 'f76627e8-ea63-4192-8250-df0fbf384902', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (295, 'product-release-platform.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 19093\r\n  servlet:\r\n    context-path: /product-release-platform\r\n\r\nspring:\r\n  datasource:\r\n    url: jdbc:mysql://172.168.201.90:3306/product_release_platform?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\r\n    username: datae\r\n    password: Sd_12345\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    driver-class-name: com.mysql.jdbc.Driver\r\n\r\n# spring:\r\n#   datasource:\r\n#     url: jdbc:dm://172.168.200.16:5236\r\n#     username: SYSDBA\r\n#     password: dmdba1234\r\n#     type: com.alibaba.druid.pool.DruidDataSource\r\n#     driver-class-name: dm.jdbc.driver.DmDriver \r\n\r\n  #redis#\r\n  redis:\r\n    database: 0\r\n    host: 172.168.201.90\r\n    port: 6379\r\n    password: Sd_12345\r\n    jedis:\r\n      pool:\r\n        max-active: 8\r\n        max-idle: 8\r\n        max-wait: -1\r\n        min-idle: 5\r\n    timeout: 5000s\r\n#mybatis#\r\nmybatis:\r\n  mapper-locations: classpath:mapper/*.xml\r\n  # mapper-locations: classpath:DM8mapper/*.xml\r\n  type-aliases-package: cn.sendi.dao.entity\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\nknife4j:\r\n  enable: true    \r\nlogging:\r\n  level:\r\n    root: info\r\n    com.netflix: warn\r\n    com.alibaba.nacos.client.naming: warn', '1cb69ded2e9d17c95753f5a1cbdec08c', '2021-11-17 19:44:22', '2021-11-17 19:44:22', NULL, '192.168.23.2', '', 'f76627e8-ea63-4192-8250-df0fbf384902', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (296, 'controller.yml', 'DEFAULT_GROUP', 'server:\n  port: 19090\n  servlet:\n    context-path: /controller\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.controller.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    \nswagger:\n  enable: true  \n\nrobot_unconn: true    \nquartz_url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\nquartz_user: datae\nquartz_password: Sd_12345\nocr_default_url: http://127.0.0.1:18888/image_code\nLOG_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_photo/\nTASK_PHOTO_NGINX_PATH: /task_photo/\nTASK_VIDEO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/task_file/\nTASK_VIDEO_NGINX_PATH: /task_video/\ngeneral_default_url: http://127.0.0.1:18810/text_cls\nadd_userInfo_interceptor: true\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: controller\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default', '2706682d09eb4c65acf7aab5557dbfcc', '2021-11-17 19:44:22', '2022-09-02 03:45:15', 'nacos', '192.168.18.16', '', 'f76627e8-ea63-4192-8250-df0fbf384902', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (297, 'controller_designbot.yml', 'DEFAULT_GROUP', 'server:\n  port: 19193\n  servlet:\n    context-path: /controller-designbot\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3307/lcy?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\nredis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.controller.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nrobot_unconn: true\nknife4j:\n  enable: true    \nquartz_url: jdbc:mysql://127.0.0.1:3307/lcy?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\nquartz_user: datae\nquartz_password: Sd_12345', '362d6ba3c915161abec44c03533b0917', '2021-11-17 19:44:22', '2021-11-17 19:44:22', NULL, '192.168.23.2', '', 'f76627e8-ea63-4192-8250-df0fbf384902', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (298, 'controller_warning_java.yml', 'DEFAULT_GROUP', 'server:\n  port: 19094\n  servlet:\n    context-path: /controller-warning\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n\n# spring:\n#   datasource:\n#     url: jdbc:dm://172.168.200.16:5236\n#     username: SYSDBA\n#     password: dmdba1234\n#     type: com.alibaba.druid.pool.DruidDataSource\n#     driver-class-name: dm.jdbc.driver.DmDriver \n\n  #redis#\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  # mapper-locations: classpath:DM8mapper/*.xml\n  type-aliases-package: cn.sendi.controller.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nrobot_unconn: true\nknife4j:\n  enable: true    \nquartz_url: jdbc:mysql://127.0.0.1:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\nquartz_user: datae\nquartz_password: Sd_12345\nocr_default_url: http://127.0.0.1:18888/image_code\nLOG_PATH: /usr/local/lib/controller_java/run_log/\nPROCESS_PATH: /usr/local/lib/controller_java/process/\nTASK_PHOTO_PATH: /usr/local/lib/controller_java/run_photo/\nTASK_FILE_PATH: /usr/local/lib/controller_java/task_file/\nTASK_PHOTO_NGINX_PATH: https://127.0.0.1:44388/task_photo/\nTASK_VIDEO_PATH: /usr/local/lib/controller_java/run_video/\ngeneral_default_url: http://127.0.0.1:18810/text_cls', '797ee1f2b02e2047381d2c987bf6c987', '2021-11-17 19:44:22', '2021-11-17 19:44:22', NULL, '192.168.23.2', '', 'f76627e8-ea63-4192-8250-df0fbf384902', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (299, 'datae-application-base.yml', 'DEFAULT_GROUP', 'datae:\n  permission:\n    redis: {\n      ip: 192.168.18.17,\n      port: 6379,\n      password: Sd_12345,\n      database: 0\n    }\nspring:\n  redis:\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n', '0aa4d414d27c2bdb4034e4f358fb95bb', '2021-11-17 19:44:22', '2022-03-29 06:14:59', 'nacos', '192.168.18.16', '', 'f76627e8-ea63-4192-8250-df0fbf384902', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (300, 'datae-authentication-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9040\n  servlet:\n    context-path: /auth\n\ndatae:\n  auth:\n    enabled: true\n    checkCodeBasePath: /tmp/check_code_image\n    ignoreCheckCode: true\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n    druid: {\n      filters: stat,\n      maxActive: 20,\n      initialSize: 10,\n      maxWait: 60000,\n      minIdle: 1,\n      timeBetweenEvictionRunsMillis: 60000,\n      minEvictableIdleTimeMillis: 300000,\n      validationQuery: select \'x\',\n      testWhileIdle: true,\n      testOnBorrow: false,\n      testOnReturn: false,\n      poolPreparedStatements: true,\n      maxOpenPreparedStatements: 20\n    }\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n\n#日志配置\nlogging:\n  level:\n    cn.gzsendi: debug', 'ae7c05a10fbe1637c52595f0600e0ebd', '2021-11-17 19:44:22', '2022-07-04 09:06:21', 'nacos', '192.168.18.16', '', 'f76627e8-ea63-4192-8250-df0fbf384902', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (301, 'datae-base.yml', 'DEFAULT_GROUP', 'spring:\n  devtools:\n    restart: \n      enabled: false\n  cloud:\n    nacos:\n      discovery: \n        server-addr: \'192.168.18.17:9002\'\n        namespace: f76627e8-ea63-4192-8250-df0fbf384902\nswagger:\n    enabled: true\n# management:\n#   endpoint:\n#     health: \n#       show-details: always\n#   endpoints:\n#     web:\n#       exposure: \n#         include: \'*\'\n# 关闭actuator的所有端点\nmanagement:\n  endpoints:\n    enabled-by-default: false\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default: \n        connectTimeout: 25000\n        readTimeout: 25000\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker: \n        requestVolumeThreshold: 1000\n      execution:\n        timeout: \n          enabled: true\n        isolation:\n          thread: \n            timeoutInMilliseconds: 20000\nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    cn.gzsendi.rpa.warning: debug\n  file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7', 'aaef0983228ebbfc186412230b5b896a', '2021-11-17 19:44:22', '2022-10-09 09:31:09', 'nacos', '192.168.18.16', '', 'f76627e8-ea63-4192-8250-df0fbf384902', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (302, 'datae-gateway.yml', 'DEFAULT_GROUP', 'server:\n  port: 9030\n  tomcat:\n    max-threads: 100\n    accept-count: 2000\n    max-connections: 2000\n\nspring:\n  servlet:\n    #文件上传大小限制\n    multipart:\n      maxRequestSize: 100MB\n      max-file-size: 100MB\n  cloud:\n    gateway:\n      #基于手动设置进行路由\n      routes:\n        #登录模拟认证服务器\n        - id: loginAdapt\n          uri: forward:/loginAdapt\n          predicates:\n            - Path=/bigdata/loginController.do\n          filters:\n            - AuthSkipFilterFactory\n        #登录模拟菜单栏\n        - id: menu\n          uri: forward:/menu\n          predicates:\n            - Path=/bigdata/nav/menu\n          filters:\n            - AuthSkipFilterFactory\n        #登录模拟验证码\n        - id: indentifyIamge\n          uri: forward:/indentifyIamge\n          predicates:\n            - Path=/bigdata/loginController/getIndentifyIamge\n          filters:\n            - AuthSkipFilterFactory\n        ####################   RPA start   #######################\n        # 认证服务swagger\n        - id: auth_swagger\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_user_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/user/**\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_token_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/token/**\n        # # 流程易平台\n        # - id: controller-remake\n        #   uri: lb://controller\n        #   predicates:\n        #     - Path=/controller/swagger-ui.html,/controller/webjars/**,/controller/swagger-resources/**,/controller/v2/api-docs\n        #   filters:\n        #     - AuthSkipFilterFactory\n        # 流程易基础系统服务\n        - id: rpa-system-swagger\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # controller-swagger\n        - id: controller-swagger\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 任务队列swagger\n        - id: taskQueue-swagger\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 设计器服务swagger\n        - id: designer-swagger\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人服务swagger\n        - id: robot-swagger\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-reload\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/casbinController/reload\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system1\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/**\n        - id: component-market-server\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/**\n        - id: rpa-robot-server\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/**\n        ####################   RPA end  #######################\n        #数据集\n        #数据挖掘\n        #仪表盘\n        #全文搜索\n        #数据中心\n        #数据中心\n        #MYSQL查询调用\n        # 设计器登录    \n        - id: controller-designer-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/designerLogin/signIn\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人登录    \n        - id: controller-robot-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/robotLogin/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1    \n        - id: controller-api1\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V2    \n        - id: controller-api2\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 控制台服务\n        - id: controller\n          uri: lb://controller\n          predicates:\n            - Path=/controller/**\n        # 任务队列服务\n        - id: rpa-taskQueue-server\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/**\n        # 设计器服务\n        - id: rpa-designer-server\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/**\n        - id: controller-warning\n          uri: lb://controller-warning\n          predicates:\n            - Path=/controller-warning/**  \n\n      #基于服务发现进行路由\n#hystrix 取消超时\nhystrix:\n  #10分钟熔断\n  metrics:\n    enabled: true\n    polling-interval-ms: 20000\n\nlogging:\n  level:\n    # org.springframework: debug\n    cn.gzsendi.datae: debug', '06135a5aa3dc2653755835466b99e500', '2021-11-17 19:44:22', '2021-11-17 19:44:22', NULL, '192.168.23.2', '', 'f76627e8-ea63-4192-8250-df0fbf384902', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (303, 'datae-sleuth-base.yml', 'DEFAULT_GROUP', 'spring:\r\n  zipkin:\r\n    sender:\r\n      type: kafka\r\n    ##测试\r\n    # 使用http进行链路信息提交时 若zipkin服务器加入nacos集群 则使用应用名进行base-url配置 是否添加http://前缀可选\r\n    # base-url: datae-sleuth-server\r\n    # base-url: http://datae-sleuth-server\r\n    # base-url: http://192.168.23.184:9010\r\n  kafka:\r\n    bootstrap-servers: ${datae.common.kafka.bootstrap-servers}\r\n  sleuth:\r\n    sampler:\r\n      probability: 0.0', '07bb8afe0f5d2bd919b81c79cfcd1c08', '2021-11-17 19:44:22', '2021-11-17 19:44:22', NULL, '192.168.23.2', '', 'f76627e8-ea63-4192-8250-df0fbf384902', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (304, 'datae-system-base.yml', 'DEFAULT_GROUP', 'casbin:\n    enableCasbin: true\n    storeType: jdbc\n    initializeSchema: create\n    model: classpath:casbin/model.conf\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.23.60:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n    druid: {\n      filters: stat,\n      maxActive: 20,\n      initialSize: 10,\n      maxWait: 60000,\n      minIdle: 1,\n      timeBetweenEvictionRunsMillis: 60000,\n      minEvictableIdleTimeMillis: 300000,\n      validationQuery: select \'x\',\n      testWhileIdle: true,\n      testOnBorrow: false,\n      testOnReturn: false,\n      poolPreparedStatements: true,\n      maxOpenPreparedStatements: 20\n    }\n  redis:\n    database: 0\n    host: 192.168.23.60\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n', 'a8928110db72f5d755c6815b83d0e531', '2021-11-17 19:44:31', '2021-11-18 19:50:07', 'nacos', '192.168.23.2', '', 'f76627e8-ea63-4192-8250-df0fbf384902', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (305, 'datae-system-server.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 9001\r\n\r\n# 日志配置\r\nlogging:\r\n  level:\r\n    cn.gzsendi: debug', '4753cff431f31fd4ceaa21fe1e081e04', '2021-11-17 19:44:31', '2021-11-17 19:44:31', NULL, '192.168.23.2', '', 'f76627e8-ea63-4192-8250-df0fbf384902', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (306, 'rpa-designer-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19100\n  servlet:\n    context-path: /designer\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n    \nPROCESS_PATH: /usr/local/lib/controller-java_2.0.0/rpa-designer-server-2.0.0/process/\n\n# 加入seata配置\nseata:\n  use-jdk-proxy: true\n  enabled: true\n  application-id: designer\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default', '661706b1b95bcd035131b1250a1631e3', '2021-11-17 19:44:31', '2022-08-29 07:36:31', 'nacos', '192.168.18.16', '', 'f76627e8-ea63-4192-8250-df0fbf384902', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (307, 'rpa-robot-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19098\n  servlet:\n    context-path: /rpa-robot-server\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n  #redis#\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.controller.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nswagger:\n  enable: true  \nocr_default_url: http://127.0.0.1:18888/image_code\nTASK_PHOTO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_photo/\nTASK_FILE_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/task_file/\nTASK_VIDEO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_video/\ngeneral_default_url: http://127.0.0.1:18810/text_cls\nreconnTime: 300\n\nfailMessage:\n  running_task_not_concurrent_message: 机器人正在运行不能并发的流程，需要等待任务运行结束\n  wait_task_not_concurrent_message: 等待运行的任务为独占流程，需要等待机器人正在运行的任务结束', '60738551bb897d27307017b2da09b6fe', '2021-11-17 19:44:31', '2022-03-30 07:05:03', 'nacos', '192.168.18.16', '', 'f76627e8-ea63-4192-8250-df0fbf384902', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (308, 'rpa-system-server.yml', 'DEFAULT_GROUP', 'server:\n  # 9000为原版环境；9001为dev环境；9002已被nacos占用\n  port: 9000\n  servlet:\n    context-path: /system\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    default-enum-type-handler: com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler\n    cache-enabled: true\ncasbin:\n    enableCasbin: true\n    storeType: jdbc\n    initializeSchema: create\n    model: classpath:casbin/model.conf\nswagger:\n    enabled: true\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n    druid: {\n      filters: stat,\n      maxActive: 20,\n      initialSize: 10,\n      maxWait: 60000,\n      minIdle: 1,\n      timeBetweenEvictionRunsMillis: 60000,\n      minEvictableIdleTimeMillis: 300000,\n      validationQuery: select \'x\',\n      testWhileIdle: true,\n      testOnBorrow: false,\n      testOnReturn: false,\n      poolPreparedStatements: true,\n      maxOpenPreparedStatements: 20\n    }\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\nlogging:\n  level:\n    cn.gzsendi: DEBUG\n    \n# 加入seata配置\nseata:\n  use-jdk-proxy: true\n  enabled: true\n  application-id: system\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default', '5072b7535a4ee8fda098f2a8f835d06a', '2021-11-17 19:44:31', '2022-07-29 09:29:11', 'nacos', '192.168.18.16', '', 'f76627e8-ea63-4192-8250-df0fbf384902', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (309, 'rpa-taskQueue-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19099\n  servlet:\n    context-path: /taskQueue\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    # 控制台是否打印SQL语句\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nLOG_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_log/\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: taskQueue\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      group : SEATA_GROUP\n      cluster: default\n  config:\n    type: nacos\n    nacos:\n      group: SEATA_GROUP\n      cluster: default\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      server-addr: 192.168.18.17:9002\n  service:\n    vgroup-mapping:\n      my_test_tx_group: default', 'bd8a473bda8417ca66b4e372a52b912a', '2021-11-17 19:44:31', '2022-08-27 09:55:17', 'nacos', '192.168.18.16', '', 'f76627e8-ea63-4192-8250-df0fbf384902', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (310, 'service.vgroupMapping.my_test_tx_group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2021-11-17 19:44:31', '2021-11-17 19:44:31', NULL, '192.168.23.2', '', 'f76627e8-ea63-4192-8250-df0fbf384902', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (315, 'online_update.yml', 'DEFAULT_GROUP', 'server:\n  port: 15556\n  servlet:\n    context-path: /online-update\n  \nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\nknife4j:\n  enable: true    \nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n\n#productReleasePlatformIpAddr: 103.215.44.37:8889\nproductReleasePlatformIpAddr: 127.0.0.1:8889\ncheckVersionUpdateUri: /product-release-platform/onlineUpdate/checkVersionUpdate\ngetUpdatePkgDownloadPathUri: /product-release-platform/onlineUpdate/getUpdatePkgDownloadPath\ncharCodeValue: OTc0OTU3YzctMDFmMi00MGMwLWExZTctMTczZjdmMjg3MjE4\ncharCodeKey: char-code\n', 'd42b7c69c149c910935047e57014d90f', '2021-11-18 02:26:46', '2023-03-28 05:58:33', 'nacos', '192.168.18.3', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (336, 'ai-system-server-test.yml', 'DEFAULT_GROUP', 'server:\n  port: 9200\n  servlet:\n    context-path: /aiProject\nspring:\n  redis:\n    host: 172.168.201.90\n    port: 6379\n    password: Sd_12345\n  mvc:\n    view:\n      prefix: classpath:/templates/\n      suffix: .html\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://172.168.201.90:3306/ai_system?useSSL=false&characterEncoding=UTF-8\n    username: datae\n    password: Sd_12345\n  servlet:\n    multipart:\n      max-request-size: 1024MB\n      max-file-size: 1024MB\n\n\nmybatis-plus:\n  mapper-locations: classpath:mapping/*.xml\n  configuration:\n    map-underscore-to-camel-case: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n\nai:\n  linuxBaseUrl: /usr/local/lib/ai_system_server/files/\n  windowsBaseUrl: D:\\ai_system\\\n  verificationCodeExtends: jpg,zip\n  address: http://172.168.201.90:{0}{1}\n  #机器人交互\n  robot:\n    runRobotUrl: https://172.168.201.90:44391/controller/v2.0/api/runProcessWithNoFile  #运行机器人流程\n    cancelRobotUrl: https://172.168.201.90:44391/controller/v1.0/api/cancelTask         #\n    robotStatus: https://172.168.201.90:44391/controller/v1.0/api/selectRobotStatusById\n    taskStatus: https://172.168.201.90:44391/controller/v1.0/api/showResultByTaskId\n    key: 29359b15-c480-426c-b3c0-6d247200f67c\n    body:\n      callbackUrl:\n      inputValues:\n      processId: 1116\n      robotIds:', '81a7cfbe30d852d18bcc8eef12bbcb7d', '2021-11-21 19:30:11', '2023-03-23 09:46:27', NULL, '192.168.18.3', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (342, 'component-market-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9234\n  servlet:\n    context-path: /component-market-server\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/component_market?allowMultiQueries=true&useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=utf8\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n\n  #redis#\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 5000s\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nknife4j:\n  enable: true    \nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn', '831add8361e61e982cec6ed073839f6f', '2021-11-22 23:53:25', '2023-05-08 02:52:01', 'nacos', '192.168.18.3', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (344, 'component-market-server-test.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 9234\r\n  servlet:\r\n    context-path: /component-market-server\r\n\r\nspring:\r\n  datasource:\r\n    url: jdbc:mysql://172.168.201.90:3306/component_market?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\r\n    username: datae\r\n    password: Sd_12345\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n\r\n  #redis#\r\n  redis:\r\n    database: 0\r\n    host: 127.0.0.1\r\n    port: 6379\r\n    password: Sd_12345\r\n    timeout: 5000s\r\n#mybatis#\r\nmybatis:\r\n  mapper-locations: classpath:mapper/*.xml\r\n  type-aliases-package: cn.sendi.dao.entity\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\nknife4j:\r\n  enable: true    \r\nlogging:\r\n  level:\r\n    root: info\r\n    com.netflix: warn\r\n    com.alibaba.nacos.client.naming: warn', 'f82f89f2a2461a0de2df45164d10ef98', '2021-11-23 00:26:25', '2023-03-23 09:46:27', NULL, '192.168.18.3', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (347, 'rpa-warning-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19094\n  servlet:\n    context-path: /warning\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    default-enum-type-handler: com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler\n    cache-enabled: true\ncasbin:\n    enableCasbin: true\n    storeType: jdbc\n    initializeSchema: create\n    model: classpath:casbin/model.conf\nswagger:\n    enabled: true\nspring:\n  datasource:\n    url: jdbc:mysql://172.168.201.90:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n\n\n  #redis#\n  redis:\n    database: 0\n    host: 172.168.200.243\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\n\nrobot_unconn: true\nknife4j:\n  enable: true    \nquartz_url: jdbc:mysql://172.168.201.90:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\nquartz_user: datae\nquartz_password: Sd_12345', '48e62bc18538117dab31560bf05fcfa2', '2021-11-25 00:37:18', '2021-11-25 00:37:18', NULL, '172.168.202.52', '', 'bc51c982-83ed-47a4-be84-570a17234e39', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (348, 'product-release-platform.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 19093\r\n  servlet:\r\n    context-path: /product-release-platform\r\n\r\nspring:\r\n  datasource:\r\n    url: jdbc:mysql://172.168.201.90:3306/product_release_platform?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\r\n    username: datae\r\n    password: Sd_12345\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    driver-class-name: com.mysql.jdbc.Driver\r\n\r\n# spring:\r\n#   datasource:\r\n#     url: jdbc:dm://172.168.200.16:5236\r\n#     username: SYSDBA\r\n#     password: dmdba1234\r\n#     type: com.alibaba.druid.pool.DruidDataSource\r\n#     driver-class-name: dm.jdbc.driver.DmDriver \r\n\r\n  #redis#\r\n  redis:\r\n    database: 0\r\n    host: 172.168.201.90\r\n    port: 6379\r\n    password: Sd_12345\r\n    jedis:\r\n      pool:\r\n        max-active: 8\r\n        max-idle: 8\r\n        max-wait: -1\r\n        min-idle: 5\r\n    timeout: 5000s\r\n#mybatis#\r\nmybatis:\r\n  mapper-locations: classpath:mapper/*.xml\r\n  # mapper-locations: classpath:DM8mapper/*.xml\r\n  type-aliases-package: cn.sendi.dao.entity\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\nknife4j:\r\n  enable: true    \r\nlogging:\r\n  level:\r\n    root: info\r\n    com.netflix: warn\r\n    com.alibaba.nacos.client.naming: warn', '1cb69ded2e9d17c95753f5a1cbdec08c', '2021-11-25 00:37:18', '2021-11-25 00:37:18', NULL, '172.168.202.52', '', 'bc51c982-83ed-47a4-be84-570a17234e39', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (349, 'controller.yml', 'DEFAULT_GROUP', 'server:\n  port: 19090\n  servlet:\n    context-path: /controller\nspring:\n  datasource:\n    url: jdbc:mysql://172.168.200.243:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 172.168.200.243\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.controller.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    \nswagger:\n  enable: true  \n\nrobot_unconn: true    \nquartz_url: jdbc:mysql://172.168.200.243:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\nquartz_user: datae\nquartz_password: Sd_12345\nocr_default_url: http://127.0.0.1:18888/image_code\nLOG_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_photo/\nTASK_PHOTO_NGINX_PATH: /task_photo/\nTASK_VIDEO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/task_file/\nTASK_VIDEO_NGINX_PATH: /task_video/\ngeneral_default_url: http://127.0.0.1:18810/text_cls\nadd_userInfo_interceptor: true\n\nseata:\n  enabled: true\n  application-id: controller\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 172.168.200.243:9002\n      group : SEATA_GROUP\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      cluster: \"default\"\n  config:\n    type: nacos\n    nacos:\n      group: SEATA_GROUP\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      server-addr: 172.168.200.243:9002\n  service:\n    vgroup-mapping:\n      my_test_tx_group: default', 'ae20736ca14c4a3c39f9059f6cce90cb', '2021-11-25 00:37:18', '2021-11-25 19:31:03', 'nacos', '172.168.202.52', '', 'bc51c982-83ed-47a4-be84-570a17234e39', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (350, 'controller_designbot.yml', 'DEFAULT_GROUP', 'server:\n  port: 19193\n  servlet:\n    context-path: /controller-designbot\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3307/lcy?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\nredis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.controller.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nrobot_unconn: true\nknife4j:\n  enable: true    \nquartz_url: jdbc:mysql://127.0.0.1:3307/lcy?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\nquartz_user: datae\nquartz_password: Sd_12345', '362d6ba3c915161abec44c03533b0917', '2021-11-25 00:37:18', '2021-11-25 00:37:18', NULL, '172.168.202.52', '', 'bc51c982-83ed-47a4-be84-570a17234e39', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (351, 'controller_warning_java.yml', 'DEFAULT_GROUP', 'server:\n  port: 19094\n  servlet:\n    context-path: /controller-warning\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n\n# spring:\n#   datasource:\n#     url: jdbc:dm://172.168.200.16:5236\n#     username: SYSDBA\n#     password: dmdba1234\n#     type: com.alibaba.druid.pool.DruidDataSource\n#     driver-class-name: dm.jdbc.driver.DmDriver \n\n  #redis#\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  # mapper-locations: classpath:DM8mapper/*.xml\n  type-aliases-package: cn.sendi.controller.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nrobot_unconn: true\nknife4j:\n  enable: true    \nquartz_url: jdbc:mysql://127.0.0.1:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\nquartz_user: datae\nquartz_password: Sd_12345\nocr_default_url: http://127.0.0.1:18888/image_code\nLOG_PATH: /usr/local/lib/controller_java/run_log/\nPROCESS_PATH: /usr/local/lib/controller_java/process/\nTASK_PHOTO_PATH: /usr/local/lib/controller_java/run_photo/\nTASK_FILE_PATH: /usr/local/lib/controller_java/task_file/\nTASK_PHOTO_NGINX_PATH: https://127.0.0.1:44388/task_photo/\nTASK_VIDEO_PATH: /usr/local/lib/controller_java/run_video/\ngeneral_default_url: http://127.0.0.1:18810/text_cls', '797ee1f2b02e2047381d2c987bf6c987', '2021-11-25 00:37:18', '2021-11-25 00:37:18', NULL, '172.168.202.52', '', 'bc51c982-83ed-47a4-be84-570a17234e39', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (352, 'datae-application-base.yml', 'DEFAULT_GROUP', 'datae:\n  permission:\n    redis: {\n      ip: 192.168.18.17,\n      port: 6379,\n      password: Sd_12345,\n      database: 0\n    }\nspring:\n  redis:\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n', '0aa4d414d27c2bdb4034e4f358fb95bb', '2021-11-25 00:37:18', '2023-05-09 06:34:42', 'nacos', '192.168.18.3', '', 'bc51c982-83ed-47a4-be84-570a17234e39', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (353, 'datae-authentication-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9040\n  servlet:\n    context-path: /auth\n\ndatae:\n  auth:\n    enabled: true\n    checkCodeBasePath: /tmp/check_code_image\n    ignoreCheckCode: true\n\n#日志配置\nlogging:\n  level:\n    cn.gzsendi: debug', '073d1e2e50fdc2da5f68806591f6fd6e', '2021-11-25 00:37:18', '2021-11-25 00:37:18', NULL, '172.168.202.52', '', 'bc51c982-83ed-47a4-be84-570a17234e39', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (354, 'datae-base.yml', 'DEFAULT_GROUP', 'datae:\n  common:\n    kafka: {\n      bootstrap-servers: \'172.168.201.54:9092\'\n    }\nspring:\n  devtools:\n    restart: {\n      enabled: false\n    }\n  cloud:\n    nacos:\n      discovery: {\n        server-addr: \'192.168.18.17:9002\',\n        namespace: bc51c982-83ed-47a4-be84-570a17234e39\n      }\nmanagement:\n  endpoint:\n    health: {\n      show-details: always\n    }\n  endpoints:\n    web:\n      exposure: {\n        include: \'*\'\n      }\nfeign:\n  hystrix: {\n    enabled: true\n  }\n  client:\n    config:\n      default: {\n        connect-timeout: 25000,\n        read-timeout: 25000\n      }\nhystrix:\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker: {\n        requestVolumeThreshold: 1000\n      }\n      execution:\n        timeout: {\n          enabled: true\n        }\n        isolation:\n          thread: {\n            timeoutInMilliseconds: 20000\n          }\nribbon:\n  okhttp: {\n    enabled: true\n  }\n  connectTimeout: 5000\n  readTimeout: 5000\nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n  file: /home/sendi/datae-cloud/logs/${spring.application.name}/${spring.application.name}.log\n  file.max-history: 15\n', 'ad3ae5eebdee4357c0fe27c4fbea3b76', '2021-11-25 00:37:18', '2023-05-09 06:35:30', 'nacos', '192.168.18.3', '', 'bc51c982-83ed-47a4-be84-570a17234e39', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (355, 'datae-gateway.yml', 'DEFAULT_GROUP', 'server:\n  port: 9030\n  tomcat:\n    max-threads: 100\n    accept-count: 2000\n    max-connections: 2000\n\nspring:\n  servlet:\n    #文件上传大小限制\n    multipart:\n      maxRequestSize: 100MB\n      max-file-size: 100MB\n  cloud:\n    gateway:\n      #基于手动设置进行路由\n      routes:\n        #登录模拟认证服务器\n        - id: loginAdapt\n          uri: forward:/loginAdapt\n          predicates:\n            - Path=/bigdata/loginController.do\n          filters:\n            - AuthSkipFilterFactory\n        #登录模拟菜单栏\n        - id: menu\n          uri: forward:/menu\n          predicates:\n            - Path=/bigdata/nav/menu\n          filters:\n            - AuthSkipFilterFactory\n        #登录模拟验证码\n        - id: indentifyIamge\n          uri: forward:/indentifyIamge\n          predicates:\n            - Path=/bigdata/loginController/getIndentifyIamge\n          filters:\n            - AuthSkipFilterFactory\n        ####################   RPA start   #######################\n        # 认证服务swagger\n        - id: auth_swagger\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_user_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/user/**\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_token_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/token/**\n        # # 流程易平台\n        # - id: controller-remake\n        #   uri: lb://controller\n        #   predicates:\n        #     - Path=/controller/swagger-ui.html,/controller/webjars/**,/controller/swagger-resources/**,/controller/v2/api-docs\n        #   filters:\n        #     - AuthSkipFilterFactory\n        # 流程易基础系统服务\n        - id: rpa-system-swagger\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # controller-swagger\n        - id: controller-swagger\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 任务队列swagger\n        - id: taskQueue-swagger\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 设计器服务swagger\n        - id: designer-swagger\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人服务swagger\n        - id: robot-swagger\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-reload\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/casbinController/reload\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system1\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/**\n        - id: component-market-server\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/**\n        - id: rpa-robot-server\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/**\n        ####################   RPA end  #######################\n        #数据集\n        #数据挖掘\n        #仪表盘\n        #全文搜索\n        #数据中心\n        #数据中心\n        #MYSQL查询调用\n        # 设计器登录    \n        - id: controller-designer-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/designerLogin/signIn\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人登录    \n        - id: controller-robot-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/robotLogin/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1    \n        - id: controller-api1\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V2    \n        - id: controller-api2\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 控制台服务\n        - id: controller\n          uri: lb://controller\n          predicates:\n            - Path=/controller/**\n        # 任务队列服务\n        - id: rpa-taskQueue-server\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/**\n        # 设计器服务\n        - id: rpa-designer-server\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/**\n        - id: controller-warning\n          uri: lb://controller-warning\n          predicates:\n            - Path=/controller-warning/**  \n\n      #基于服务发现进行路由\n#hystrix 取消超时\nhystrix:\n  #10分钟熔断\n  metrics:\n    enabled: true\n    polling-interval-ms: 20000\n\nlogging:\n  level:\n    # org.springframework: debug\n    cn.gzsendi.datae: debug', '06135a5aa3dc2653755835466b99e500', '2021-11-25 00:37:18', '2021-11-25 00:37:18', NULL, '172.168.202.52', '', 'bc51c982-83ed-47a4-be84-570a17234e39', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (356, 'datae-sleuth-base.yml', 'DEFAULT_GROUP', 'spring:\r\n  zipkin:\r\n    sender:\r\n      type: kafka\r\n    ##测试\r\n    # 使用http进行链路信息提交时 若zipkin服务器加入nacos集群 则使用应用名进行base-url配置 是否添加http://前缀可选\r\n    # base-url: datae-sleuth-server\r\n    # base-url: http://datae-sleuth-server\r\n    # base-url: http://192.168.23.184:9010\r\n  kafka:\r\n    bootstrap-servers: ${datae.common.kafka.bootstrap-servers}\r\n  sleuth:\r\n    sampler:\r\n      probability: 0.0', '07bb8afe0f5d2bd919b81c79cfcd1c08', '2021-11-25 00:37:18', '2021-11-25 00:37:18', NULL, '172.168.202.52', '', 'bc51c982-83ed-47a4-be84-570a17234e39', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (357, 'datae-system-base.yml', 'DEFAULT_GROUP', 'casbin:\n    enableCasbin: true\n    storeType: jdbc\n    initializeSchema: create\n    model: classpath:casbin/model.conf\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n    druid: {\n      filters: stat,\n      maxActive: 20,\n      initialSize: 10,\n      maxWait: 60000,\n      minIdle: 1,\n      timeBetweenEvictionRunsMillis: 60000,\n      minEvictableIdleTimeMillis: 300000,\n      validationQuery: select \'x\',\n      testWhileIdle: true,\n      testOnBorrow: false,\n      testOnReturn: false,\n      poolPreparedStatements: true,\n      maxOpenPreparedStatements: 20\n    }\n  redis:\n    database: 0\n    host: 172.168.200.243\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n', 'e2c403e5859b85559983507ee273cb07', '2021-11-25 00:37:29', '2023-05-09 06:36:01', 'nacos', '192.168.18.3', '', 'bc51c982-83ed-47a4-be84-570a17234e39', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (358, 'datae-system-server.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 9001\r\n\r\n# 日志配置\r\nlogging:\r\n  level:\r\n    cn.gzsendi: debug', '4753cff431f31fd4ceaa21fe1e081e04', '2021-11-25 00:37:29', '2021-11-25 00:37:29', NULL, '172.168.202.52', '', 'bc51c982-83ed-47a4-be84-570a17234e39', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (359, 'rpa-designer-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19100\n  servlet:\n    context-path: /designer\nspring:\n  datasource:\n    url: jdbc:mysql://172.168.200.243:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 172.168.200.243\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n    \nPROCESS_PATH: /usr/local/lib/controller-java_2.0.0/rpa-designer-server-2.0.0/process/\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: designer\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 172.168.200.243:9002\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      group : SEATA_GROUP\n      cluster: default\n  config:\n    type: nacos\n    nacos:\n      group: SEATA_GROUP\n      cluster: default\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      server-addr: 172.168.200.243:9002\n  service:\n    vgroup-mapping:\n      my_test_tx_group: default', '02c44508eb4eaaf34c2cab73f2ccf91c', '2021-11-25 00:37:29', '2021-12-29 00:13:11', 'nacos', '192.168.75.74', '', 'bc51c982-83ed-47a4-be84-570a17234e39', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (360, 'rpa-robot-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19098\n  servlet:\n    context-path: /rpa-robot-server\nspring:\n  datasource:\n    url: jdbc:mysql://172.168.200.243:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n  #redis#\n  redis:\n    database: 0\n    host: 172.168.200.243\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.controller.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nswagger:\n  enable: true  \nocr_default_url: http://127.0.0.1:18888/image_code\nTASK_PHOTO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_photo/\nTASK_FILE_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/task_file/\nTASK_VIDEO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_video/\ngeneral_default_url: http://127.0.0.1:18810/text_cls\n\nfailMessage:\n  running_task_not_concurrent_message: 机器人正在运行不能并发的流程，需要等待任务运行结束\n  wait_task_not_concurrent_message: 等待运行的任务为独占流程，需要等待机器人正在运行的任务结束', 'dc64596cffa38fed3849832ab02d8e2d', '2021-11-25 00:37:29', '2021-12-24 00:02:41', 'nacos', '192.168.75.74', '', 'bc51c982-83ed-47a4-be84-570a17234e39', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (361, 'rpa-system-server.yml', 'DEFAULT_GROUP', 'server:\n  # 9000为原版环境；9001为dev环境；9002已被nacos占用\n  port: 9000\n  servlet:\n    context-path: /system\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    default-enum-type-handler: com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler\n    cache-enabled: true\ncasbin:\n    enableCasbin: true\n    storeType: jdbc\n    initializeSchema: create\n    model: classpath:casbin/model.conf\nswagger:\n    enabled: true\nspring:\n  datasource:\n    url: jdbc:mysql://172.168.200.243:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n    druid: {\n      filters: stat,\n      maxActive: 20,\n      initialSize: 10,\n      maxWait: 60000,\n      minIdle: 1,\n      timeBetweenEvictionRunsMillis: 60000,\n      minEvictableIdleTimeMillis: 300000,\n      validationQuery: select \'x\',\n      testWhileIdle: true,\n      testOnBorrow: false,\n      testOnReturn: false,\n      poolPreparedStatements: true,\n      maxOpenPreparedStatements: 20\n    }\n  redis:\n    database: 0\n    host: 172.168.200.243\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\nlogging:\n  level:\n    cn.gzsendi: DEBUG\n    \n# 加入seata配置\nseata:\n  enabled: true\n  application-id: rpa-system-server\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 172.168.200.243:9002\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      group : SEATA_GROUP\n      cluster: default\n  config:\n    type: nacos\n    nacos:\n      group: SEATA_GROUP\n      cluster: default\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      server-addr: 172.168.200.243:9002\n  service:\n    vgroup-mapping:\n      my_test_tx_group: default', 'de7e3320652f7e485ce2571bb9dfc4a3', '2021-11-25 00:37:29', '2021-11-25 19:30:46', 'nacos', '172.168.202.52', '', 'bc51c982-83ed-47a4-be84-570a17234e39', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (362, 'rpa-taskQueue-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19099\n  servlet:\n    context-path: /taskQueue\nspring:\n  datasource:\n    url: jdbc:mysql://172.168.200.243:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 172.168.200.243\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    # 控制台是否打印SQL语句\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nLOG_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_log/\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: taskQueue\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 172.168.200.243:9002\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      group : SEATA_GROUP\n      cluster: default\n  config:\n    type: nacos\n    nacos:\n      group: SEATA_GROUP\n      cluster: default\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      server-addr: 172.168.200.243:9002\n  service:\n    vgroup-mapping:\n      my_test_tx_group: default', '372302694a7989e011bd21daa2e71e55', '2021-11-25 00:37:29', '2021-12-22 03:13:30', 'nacos', '192.168.75.74', '', 'bc51c982-83ed-47a4-be84-570a17234e39', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (363, 'service.vgroupMapping.my_test_tx_group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2021-11-25 00:37:29', '2021-11-25 00:37:29', NULL, '172.168.202.52', '', 'bc51c982-83ed-47a4-be84-570a17234e39', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (379, 'product-release-platform.yml', 'DEFAULT_GROUP', 'server:\n  port: 19093\n  servlet:\n    context-path: /product-release-platform\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/product_release_platform?allowMultiQueries=true&useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=utf8\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n\n  #redis#\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 5000s\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nknife4j:\n  enable: true    \nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn', '75b8eb49cf84823891320cf98c5bc669', '2021-12-14 00:08:30', '2023-05-08 02:52:16', 'nacos', '192.168.18.3', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (380, 'online_update.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 15556\r\n  servlet:\r\n    context-path: /online-update\r\n  \r\nspring:\r\n  datasource:\r\n    url: jdbc:mysql://192.168.23.60:3306/lcy?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\r\n    username: datae\r\n    password: Sd_12345\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    driver-class-name: com.mysql.jdbc.Driver\r\n  redis:\r\n    database: 0\r\n    host: 127.0.0.1\r\n    port: 6379\r\n    password: Sd_12345\r\n    timeout: 10000\r\n    lettuce:\r\n      pool: {\r\n        max-active: 10,\r\n        max-wait: -1,\r\n        max-idle: 8,\r\n        min-idle: 0\r\n      }\r\n\r\nknife4j:\r\n  enable: true    \r\nlogging:\r\n  level:\r\n    root: info\r\n    com.netflix: warn\r\n    com.alibaba.nacos.client.naming: warn\r\n\r\nproductReleasePlatformIpAddr: 103.215.44.37:8889\r\ncheckVersionUpdateUri: /product-release-platform/onlineUpdate/checkVersionUpdate\r\ngetUpdatePkgDownloadPathUri: /product-release-platform/onlineUpdate/getUpdatePkgDownloadPath\r\ncharCodeValue: OTc0OTU3YzctMDFmMi00MGMwLWExZTctMTczZjdmMjg3MjE4\r\ncharCodeKey: char-code\r\n', 'e88ef8aaa8744300ddfde96704031a3b', '2021-12-14 03:25:05', '2021-12-14 03:25:05', NULL, '192.168.75.252', '', 'bc51c982-83ed-47a4-be84-570a17234e39', '在线升级', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (393, 'rpa-common.yml', 'DEFAULT_GROUP', 'minIO: \n    enabled: true\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://172.168.200.243:9000\n    task_run_log_path: /run_log/\n', '9b92d593acbf522304f0bb36dc79f382', '2021-12-22 02:48:01', '2021-12-23 23:52:30', 'nacos', '192.168.75.74', '', 'bc51c982-83ed-47a4-be84-570a17234e39', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (404, 'rpa-common.yml', 'DEFAULT_GROUP', 'minIO: \n    # 是否启动了minIO\n    enabled: false\n    # 启动了minIO后，文件路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://127.0.0.1:9010\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n\nLOG_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_photo/\nTASK_VIDEO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/task_file/\n\nPROCESS_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/process/\nMODULE_PACKAGE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/module_package/\n\nlcy:\n  systemLogPath:\n    - /usr/local/lib/rpa-cloud-3.0.0/datae-authentication-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/datae-gateway-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-system-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-console-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-taskQueue-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-warning-server-3.0.0/logs\n\nlicensePastDueMessage: 使用权限已到期-您的账号使用权限已到期，请联系业务人员或者拨打电话：400-830-3030续期，谢谢！\nlicensePastDueMessageTitle: 使用权限已到期\nchatGPT:\n    proxyHost: 192.168.62.20\n    proxyPort: 1080\n    apiKey: 123456\n    apiHost: https://api.openai.com/\n    mode: testMode', '9e5917a9bd36286edc598f5f013377f5', '2021-12-22 03:38:11', '2023-06-15 02:09:35', 'nacos', '192.168.18.3', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (504, 'controller.yml', 'DEFAULT_GROUP', 'server:\n  port: 19090\n  servlet:\n    context-path: /controller\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.controller.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    \nswagger:\n  enable: true  \n\nrobot_unconn: true    \nquartz_url: jdbc:mysql://127.0.0.1:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\nquartz_user: datae\nquartz_password: Sd_12345\nocr_default_url: http://127.0.0.1:18888/image_code\nLOG_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_photo/\nTASK_PHOTO_NGINX_PATH: /task_photo/\nTASK_VIDEO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/task_file/\nTASK_VIDEO_NGINX_PATH: /task_video/\ngeneral_default_url: http://127.0.0.1:18810/text_cls\nadd_userInfo_interceptor: true\n\nseata:\n  enabled: true\n  application-id: controller\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:9002\n      group : SEATA_GROUP\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      username: \"nacos\"\n      password: \"nacos\"\n      cluster: \"default\"\n  config:\n    type: nacos\n    nacos:\n      group: SEATA_GROUP\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      server-addr: 127.0.0.1:9002\n      username: \"nacos\"\n      password: \"nacos\"\n  service:\n    vgroup-mapping:\n      my_test_tx_group: default', 'b9d7cb34cfc9799cc9eb447c59d78c12', '2021-12-31 02:43:42', '2021-12-31 02:43:42', NULL, '192.168.75.74', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (505, 'controller_designbot.yml', 'DEFAULT_GROUP', 'server:\n  port: 19193\n  servlet:\n    context-path: /controller-designbot\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3307/lcy?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\nredis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.controller.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nrobot_unconn: true\nknife4j:\n  enable: true    \nquartz_url: jdbc:mysql://127.0.0.1:3307/lcy?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\nquartz_user: datae\nquartz_password: Sd_12345', '362d6ba3c915161abec44c03533b0917', '2021-12-31 02:43:42', '2021-12-31 02:43:42', NULL, '192.168.75.74', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (506, 'controller_warning_java.yml', 'DEFAULT_GROUP', 'server:\n  port: 19094\n  servlet:\n    context-path: /controller-warning\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n\n# spring:\n#   datasource:\n#     url: jdbc:dm://172.168.200.16:5236\n#     username: SYSDBA\n#     password: dmdba1234\n#     type: com.alibaba.druid.pool.DruidDataSource\n#     driver-class-name: dm.jdbc.driver.DmDriver \n\n  #redis#\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  # mapper-locations: classpath:DM8mapper/*.xml\n  type-aliases-package: cn.sendi.controller.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nrobot_unconn: true\nknife4j:\n  enable: true    \nquartz_url: jdbc:mysql://127.0.0.1:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\nquartz_user: datae\nquartz_password: Sd_12345\nocr_default_url: http://127.0.0.1:18888/image_code\nLOG_PATH: /usr/local/lib/controller_java/run_log/\nPROCESS_PATH: /usr/local/lib/controller_java/process/\nTASK_PHOTO_PATH: /usr/local/lib/controller_java/run_photo/\nTASK_FILE_PATH: /usr/local/lib/controller_java/task_file/\nTASK_PHOTO_NGINX_PATH: https://127.0.0.1:44388/task_photo/\nTASK_VIDEO_PATH: /usr/local/lib/controller_java/run_video/\ngeneral_default_url: http://127.0.0.1:18810/text_cls', '797ee1f2b02e2047381d2c987bf6c987', '2021-12-31 02:43:42', '2021-12-31 02:43:42', NULL, '192.168.75.74', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (507, 'datae-application-base.yml', 'DEFAULT_GROUP', 'datae:\n  permission:\n    redis: {\n      ip: 127.0.0.1,\n      port: 6379,\n      password: Sd_12345,\n      database: 0\n    }\nspring:\n  redis:\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n', 'e3a0d65320ef5b07b8048aec9c62e404', '2021-12-31 02:43:42', '2021-12-31 02:43:42', NULL, '192.168.75.74', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (508, 'datae-authentication-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9040\n  servlet:\n    context-path: /auth\n\ndatae:\n  auth:\n    enabled: true\n    checkCodeBasePath: /tmp/check_code_image\n    ignoreCheckCode: true\n\n#日志配置\nlogging:\n  level:\n    cn.gzsendi: debug', '073d1e2e50fdc2da5f68806591f6fd6e', '2021-12-31 02:43:42', '2021-12-31 02:43:42', NULL, '192.168.75.74', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (509, 'datae-base.yml', 'DEFAULT_GROUP', 'datae:\n  common:\n    kafka: {\n      bootstrap-servers: \'172.168.201.54:9092\'\n    }\nspring:\n  devtools:\n    restart: {\n      enabled: false\n    }\n  cloud:\n    nacos:\n      discovery: {\n        server-addr: \'127.0.0.1:9002\',\n        namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      }\nmanagement:\n  endpoint:\n    health: {\n      show-details: always\n    }\n  endpoints:\n    web:\n      exposure: {\n        include: \'*\'\n      }\nfeign:\n  hystrix: {\n    enabled: true\n  }\n  client:\n    config:\n      default: {\n        connect-timeout: 25000,\n        read-timeout: 25000\n      }\nhystrix:\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker: {\n        requestVolumeThreshold: 1000\n      }\n      execution:\n        timeout: {\n          enabled: true\n        }\n        isolation:\n          thread: {\n            timeoutInMilliseconds: 20000\n          }\nribbon:\n  okhttp: {\n    enabled: true\n  }\n  connectTimeout: 5000\n  readTimeout: 5000\nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n  file: /home/sendi/datae-cloud/logs/${spring.application.name}/${spring.application.name}.log\n  file.max-history: 15\n', 'bd2cd516839eef251a86d72903cbd1ab', '2021-12-31 02:43:42', '2021-12-31 02:43:42', NULL, '192.168.75.74', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (510, 'datae-gateway.yml', 'DEFAULT_GROUP', 'server:\n  port: 9030\n  tomcat:\n    max-threads: 100\n    accept-count: 2000\n    max-connections: 2000\n\nspring:\n  servlet:\n    #文件上传大小限制\n    multipart:\n      maxRequestSize: 100MB\n      max-file-size: 100MB\n  cloud:\n    gateway:\n      #基于手动设置进行路由\n      routes:\n        #登录模拟认证服务器\n        - id: loginAdapt\n          uri: forward:/loginAdapt\n          predicates:\n            - Path=/bigdata/loginController.do\n          filters:\n            - AuthSkipFilterFactory\n        #登录模拟菜单栏\n        - id: menu\n          uri: forward:/menu\n          predicates:\n            - Path=/bigdata/nav/menu\n          filters:\n            - AuthSkipFilterFactory\n        #登录模拟验证码\n        - id: indentifyIamge\n          uri: forward:/indentifyIamge\n          predicates:\n            - Path=/bigdata/loginController/getIndentifyIamge\n          filters:\n            - AuthSkipFilterFactory\n        ####################   RPA start   #######################\n        # 认证服务swagger\n        - id: auth_swagger\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_user_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/user/**\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_token_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/token/**\n        # # 流程易平台\n        # - id: controller-remake\n        #   uri: lb://controller\n        #   predicates:\n        #     - Path=/controller/swagger-ui.html,/controller/webjars/**,/controller/swagger-resources/**,/controller/v2/api-docs\n        #   filters:\n        #     - AuthSkipFilterFactory\n        # 流程易基础系统服务\n        - id: rpa-system-swagger\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # controller-swagger\n        - id: controller-swagger\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 任务队列swagger\n        - id: taskQueue-swagger\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 设计器服务swagger\n        - id: designer-swagger\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人服务swagger\n        - id: robot-swagger\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-reload\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/casbinController/reload\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system1\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/**\n        - id: rpa-robot-server\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/**\n        ####################   RPA end  #######################\n        #数据集\n        #数据挖掘\n        #仪表盘\n        #全文搜索\n        #数据中心\n        #数据中心\n        #MYSQL查询调用\n        # 设计器登录    \n        - id: controller-designer-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/designerLogin/signIn\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人登录    \n        - id: controller-robot-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/robotLogin/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1    \n        - id: controller-api1\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V2    \n        - id: controller-api2\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 控制台服务\n        - id: controller\n          uri: lb://controller\n          predicates:\n            - Path=/controller/**\n        # 任务队列服务\n        - id: rpa-taskQueue-server\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/**\n        # 设计器服务\n        - id: rpa-designer-server\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/**\n        - id: controller-warning\n          uri: lb://controller-warning\n          predicates:\n            - Path=/controller-warning/**  \n\n      #基于服务发现进行路由\n#hystrix 取消超时\nhystrix:\n  #10分钟熔断\n  metrics:\n    enabled: true\n    polling-interval-ms: 20000\n\nlogging:\n  level:\n    # org.springframework: debug\n    cn.gzsendi.datae: debug', 'a16c03f4b41c0b469ae5785039f75590', '2021-12-31 02:43:42', '2021-12-31 02:43:42', NULL, '192.168.75.74', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (511, 'datae-sleuth-base.yml', 'DEFAULT_GROUP', 'spring:\r\n  zipkin:\r\n    sender:\r\n      type: kafka\r\n    ##测试\r\n    # 使用http进行链路信息提交时 若zipkin服务器加入nacos集群 则使用应用名进行base-url配置 是否添加http://前缀可选\r\n    # base-url: datae-sleuth-server\r\n    # base-url: http://datae-sleuth-server\r\n    # base-url: http://192.168.23.184:9010\r\n  kafka:\r\n    bootstrap-servers: ${datae.common.kafka.bootstrap-servers}\r\n  sleuth:\r\n    sampler:\r\n      probability: 0.0', '07bb8afe0f5d2bd919b81c79cfcd1c08', '2021-12-31 02:43:42', '2021-12-31 02:43:42', NULL, '192.168.75.74', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (512, 'datae-system-base.yml', 'DEFAULT_GROUP', 'casbin:\n    enableCasbin: true\n    storeType: jdbc\n    initializeSchema: create\n    model: classpath:casbin/model.conf\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n    druid: {\n      filters: stat,\n      maxActive: 20,\n      initialSize: 10,\n      maxWait: 60000,\n      minIdle: 1,\n      timeBetweenEvictionRunsMillis: 60000,\n      minEvictableIdleTimeMillis: 300000,\n      validationQuery: select \'x\',\n      testWhileIdle: true,\n      testOnBorrow: false,\n      testOnReturn: false,\n      poolPreparedStatements: true,\n      maxOpenPreparedStatements: 20\n    }\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n', 'd10ce5f04b588cace15e4c55c160ef78', '2021-12-31 02:43:42', '2021-12-31 02:43:42', NULL, '192.168.75.74', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (513, 'datae-system-server.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 9001\r\n\r\n# 日志配置\r\nlogging:\r\n  level:\r\n    cn.gzsendi: debug', '4753cff431f31fd4ceaa21fe1e081e04', '2021-12-31 02:43:42', '2021-12-31 02:43:42', NULL, '192.168.75.74', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (514, 'rpa-designer-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19100\n  servlet:\n    context-path: /designer\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n    \nPROCESS_PATH: /usr/local/lib/controller-java_2.0.0/rpa-designer-server-2.0.0/process/\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: designer\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:9002\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      group : SEATA_GROUP\n      cluster: default\n  config:\n    type: nacos\n    nacos:\n      group: SEATA_GROUP\n      cluster: default\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      server-addr: 127.0.0.1:9002\n  service:\n    vgroup-mapping:\n      my_test_tx_group: default', 'e7cd72cdd76a20a390f8b04585d3575d', '2021-12-31 02:43:42', '2021-12-31 02:43:42', NULL, '192.168.75.74', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (515, 'rpa-robot-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19098\n  servlet:\n    context-path: /rpa-robot-server\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n  #redis#\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.controller.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nswagger:\n  enable: true  \nocr_default_url: http://127.0.0.1:18888/image_code\nTASK_PHOTO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_photo/\nTASK_FILE_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/task_file/\nTASK_VIDEO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_video/\ngeneral_default_url: http://127.0.0.1:18810/text_cls', 'a12b68283eb1a2c29c45b020b0f6616c', '2021-12-31 02:43:42', '2021-12-31 02:43:42', NULL, '192.168.75.74', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (516, 'rpa-system-server.yml', 'DEFAULT_GROUP', 'server:\n  # 9000为原版环境；9001为dev环境；9002已被nacos占用\n  port: 9000\n  servlet:\n    context-path: /system\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    default-enum-type-handler: com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler\n    cache-enabled: true\ncasbin:\n    enableCasbin: true\n    storeType: jdbc\n    initializeSchema: create\n    model: classpath:casbin/model.conf\nswagger:\n    enabled: true\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n    druid: {\n      filters: stat,\n      maxActive: 20,\n      initialSize: 10,\n      maxWait: 60000,\n      minIdle: 1,\n      timeBetweenEvictionRunsMillis: 60000,\n      minEvictableIdleTimeMillis: 300000,\n      validationQuery: select \'x\',\n      testWhileIdle: true,\n      testOnBorrow: false,\n      testOnReturn: false,\n      poolPreparedStatements: true,\n      maxOpenPreparedStatements: 20\n    }\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\nlogging:\n  level:\n    cn.gzsendi: DEBUG\n    \n# 加入seata配置\nseata:\n  enabled: true\n  application-id: rpa-system-server\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:9002\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      group : SEATA_GROUP\n      cluster: default\n  config:\n    type: nacos\n    nacos:\n      group: SEATA_GROUP\n      cluster: default\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      server-addr: 127.0.0.1:9002\n  service:\n    vgroup-mapping:\n      my_test_tx_group: default', '1329e67e71ad2eac8c78c3ead91f3d97', '2021-12-31 02:43:42', '2021-12-31 02:43:42', NULL, '192.168.75.74', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (517, 'rpa-taskQueue-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19099\n  servlet:\n    context-path: /taskQueue\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    # 控制台是否打印SQL语句\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nLOG_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_log/\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: taskQueue\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:9002\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      group : SEATA_GROUP\n      cluster: default\n  config:\n    type: nacos\n    nacos:\n      group: SEATA_GROUP\n      cluster: default\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      server-addr: 127.0.0.1:9002\n  service:\n    vgroup-mapping:\n      my_test_tx_group: default', 'b0dbe4f9de34bdb982ec25da820fa66c', '2021-12-31 02:43:42', '2021-12-31 02:43:42', NULL, '192.168.75.74', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (518, 'service.vgroupMapping.my_test_tx_group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2021-12-31 02:43:42', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (540, 'rpa-warning-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19094\n  servlet:\n    context-path: /warning\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\ncasbin:\n    enableCasbin: true\n    storeType: jdbc\n    initializeSchema: create\n    model: classpath:casbin/model.conf\nswagger:\n    enabled: true\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\n\nrobot_unconn: true\nknife4j:\n  enable: true\nquartz_url: jdbc:mysql://127.0.0.1:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\nquartz_user: datae\nquartz_password: Sd_12345\n\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n', '85d38efa5bc6a39d63405c0e9b216c7d', '2022-02-08 20:20:36', '2022-02-08 20:28:00', 'nacos', '172.168.10.105', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (541, 'controller.yml', 'DEFAULT_GROUP', 'server:\n  port: 19090\n  servlet:\n    context-path: /controller\nspring:\n  cloud:\n    inetutils:\n      preferred-networks: 172.168.200\n  datasource:\n    url: jdbc:mysql://172.168.200.243:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 172.168.200.243\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.controller.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    \nswagger:\n  enable: true  \n\nrobot_unconn: true    \nquartz_url: jdbc:mysql://172.168.200.243:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\nquartz_user: datae\nquartz_password: Sd_12345\nocr_default_url: http://127.0.0.1:18888/image_code\nLOG_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_photo/\nTASK_PHOTO_NGINX_PATH: /task_photo/\nTASK_VIDEO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/task_file/\nTASK_VIDEO_NGINX_PATH: /task_video/\ngeneral_default_url: http://127.0.0.1:18810/text_cls\nadd_userInfo_interceptor: true\n\nseata:\n  enabled: true\n  application-id: controller\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 172.168.200.243:9002\n      group : SEATA_GROUP\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      cluster: \"default\"\n  config:\n    type: nacos\n    nacos:\n      group: SEATA_GROUP\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      server-addr: 172.168.200.243:9002\n  service:\n    vgroup-mapping:\n      my_test_tx_group: default', '54c6ad3ba222ac2c5cad7b919555b07c', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (542, 'controller_designbot.yml', 'DEFAULT_GROUP', 'server:\n  port: 19193\n  servlet:\n    context-path: /controller-designbot\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3307/lcy?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\nredis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.controller.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nrobot_unconn: true\nknife4j:\n  enable: true    \nquartz_url: jdbc:mysql://127.0.0.1:3307/lcy?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\nquartz_user: datae\nquartz_password: Sd_12345', '362d6ba3c915161abec44c03533b0917', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (544, 'datae-application-base.yml', 'DEFAULT_GROUP', 'datae:\n  permission:\n    redis: {\n      ip: 172.168.200.243,\n      port: 6379,\n      password: Sd_12345,\n      database: 0\n    }\nspring:\n  redis:\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n', 'd6733e34e7ff5c71a8c7ec47fdbdd49a', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (545, 'datae-authentication-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9040\n  servlet:\n    context-path: /auth\n\ndatae:\n  auth:\n    enabled: true\n    checkCodeBasePath: /tmp/check_code_image\n    ignoreCheckCode: true\n\n#日志配置\nlogging:\n  level:\n    cn.gzsendi: debug', '073d1e2e50fdc2da5f68806591f6fd6e', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (546, 'datae-base.yml', 'DEFAULT_GROUP', 'datae:\n  common:\n    kafka: {\n      bootstrap-servers: \'172.168.201.54:9092\'\n    }\nspring:\n  devtools:\n    restart: {\n      enabled: false\n    }\n  cloud:\n    nacos:\n      discovery: {\n        server-addr: \'172.168.200.243:9002\',\n        namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      }\nmanagement:\n  endpoint:\n    health: {\n      show-details: always\n    }\n  endpoints:\n    web:\n      exposure: {\n        include: \'*\'\n      }\nfeign:\n  hystrix: {\n    enabled: true\n  }\n  client:\n    config:\n      default: {\n        connect-timeout: 25000,\n        read-timeout: 25000\n      }\nhystrix:\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker: {\n        requestVolumeThreshold: 1000\n      }\n      execution:\n        timeout: {\n          enabled: true\n        }\n        isolation:\n          thread: {\n            timeoutInMilliseconds: 20000\n          }\nribbon:\n  okhttp: {\n    enabled: true\n  }\n  connectTimeout: 5000\n  readTimeout: 5000\nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n  file: /home/sendi/datae-cloud/logs/${spring.application.name}/${spring.application.name}.log\n  file.max-history: 15\n', 'd3009a0c131187ffacf34ec68bd98fe9', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (547, 'datae-gateway.yml', 'DEFAULT_GROUP', 'server:\n  port: 9030\n  tomcat:\n    max-threads: 100\n    accept-count: 2000\n    max-connections: 2000\n\nspring:\n  servlet:\n    #文件上传大小限制\n    multipart:\n      maxRequestSize: 100MB\n      max-file-size: 100MB\n  cloud:\n    gateway:\n      #基于手动设置进行路由\n      routes:\n        #登录模拟认证服务器\n        - id: loginAdapt\n          uri: forward:/loginAdapt\n          predicates:\n            - Path=/bigdata/loginController.do\n          filters:\n            - AuthSkipFilterFactory\n        #登录模拟菜单栏\n        - id: menu\n          uri: forward:/menu\n          predicates:\n            - Path=/bigdata/nav/menu\n          filters:\n            - AuthSkipFilterFactory\n        #登录模拟验证码\n        - id: indentifyIamge\n          uri: forward:/indentifyIamge\n          predicates:\n            - Path=/bigdata/loginController/getIndentifyIamge\n          filters:\n            - AuthSkipFilterFactory\n        ####################   RPA start   #######################\n        # 认证服务swagger\n        - id: auth_swagger\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_user_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/user/**\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_token_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/token/**\n        # # 流程易平台\n        # - id: controller-remake\n        #   uri: lb://controller\n        #   predicates:\n        #     - Path=/controller/swagger-ui.html,/controller/webjars/**,/controller/swagger-resources/**,/controller/v2/api-docs\n        #   filters:\n        #     - AuthSkipFilterFactory\n        # 流程易基础系统服务\n        - id: rpa-system-swagger\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易告警管理服务\n        - id: rpa-warning-swagger\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # controller-swagger\n        - id: controller-swagger\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 任务队列swagger\n        - id: taskQueue-swagger\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 设计器服务swagger\n        - id: designer-swagger\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人服务swagger\n        - id: robot-swagger\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 组件市场swagger\n        - id: component-market-server-swagger\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 在线升级swagger\n        - id: online-update-swagger\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-reload\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/casbinController/reload\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system1\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/**\n        - id: component-market-server\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/**\n        - id: rpa-robot-server\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/**\n        ####################   RPA end  #######################\n        #数据集\n        #数据挖掘\n        #仪表盘\n        #全文搜索\n        #数据中心\n        #数据中心\n        #MYSQL查询调用\n        # 设计器登录    \n        - id: controller-designer-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/designerLogin/signIn\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人登录    \n        - id: controller-robot-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/robotLogin/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1    \n        - id: controller-api1\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V2    \n        - id: controller-api2\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 控制台服务\n        - id: controller\n          uri: lb://controller\n          predicates:\n            - Path=/controller/**\n        # 任务队列服务\n        - id: rpa-taskQueue-server\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/**\n        # 设计器服务\n        - id: rpa-designer-server\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/**\n        - id: rpa-warning-server\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/**\n        - id: online-update\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/**  \n        - id: ai-system-server\n          uri: lb://ai-system-server\n          predicates:\n            - Path=/aiProject/** \n\n      #基于服务发现进行路由\n#hystrix 取消超时\nhystrix:\n  #10分钟熔断\n  metrics:\n    enabled: true\n    polling-interval-ms: 20000\n\nlogging:\n  level:\n    # org.springframework: debug\n    cn.gzsendi.datae: debug', '00139321b904b728a8c9c797954483be', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (548, 'datae-sleuth-base.yml', 'DEFAULT_GROUP', 'spring:\r\n  zipkin:\r\n    sender:\r\n      type: kafka\r\n    ##测试\r\n    # 使用http进行链路信息提交时 若zipkin服务器加入nacos集群 则使用应用名进行base-url配置 是否添加http://前缀可选\r\n    # base-url: datae-sleuth-server\r\n    # base-url: http://datae-sleuth-server\r\n    # base-url: http://192.168.23.184:9010\r\n  kafka:\r\n    bootstrap-servers: ${datae.common.kafka.bootstrap-servers}\r\n  sleuth:\r\n    sampler:\r\n      probability: 0.0', '07bb8afe0f5d2bd919b81c79cfcd1c08', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (549, 'datae-system-base.yml', 'DEFAULT_GROUP', 'casbin:\n    enableCasbin: true\n    storeType: jdbc\n    initializeSchema: create\n    model: classpath:casbin/model.conf\nspring:\n  datasource:\n    url: jdbc:mysql://172.168.200.243:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n    druid: {\n      filters: stat,\n      maxActive: 20,\n      initialSize: 10,\n      maxWait: 60000,\n      minIdle: 1,\n      timeBetweenEvictionRunsMillis: 60000,\n      minEvictableIdleTimeMillis: 300000,\n      validationQuery: select \'x\',\n      testWhileIdle: true,\n      testOnBorrow: false,\n      testOnReturn: false,\n      poolPreparedStatements: true,\n      maxOpenPreparedStatements: 20\n    }\n  redis:\n    database: 0\n    host: 172.168.200.243\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n', 'e0c8ab4e744f4b138c79f36e1259f554', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (550, 'datae-system-server.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 9001\r\n\r\n# 日志配置\r\nlogging:\r\n  level:\r\n    cn.gzsendi: debug', '4753cff431f31fd4ceaa21fe1e081e04', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (551, 'rpa-designer-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19100\n  servlet:\n    context-path: /designer\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n    \nPROCESS_PATH: /usr/local/lib/controller-java_2.0.0/rpa-designer-server-2.0.0/process/\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: designer\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:9002\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      group : SEATA_GROUP\n      cluster: default\n  config:\n    type: nacos\n    nacos:\n      group: SEATA_GROUP\n      cluster: default\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      server-addr: 127.0.0.1:9002\n  service:\n    vgroup-mapping:\n      my_test_tx_group: default', 'e7cd72cdd76a20a390f8b04585d3575d', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (552, 'rpa-robot-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19098\n  servlet:\n    context-path: /rpa-robot-server\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n  #redis#\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.controller.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nswagger:\n  enable: true  \nocr_default_url: http://127.0.0.1:18888/image_code\nTASK_PHOTO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_photo/\nTASK_FILE_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/task_file/\nTASK_VIDEO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_video/\ngeneral_default_url: http://127.0.0.1:18810/text_cls\nreconnTime: 300\n\nfailMessage:\n  running_task_not_concurrent_message: 机器人正在运行不能并发的流程，需要等待任务运行结束\n  wait_task_not_concurrent_message: 等待运行的任务为独占流程，需要等待机器人正在运行的任务结束\n\n', '7653965cf987b06f9e942e7b69d8e0df', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (553, 'rpa-system-server.yml', 'DEFAULT_GROUP', 'server:\n  # 9000为原版环境；9001为dev环境；9002已被nacos占用\n  port: 9000\n  servlet:\n    context-path: /system\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    default-enum-type-handler: com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler\n    cache-enabled: true\ncasbin:\n    enableCasbin: true\n    useSyncedEnforcer: true\n    storeType: jdbc\n    initializeSchema: create\n    model: classpath:casbin/model.conf\nswagger:\n    enabled: true\nspring:\n  cloud:\n    inetutils:\n      preferred-networks: 172.168.200\n  datasource:\n    url: jdbc:mysql://172.168.200.243:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n    druid: {\n      filters: stat,\n      maxActive: 20,\n      initialSize: 10,\n      maxWait: 60000,\n      minIdle: 1,\n      timeBetweenEvictionRunsMillis: 60000,\n      minEvictableIdleTimeMillis: 300000,\n      validationQuery: select \'x\',\n      testWhileIdle: true,\n      testOnBorrow: false,\n      testOnReturn: false,\n      poolPreparedStatements: true,\n      maxOpenPreparedStatements: 20\n    }\n  redis:\n    database: 0\n    host: 172.168.200.243\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\nlogging:\n  level:\n    cn.gzsendi: DEBUG\n    \n# 加入seata配置\nseata:\n  enabled: false\n  application-id: rpa-system-server\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 172.168.200.243:9002\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      group : SEATA_GROUP\n      cluster: default\n  config:\n    type: nacos\n    nacos:\n      group: SEATA_GROUP\n      cluster: default\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      server-addr: 172.168.200.243:9002\n  service:\n    vgroup-mapping:\n      my_test_tx_group: default', 'd587e51596b7b744939e3f1be0e37879', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (554, 'rpa-taskQueue-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19099\n  servlet:\n    context-path: /taskQueue\nspring:\n  datasource:\n    url: jdbc:mysql://172.168.200.243:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 172.168.200.243\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    # 控制台是否打印SQL语句\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nLOG_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_log/\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: taskQueue\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 172.168.200.243:9002\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      group : SEATA_GROUP\n      cluster: default\n  config:\n    type: nacos\n    nacos:\n      group: SEATA_GROUP\n      cluster: default\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      server-addr: 172.168.200.243:9002\n  service:\n    vgroup-mapping:\n      my_test_tx_group: default\n\nlogging:\n  level:\n    root: debug', 'c71b6ed2a56d7fd5fb5bd67bf7bd1f37', '2022-02-08 20:20:36', '2022-04-01 02:41:27', 'nacos', '192.168.18.16', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (555, 'service.vgroupMapping.my_test_tx_group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (556, 'online_update.yml', 'DEFAULT_GROUP', 'server:\n  port: 15556\n  servlet:\n    context-path: /online-update\n  \nspring:\n  datasource:\n    url: jdbc:mysql://192.168.23.60:3306/lcy?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 172.168.200.243\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\nknife4j:\n  enable: true    \nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n\nproductReleasePlatformIpAddr: 103.215.44.37:8889\ncheckVersionUpdateUri: /product-release-platform/onlineUpdate/checkVersionUpdate\ngetUpdatePkgDownloadPathUri: /product-release-platform/onlineUpdate/getUpdatePkgDownloadPath\ncharCodeValue: OTc0OTU3YzctMDFmMi00MGMwLWExZTctMTczZjdmMjg3MjE4\ncharCodeKey: char-code\n', '253d725660341432d058521f6e939d98', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', '在线升级', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (557, 'ai-system-server-test.yml', 'DEFAULT_GROUP', 'server:\n  port: 9200\n  servlet:\n    context-path: /aiProject\nspring:\n  redis:\n    host: 172.168.201.90\n    port: 6379\n    password: Sd_12345\n  mvc:\n    view:\n      prefix: classpath:/templates/\n      suffix: .html\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://172.168.201.90:3306/ai_system?useSSL=false&characterEncoding=UTF-8\n    username: root\n    password: Sd_12345\n  servlet:\n    multipart:\n      max-request-size: 1024MB\n      max-file-size: 1024MB\n\n\nmybatis-plus:\n  mapper-locations: classpath:mapping/*.xml\n  configuration:\n    map-underscore-to-camel-case: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n\nai:\n  linuxBaseUrl: /usr/local/lib/ai_system_server/files/\n  windowsBaseUrl: D:\\ai_system\\\n  verificationCodeExtends: jpg,zip\n  address: http://172.168.201.90:{0}{1}\n  #机器人交互\n  robot:\n    runRobotUrl: https://172.168.201.90:44391/controller/v2.0/api/runProcessWithNoFile  #运行机器人流程\n    cancelRobotUrl: https://172.168.201.90:44391/controller/v1.0/api/cancelTask         #\n    robotStatus: https://172.168.201.90:44391/controller/v1.0/api/selectRobotStatusById\n    taskStatus: https://172.168.201.90:44391/controller/v1.0/api/showResultByTaskId\n    key: 29359b15-c480-426c-b3c0-6d247200f67c\n    body:\n      callbackUrl:\n      inputValues:\n      processId: 1116\n      robotIds:', '9888df422d84aa3446dd9bc61f5b949b', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (558, 'component-market-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9234\n  servlet:\n    context-path: /component-market-server\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.23.60:3306/component_market?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n\n  #redis#\n  redis:\n    database: 0\n    host: 192.168.23.60\n    port: 6379\n    password: Sd_12345\n    timeout: 5000s\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nknife4j:\n  enable: true    \nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn', '71d869e432acb7d543a4d4113a978d81', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', '组件市场', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (559, 'component-market-server-test.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 9234\r\n  servlet:\r\n    context-path: /component-market-server\r\n\r\nspring:\r\n  datasource:\r\n    url: jdbc:mysql://172.168.201.90:3306/component_market?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\r\n    username: datae\r\n    password: Sd_12345\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    driver-class-name: com.mysql.jdbc.Driver\r\n\r\n  #redis#\r\n  redis:\r\n    database: 0\r\n    host: 127.0.0.1\r\n    port: 6379\r\n    password: Sd_12345\r\n    timeout: 5000s\r\n#mybatis#\r\nmybatis:\r\n  mapper-locations: classpath:mapper/*.xml\r\n  type-aliases-package: cn.sendi.dao.entity\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\nknife4j:\r\n  enable: true    \r\nlogging:\r\n  level:\r\n    root: info\r\n    com.netflix: warn\r\n    com.alibaba.nacos.client.naming: warn', 'fc1dbc201953e6f25a79a9b8fbf5a7b3', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (560, 'product-release-platform.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 19093\r\n  servlet:\r\n    context-path: /product-release-platform\r\n\r\nspring:\r\n  datasource:\r\n    url: jdbc:mysql://172.168.200.243:3306/product_release_platform?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\r\n    username: datae\r\n    password: Sd_12345\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    driver-class-name: com.mysql.jdbc.Driver\r\n\r\n  #redis#\r\n  redis:\r\n    database: 0\r\n    host: 172.168.200.243\r\n    port: 6379\r\n    password: Sd_12345\r\n    timeout: 5000s\r\n#mybatis#\r\nmybatis:\r\n  mapper-locations: classpath:mapper/*.xml\r\n  type-aliases-package: cn.sendi.dao.entity\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\nknife4j:\r\n  enable: true    \r\nlogging:\r\n  level:\r\n    root: info\r\n    com.netflix: warn\r\n    com.alibaba.nacos.client.naming: warn', '4bab48a2266470e78da736c3506836e3', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', '软件发布平台', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (561, 'rpa-common.yml', 'DEFAULT_GROUP', 'minIO: \n    # 是否启动了minIO\n    enabled: false\n    # 启动了minIO后，文件路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://127.0.0.1:9010\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n\nLOG_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_photo/\nTASK_VIDEO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/task_file/\n\nPROCESS_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/process/\n#MODULE_PACKAGE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/module_package/\nMODULE_PACKAGE_PATH: D:/module_package/\n\nlicensePastDueMessage: 使用权限已到期-您的账号使用权限已到期，请联系业务人员或者拨打电话：400-830-3030续期，谢谢！\nlicensePastDueMessageTitle: 使用权限已到期\nchatGPT:\n    proxyHost: 192.168.62.20\n    proxyPort: 1080\n    apiKey: 123456\n    apiHost: https://api.openai.com/\n    mode: testMode', '73673478764348c9039ecc928c8f7511', '2022-02-08 20:20:36', '2023-06-08 09:09:42', 'nacos', '192.168.18.3', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (562, 'rpa-websocket-server.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 19100\r\n  servlet:\r\n    context-path: /rpa-websocket-server\r\n\r\n  #redis#\r\n  redis:\r\n    database: 0\r\n    host: 172.168.200.243\r\n    port: 6379\r\n    password: Sd_12345\r\n    timeout: 5000s \r\nswagger:\r\n  enable: true\r\n', 'cb5d5cead3db00100235b741bcc36d58', '2022-02-08 20:20:36', '2022-02-08 20:20:36', NULL, '172.168.10.105', '', '', 'websocket服务端', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (565, 'transport.type', 'SEATA_GROUP', 'TCP', 'b136ef5f6a01d816991fe3cf7a6ac763', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (566, 'transport.server', 'SEATA_GROUP', 'NIO', 'b6d9dfc0fb54277321cebc0fff55df2f', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (567, 'transport.heartbeat', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (568, 'transport.enableClientBatchSendRequest', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (569, 'transport.threadFactory.bossThreadPrefix', 'SEATA_GROUP', 'NettyBoss', '0f8db59a3b7f2823f38a70c308361836', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (570, 'transport.threadFactory.workerThreadPrefix', 'SEATA_GROUP', 'NettyServerNIOWorker', 'a78ec7ef5d1631754c4e72ae8a3e9205', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (571, 'transport.threadFactory.serverExecutorThreadPrefix', 'SEATA_GROUP', 'NettyServerBizHandler', '11a36309f3d9df84fa8b59cf071fa2da', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (572, 'transport.threadFactory.shareBossWorker', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (573, 'transport.threadFactory.clientSelectorThreadPrefix', 'SEATA_GROUP', 'NettyClientSelector', 'cd7ec5a06541e75f5a7913752322c3af', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (574, 'transport.threadFactory.clientSelectorThreadSize', 'SEATA_GROUP', '1', 'c4ca4238a0b923820dcc509a6f75849b', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (575, 'transport.threadFactory.clientWorkerThreadPrefix', 'SEATA_GROUP', 'NettyClientWorkerThread', '61cf4e69a56354cf72f46dc86414a57e', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (576, 'transport.threadFactory.bossThreadSize', 'SEATA_GROUP', '1', 'c4ca4238a0b923820dcc509a6f75849b', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (577, 'transport.threadFactory.workerThreadSize', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (578, 'transport.shutdown.wait', 'SEATA_GROUP', '3', 'eccbc87e4b5ce2fe28308fd9f2a7baf3', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (580, 'service.default.grouplist', 'SEATA_GROUP', '127.0.0.1:8091', 'c32ce0d3e264525dcdada751f98143a3', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (581, 'service.enableDegrade', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (582, 'service.disableGlobalTransaction', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (583, 'client.rm.asyncCommitBufferLimit', 'SEATA_GROUP', '10000', 'b7a782741f667201b54880c925faec4b', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (584, 'client.rm.lock.retryInterval', 'SEATA_GROUP', '10', 'd3d9446802a44259755d38e6d163e820', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (585, 'client.rm.lock.retryTimes', 'SEATA_GROUP', '30', '34173cb38f07f89ddbebc2ac9128303f', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (586, 'client.rm.lock.retryPolicyBranchRollbackOnConflict', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (587, 'client.rm.reportRetryCount', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (588, 'client.rm.tableMetaCheckEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (589, 'client.rm.tableMetaCheckerInterval', 'SEATA_GROUP', '60000', '2b4226dd7ed6eb2d419b881f3ae9c97c', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (590, 'client.rm.sqlParserType', 'SEATA_GROUP', 'druid', '3d650fb8a5df01600281d48c47c9fa60', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (591, 'client.rm.reportSuccessEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (592, 'client.rm.sagaBranchRegisterEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (593, 'client.rm.tccActionInterceptorOrder', 'SEATA_GROUP', '-2147482648', 'f056d9efa5dae3872f9da035c83bcde8', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (594, 'client.tm.commitRetryCount', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (595, 'client.tm.rollbackRetryCount', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (596, 'client.tm.defaultGlobalTransactionTimeout', 'SEATA_GROUP', '60000', '2b4226dd7ed6eb2d419b881f3ae9c97c', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (597, 'client.tm.degradeCheck', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (598, 'client.tm.degradeCheckAllowTimes', 'SEATA_GROUP', '10', 'd3d9446802a44259755d38e6d163e820', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (599, 'client.tm.degradeCheckPeriod', 'SEATA_GROUP', '2000', '08f90c1a417155361a5c4b8d297e0d78', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (600, 'client.tm.interceptorOrder', 'SEATA_GROUP', '-2147482648', 'f056d9efa5dae3872f9da035c83bcde8', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (601, 'store.mode', 'SEATA_GROUP', 'file', '8c7dd922ad47494fc02c388e12c00eac', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (602, 'store.lock.mode', 'SEATA_GROUP', 'file', '8c7dd922ad47494fc02c388e12c00eac', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (603, 'store.session.mode', 'SEATA_GROUP', 'file', '8c7dd922ad47494fc02c388e12c00eac', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (604, 'store.file.dir', 'SEATA_GROUP', 'file_store/data', '6a8dec07c44c33a8a9247cba5710bbb2', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (605, 'store.file.maxBranchSessionSize', 'SEATA_GROUP', '16384', 'c76fe1d8e08462434d800487585be217', '2022-02-15 19:27:01', '2022-02-15 19:27:01', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (606, 'store.file.maxGlobalSessionSize', 'SEATA_GROUP', '512', '10a7cdd970fe135cf4f7bb55c0e3b59f', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (607, 'store.file.fileWriteBufferCacheSize', 'SEATA_GROUP', '16384', 'c76fe1d8e08462434d800487585be217', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (608, 'store.file.flushDiskMode', 'SEATA_GROUP', 'async', '0df93e34273b367bb63bad28c94c78d5', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (609, 'store.file.sessionReloadReadSize', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (610, 'store.db.datasource', 'SEATA_GROUP', 'druid', '3d650fb8a5df01600281d48c47c9fa60', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (611, 'store.db.dbType', 'SEATA_GROUP', 'mysql', '81c3b080dad537de7e10e0987a4bf52e', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (612, 'store.db.driverClassName', 'SEATA_GROUP', 'com.mysql.jdbc.Driver', '683cf0c3a5a56cec94dfac94ca16d760', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (613, 'store.db.url', 'SEATA_GROUP', 'jdbc:mysql://127.0.0.1:3306/seata?useUnicode=true&rewriteBatchedStatements=true', '030ea5ff5c2ef043adf9826c70570b0b', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (614, 'store.db.user', 'SEATA_GROUP', 'username', '14c4b06b824ec593239362517f538b29', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (615, 'store.db.password', 'SEATA_GROUP', 'password', '5f4dcc3b5aa765d61d8327deb882cf99', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (616, 'store.db.minConn', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (617, 'store.db.maxConn', 'SEATA_GROUP', '30', '34173cb38f07f89ddbebc2ac9128303f', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (618, 'store.db.globalTable', 'SEATA_GROUP', 'global_table', '8b28fb6bb4c4f984df2709381f8eba2b', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (619, 'store.db.branchTable', 'SEATA_GROUP', 'branch_table', '54bcdac38cf62e103fe115bcf46a660c', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (620, 'store.db.queryLimit', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (621, 'store.db.lockTable', 'SEATA_GROUP', 'lock_table', '55e0cae3b6dc6696b768db90098b8f2f', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (622, 'store.db.maxWait', 'SEATA_GROUP', '5000', 'a35fe7f7fe8217b4369a0af4244d1fca', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (623, 'store.redis.mode', 'SEATA_GROUP', 'single', 'dd5c07036f2975ff4bce568b6511d3bc', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (624, 'store.redis.single.host', 'SEATA_GROUP', '127.0.0.1', 'f528764d624db129b32c21fbca0cb8d6', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (625, 'store.redis.single.port', 'SEATA_GROUP', '6379', '92c3b916311a5517d9290576e3ea37ad', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (626, 'store.redis.maxConn', 'SEATA_GROUP', '10', 'd3d9446802a44259755d38e6d163e820', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (627, 'store.redis.minConn', 'SEATA_GROUP', '1', 'c4ca4238a0b923820dcc509a6f75849b', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (628, 'store.redis.maxTotal', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (629, 'store.redis.database', 'SEATA_GROUP', '0', 'cfcd208495d565ef66e7dff9f98764da', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (630, 'store.redis.queryLimit', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (631, 'server.recovery.committingRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (632, 'server.recovery.asynCommittingRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (633, 'server.recovery.rollbackingRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (634, 'server.recovery.timeoutRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (635, 'server.maxCommitRetryTimeout', 'SEATA_GROUP', '-1', '6bb61e3b7bce0931da574d19d1d82c88', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (636, 'server.maxRollbackRetryTimeout', 'SEATA_GROUP', '-1', '6bb61e3b7bce0931da574d19d1d82c88', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (637, 'server.rollbackRetryTimeoutUnlockEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (638, 'server.distributedLockExpireTime', 'SEATA_GROUP', '10000', 'b7a782741f667201b54880c925faec4b', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (639, 'client.undo.dataValidation', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (640, 'client.undo.logSerialization', 'SEATA_GROUP', 'jackson', 'b41779690b83f182acc67d6388c7bac9', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (641, 'client.undo.onlyCareUpdateColumns', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (642, 'server.undo.logSaveDays', 'SEATA_GROUP', '7', '8f14e45fceea167a5a36dedd4bea2543', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (643, 'server.undo.logDeletePeriod', 'SEATA_GROUP', '86400000', 'f4c122804fe9076cb2710f55c3c6e346', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (644, 'client.undo.logTable', 'SEATA_GROUP', 'undo_log', '2842d229c24afe9e61437135e8306614', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (645, 'client.undo.compress.enable', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (646, 'client.undo.compress.type', 'SEATA_GROUP', 'zip', 'adcdbd79a8d84175c229b192aadc02f2', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (647, 'client.undo.compress.threshold', 'SEATA_GROUP', '64k', 'bd44a6458bdbff0b5cac721ba361f035', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (648, 'log.exceptionRate', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (649, 'transport.serialization', 'SEATA_GROUP', 'seata', 'b943081c423b9a5416a706524ee05d40', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (650, 'transport.compressor', 'SEATA_GROUP', 'none', '334c4a4c42fdb79d7ebc3e73b517e6f8', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (651, 'metrics.enabled', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (652, 'metrics.registryType', 'SEATA_GROUP', 'compact', '7cf74ca49c304df8150205fc915cd465', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (653, 'metrics.exporterList', 'SEATA_GROUP', 'prometheus', 'e4f00638b8a10e6994e67af2f832d51c', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (654, 'metrics.exporterPrometheusPort', 'SEATA_GROUP', '9898', '7b9dc501afe4ee11c56a4831e20cee71', '2022-02-15 19:27:02', '2022-02-15 19:27:02', 'nacos', '127.0.0.1', '', '1b536005-3024-4690-b4de-688110a19106', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (657, 'rpa-common.yml', 'DEFAULT_GROUP', 'minIO: \n    # 是否启动了minIO\n    enabled: false\n    # 启动了minIO后，任务运行日志路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://192.168.18.17:9000\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\n\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25', '0e60ce48b172805fc5a85d716bf25546', '2022-03-18 03:30:46', '2022-10-09 05:37:01', 'nacos', '192.168.18.16', '', 'f76627e8-ea63-4192-8250-df0fbf384902', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (675, 'rpa-warning-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19094\n  servlet:\n    context-path: /warning\n\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.warning.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000\n  quartz:\n    job-store-type: jdbc\n    properties:\n      org:\n        quartz:\n          jobStore:\n            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore\n            clusterCheckinInterval: 10000\n            misfireThreshold: 60000\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            useProperties: false\n            tablePrefix: QRTZ_\n            isClustered: true\n        scheduler:\n          instanceId: AUTO\n        threadPool:\n          class: org.quartz.simpl.SimpleThreadPool\n          threadCount: 10\n          threadPriority: 5\n          threadsInheritContextClassLoaderOfInitializingThread: true\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nrobot_unconn: true\n\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n  dingtalk:\n    webhook: https://oapi.dingtalk.com/robot/send?access_token=dddb5af98809d7f32e8cb64efdaef0743394fdb500f8b3b980953c1a2e74c4ee\n    secretKey: SEC6833fbf4d8d56f92ea5e362db2d3084458f6dd9ac23c941b5bd6492c53c35a55\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27778\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  warning-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', 'cd94dec69c15270157a6b298787966de', '2022-07-04 07:02:29', '2023-03-27 06:28:56', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (676, 'controller.yml', 'DEFAULT_GROUP', 'server:\n  port: 19090\n  servlet:\n    context-path: /controller\n  compression:\n    enabled: true\n    mime-types: application/json\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.sendi.controller.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: \n        max-active: 10\n        max-wait: -1\n        max-idle: 8\n        min-idle: 0\n  quartz:\n    job-store-type: jdbc\n    properties:\n      org:\n        quartz:\n          jobStore:\n            # class: org.quartz.impl.jdbcjobstore.JobStoreTX\n            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore\n            clusterCheckinInterval: 10000\n            misfireThreshold: 60000\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            useProperties: false\n            tablePrefix: QRTZ_\n            isClustered: true\n        scheduler:\n          instanceId: AUTO\n          instanceName: clusteredScheduler\n        threadPool:\n          class: org.quartz.simpl.SimpleThreadPool\n          threadCount: 10\n          threadPriority: 5\n          threadsInheritContextClassLoaderOfInitializingThread: true\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nTASK_PHOTO_NGINX_PATH: /task_photo/\nTASK_VIDEO_NGINX_PATH: /task_video/\nocr_default_url: http://127.0.0.1:18888/image_code\ngeneral_default_url: http://127.0.0.1:18810/text_cls\n\nrobot_unconn: true   \nadd_userInfo_interceptor: true\n\n\n\npowerjob:\n  systemLogJob: 流程易-广播清理系统日志\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27781\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  console-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}\n\nalipay:\n  appId: 9021000122682369\n  merchantPrivateKey: MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCO9H0Xtusc4hU8oXqCp3+Jy4mqy+sPsQkWmKZoTdpbgGmw6avG1N7AzAekPYOaaLa8xmhNWxAPcOd47f7iFPDirS3mqZwXz6uWKQWeqQNl4hWk+cmLI0ca3o23w91DLCbde+oyJva1YKUlSPuSK7AABeDhCrHqkx3pnWSEfqcBNcVAMYLZVTpDmKgaJiUA61tY/6DpClK2trdFhOUGg2X+9ZpimPt1iACz7bcNjtMGFKD7zBuV1l+oLiS6YSP1j/xImTLa7FuXWAoLkqXG9nLpnmACeoMemyXvYLBmRFEnRChogwgIlZOXcHbW/e7y8nFiOn4J7RiDNNFtaxmoELk5AgMBAAECggEAcljybrOsITBemF76JeRhShF7DxmJ7sVHZcG46hnMHgD7ib1/382KWGFbg26JBEvaT+nMqIO8tv0yyjJk/OaPQGISIz1sVEeTEsvBaQX8Z9SOR6ZeJmOTjtSSO3n6VK7Ob7+ct30fPjoOH2LfiC5V287X8GqjoeUHukRhkPHWGEp0Q9ry9bCmltWhPC5b/tD+9zUgdoAMnZihv+Mwhf54TTcbxVAHQf5utLKB6rzQADd/pqNz98igRLeKaIe2XGaE8mV+dj5YZJS6L83nNr0rsD/AJ6KNRRX9Zz1dJ6yRyhnmU5XnbXHeyxW01ixxJE13MI6DLnSh4G8X/Z2HpKxTAQKBgQD3ZMVY+RiTTkBEVG/OBqZPYFRsS6iEuhrjpXCeAxEEw3N8Q0ZUEIt2vwD1uu0EwUXlrV9xglDjLHK8gV9Q4F89DGceIS0A8SuoLNRmGihGNGHOT/nMzovlS/ZigtoJK0WL4jDNb5fk9yXRYFyGAFPNXXBFNGRPw2TH3x6227LlaQKBgQCT7Zy/+GvxLfP+2hkGCJzIqC3q3eZOfdGOuiR4CZhXn5Uthc7OzcRnt+A2I3RT1fStO0kmI5hHCsdlNtGZ3iZRtGoFgpIDWR3sbi3mHAdjEsRgM6CdvbJRcO+rUrhSPv85gq1R2xPBD7W4neqdu/EQ4+CAZrNWPy2NoUwdt1GrUQKBgDZw8JTRzDyuXaorwqbeA783/ZwPUjhTFBPAlnXPSvF3aXSRAWsCcQ5inf11cy82sQEIFBbQjKhRYbZl6enMVmkCz7ZrqpGogOjzZJJLc01vvY4/P0N4uIRvIPswvHaEFTvhPMgYpJ54XNQklnfOnqJ0y34PN3vuDcGGMiYfVtDxAoGBAIPWOOU+WbVQ5ywy5CpkcpbCjGnN6fv6VlGFxArXQlaVezZfErls2aY2UjTt1DcDcFUTiVXcU1K9YIfsG1GukyguSm8ut0MUoX6dk3qJcGvzxeCXIoZzEgFTTca6qltimcR/mkhhn3FotuQamYaKgYY0EVleLmanV8np/xRc1QSBAoGADHZEmllp931219Rfty5kJYquQRNvIlOUAC6BhjmXGeJsy4C0oSBuriH8XucJ2Wgqn/6hFKQtiybY/pMEwdBOjYBA3QoT38yWjUC+6f1MlkIEpVDnvI8y8Cwhpi748U/eb4JZkXOss6XJEKWV0z1Qy0uy+YqYi+2mXbp8oZx4Uzo=\n  alipayPublicKey: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqFxk1A1LYFLuBDo2uCPxVmMtEI7SKkjAAuiIoRBjdGywY6Ze1SNiD2jaawp3lvzLLW7ZQ0ILQk9+r3uf20ZNehOwAOfoWRbpzYtuNgCsAZg9O2bPwNOPX7siph9cLKx+5/8wuhNk3lejDvYTT6McmbumhlK+sQNirlcrlt2xxNgQZNhGoJbO9yVqt0hPeXZTV3q+D8wLn7cj1XcPMfFyMOV+NAeGTsvsGqNNEdjIb4zVH6bRBi2ARktCCl3dbz9Gz+qK6Ml/hLVvcvQg/KT2cn+phgpHwNuDUI61HvMSbQf2n0vc5RC7H8DGAggs1bmNu98CfXIy57dPpYA3zxCuVQIDAQAB\n  gatewayUrl: https://openapi-sandbox.dl.alipaydev.com/gateway.do\n  notifyUrl: http://121.33.214.30:44390/chargeOrder/alipay/notify\n  returnUrl:\n\nwechat-pay:\n  app-id: 1\n  merchant-id: 1\n  merchant-serial-number: 1\n  notify-url: 1\n  private-key: MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCO9H0Xtusc4hU8oXqCp3+Jy4mqy+sPsQkWmKZoTdpbgGmw6avG1N7AzAekPYOaaLa8xmhNWxAPcOd47f7iFPDirS3mqZwXz6uWKQWeqQNl4hWk+cmLI0ca3o23w91DLCbde+oyJva1YKUlSPuSK7AABeDhCrHqkx3pnWSEfqcBNcVAMYLZVTpDmKgaJiUA61tY/6DpClK2trdFhOUGg2X+9ZpimPt1iACz7bcNjtMGFKD7zBuV1l+oLiS6YSP1j/xImTLa7FuXWAoLkqXG9nLpnmACeoMemyXvYLBmRFEnRChogwgIlZOXcHbW/e7y8nFiOn4J7RiDNNFtaxmoELk5AgMBAAECggEAcljybrOsITBemF76JeRhShF7DxmJ7sVHZcG46hnMHgD7ib1/382KWGFbg26JBEvaT+nMqIO8tv0yyjJk/OaPQGISIz1sVEeTEsvBaQX8Z9SOR6ZeJmOTjtSSO3n6VK7Ob7+ct30fPjoOH2LfiC5V287X8GqjoeUHukRhkPHWGEp0Q9ry9bCmltWhPC5b/tD+9zUgdoAMnZihv+Mwhf54TTcbxVAHQf5utLKB6rzQADd/pqNz98igRLeKaIe2XGaE8mV+dj5YZJS6L83nNr0rsD/AJ6KNRRX9Zz1dJ6yRyhnmU5XnbXHeyxW01ixxJE13MI6DLnSh4G8X/Z2HpKxTAQKBgQD3ZMVY+RiTTkBEVG/OBqZPYFRsS6iEuhrjpXCeAxEEw3N8Q0ZUEIt2vwD1uu0EwUXlrV9xglDjLHK8gV9Q4F89DGceIS0A8SuoLNRmGihGNGHOT/nMzovlS/ZigtoJK0WL4jDNb5fk9yXRYFyGAFPNXXBFNGRPw2TH3x6227LlaQKBgQCT7Zy/+GvxLfP+2hkGCJzIqC3q3eZOfdGOuiR4CZhXn5Uthc7OzcRnt+A2I3RT1fStO0kmI5hHCsdlNtGZ3iZRtGoFgpIDWR3sbi3mHAdjEsRgM6CdvbJRcO+rUrhSPv85gq1R2xPBD7W4neqdu/EQ4+CAZrNWPy2NoUwdt1GrUQKBgDZw8JTRzDyuXaorwqbeA783/ZwPUjhTFBPAlnXPSvF3aXSRAWsCcQ5inf11cy82sQEIFBbQjKhRYbZl6enMVmkCz7ZrqpGogOjzZJJLc01vvY4/P0N4uIRvIPswvHaEFTvhPMgYpJ54XNQklnfOnqJ0y34PN3vuDcGGMiYfVtDxAoGBAIPWOOU+WbVQ5ywy5CpkcpbCjGnN6fv6VlGFxArXQlaVezZfErls2aY2UjTt1DcDcFUTiVXcU1K9YIfsG1GukyguSm8ut0MUoX6dk3qJcGvzxeCXIoZzEgFTTca6qltimcR/mkhhn3FotuQamYaKgYY0EVleLmanV8np/xRc1QSBAoGADHZEmllp931219Rfty5kJYquQRNvIlOUAC6BhjmXGeJsy4C0oSBuriH8XucJ2Wgqn/6hFKQtiybY/pMEwdBOjYBA3QoT38yWjUC+6f1MlkIEpVDnvI8y8Cwhpi748U/eb4JZkXOss6XJEKWV0z1Qy0uy+YqYi+2mXbp8oZx4Uzo=\n  api-v3-key: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqFxk1A1LYFLuBDo2uCPxVmMtEI7SKkjAAuiIoRBjdGywY6Ze1SNiD2jaawp3lvzLLW7ZQ0ILQk9+r3uf20ZNehOwAOfoWRbpzYtuNgCsAZg9O2bPwNOPX7siph9cLKx+5/8wuhNk3lejDvYTT6McmbumhlK+sQNirlcrlt2xxNgQZNhGoJbO9yVqt0hPeXZTV3q+D8wLn7cj1XcPMfFyMOV+NAeGTsvsGqNNEdjIb4zVH6bRBi2ARktCCl3dbz9Gz+qK6Ml/hLVvcvQg/KT2cn+phgpHwNuDUI61HvMSbQf2n0vc5RC7H8DGAggs1bmNu98CfXIy57dPpYA3zxCuVQIDAQAB\n', '01fec28b56c0aefe9f269add263947e3', '2022-07-04 07:02:29', '2023-07-05 07:18:30', 'nacos', '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (677, 'controller_designbot.yml', 'DEFAULT_GROUP', 'server:\n  port: 19193\n  servlet:\n    context-path: /controller-designbot\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3307/lcy?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\nredis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.controller.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nrobot_unconn: true\nknife4j:\n  enable: true    \nquartz_url: jdbc:mysql://127.0.0.1:3307/lcy?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\nquartz_user: datae\nquartz_password: Sd_12345', '362d6ba3c915161abec44c03533b0917', '2022-07-04 07:02:29', '2022-07-04 07:02:29', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (678, 'datae-application-base.yml', 'DEFAULT_GROUP', 'datae:\n  permission:\n    redis: {\n      ip: 172.168.200.243,\n      port: 6379,\n      password: Sd_12345,\n      database: 0\n    }\nspring:\n  redis:\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n', 'd6733e34e7ff5c71a8c7ec47fdbdd49a', '2022-07-04 07:02:29', '2022-07-04 07:02:29', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (679, 'datae-authentication-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9040\n  servlet:\n    context-path: /auth\n\ndatae:\n  auth:\n    enabled: true\n    checkCodeBasePath: /tmp/check_code_image\n    ignoreCheckCode: true\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.datae.authenticationserver.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\n', 'ed5c1e2c56823215334a7c936e198842', '2022-07-04 07:02:29', '2023-04-23 03:41:58', 'nacos', '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (680, 'datae-base.yml', 'DEFAULT_GROUP', 'spring:\n  devtools:\n    restart:\n      enabled: false\n  cloud:\n    nacos:\n      discovery:\n        server-addr: \'192.168.18.17:9002\'\n        namespace: 9a1310b5-fb61-41ef-97ef-bdc9f5921f5c\n\nswagger:\n    enabled: true\n\n# 关闭actuator的所有端点\n# management:\n#   endpoints:\n#     enabled-by-default: true\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 25000\n        readTimeout: 25000\n\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker:\n        requestVolumeThreshold: 1000\n      execution:\n        timeout:\n          enabled: true\n        isolation:\n          thread:\n            timeoutInMilliseconds: 20000\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default\n\nlogging:\n  config: classpath:logback-spring.xml\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    # 基础服务\n    cn.gzsendi.datae.authenticationclient: info\n    cn.gzsendi.datae.authenticationserver: info\n    cn.gzsendi.datae.gateway: info\n    cn.gzsendi.rpa.system: info\n    # 业务服务\n    cn.sendi.controller: info\n    cn.gzsendi.rpa.controller.dao.mapper: debug\n    cn.gzsendi.rpa.controller.service.impl: debug\n    cn.gzsendi.rpa.controller: info\n    cn.gzsendi.rpa.designer: debug\n    cn.gzsendi.rpa.robot: info\n    cn.gzsendi.rpa.taskQueue: info\n    cn.gzsendi.rpa.warning: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n  # file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7\n\n\n\nschedule: \n  #是否集群模式，false：scheduler + quartz  , true: powerjob\n  cluster_mode: false\n  powerjob:\n    worker:\n      #是否启动powerJob\n      enabled: ${schedule.cluster_mode:false}\n      # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n      server-address: 192.168.18.17:7700\n      # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n      protocol: akka\n      # 持久化方式，可选，默认 disk\n      store-strategy: disk\n      # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n      max-result-length: 4096\n      # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n      max-appended-wf-context-length: 4096\n      # 同时运行的轻量级任务数量上限\n      max-lightweight-task-num: 1024\n      # 同时运行的重量级任务数量上限\n      max-heavy-task-num: 64\n\n# 短信云\nsms:\n  huawei:\n    # 是否允许通过短信云平台发送短信，默认不打开，不打开情况下验证码会在显示在响应内容中（打开会产生短信费用）\n    enable: false\n    # APP接入地址(在控制台\"应用管理\"页面获取)+接口访问URI\n    url: https://smsapi.cn-south-1.myhuaweicloud.com:443/sms/batchSendSms/v1\n    appKey: qLv9PLV1KL4Sy1P803loqI4imd7y\n    appSecret: 43Sxr6sSWYFZHRcenRoLxnDuSfl3\n    # 短信签名通道号\n    sender: 8823041724996\n    # 模板ID\n    templateId: 5691fcf5464e49fb81893fc860e64780\n    # 当templateId指定的模板类型为通用模板时生效且必填,必须是已审核通过的,与模板类型一致0\n    signature: 广州云迪科技有限公司\n    # 选填,短信状态报告接收地址,推荐使用域名,为空或者不填表示不接收状态报告\n    statusCallBack: \n\n    ', '5986fc0c2630c0846b58b54f73b91df3', '2022-07-04 07:02:29', '2023-06-14 06:12:54', 'nacos', '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (681, 'datae-gateway.yml', 'DEFAULT_GROUP', 'server:\n  port: 9030\n  # 2.x gateway 使用的是netty\n  # tomcat:\n  #   max-threads: 100\n  #   accept-count: 2000\n  #   max-connections: 2000\n\nspring:\n  servlet:\n    #文件上传大小限制\n    multipart:\n      maxRequestSize: 100MB\n      max-file-size: 100MB\n  cloud:\n    gateway:\n      #基于手动设置进行路由\n      routes:\n        ####################   RPA start   #######################\n        # 认证服务swagger\n        - id: auth_swagger\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_user_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/user/**\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务token\n        - id: auth_token_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/token/**\n        # 流程易基础系统服务\n        - id: rpa-system-swagger\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易告警管理服务\n        - id: rpa-warning-swagger\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # console服务druid监控\n        - id: console_druid\n          uri: lb://controller\n          predicates:\n            - Path=/controller/druid/**\n          filters:\n            - AuthSkipFilterFactory\n        # console服务prometheus监控\n        - id: console_prometheus\n          uri: lb://controller\n          predicates:\n            - Path=/controller/actuator/prometheus\n          filters:\n            - AuthSkipFilterFactory\n        # controller-swagger\n        - id: controller-swagger\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # controller-version\n        - id: controller-version\n          uri: lb://controller\n          predicates:\n            - Path=/controller/statistics/homePage/version\n          filters:\n            - AuthSkipFilterFactory\n        # 任务队列swagger\n        - id: taskQueue-swagger\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 设计器服务swagger\n        - id: designer-swagger\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人服务swagger\n        - id: robot-swagger\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 组件市场swagger\n        - id: component-market-server-swagger\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server-downloadIcon\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/moduleMenu/downloadIconFile\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/**\n        # 在线升级swagger\n        - id: online-update-swagger\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-reload\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/casbinController/reload\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-saas\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/system/saas/**\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system1\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/**\n        - id: rpa-robot-server\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/**\n        ####################   RPA end  #######################\n        # 设计器登录    \n        - id: controller-designer-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/designerLogin/signIn\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人登录    \n        - id: controller-robot-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/robotLogin/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1    \n        - id: controller-api1\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1.5   \n        - id: controller-api15\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.5/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V2    \n        - id: controller-api2\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 控制台服务\n        - id: controller\n          uri: lb://controller\n          predicates:\n            - Path=/controller/**\n        # 任务队列服务\n        - id: rpa-taskQueue-server\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/**\n        # 设计器服务\n        - id: rpa-designer-server\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/**\n        - id: rpa-warning-server\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/**\n        - id: online-update\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/**  \n        - id: ai-system-server\n          uri: lb://ai-system-server\n          predicates:\n            - Path=/aiProject/** \n\n      #基于服务发现进行路由\n#hystrix 取消超时\nhystrix:\n  #10分钟熔断\n  metrics:\n    enabled: true\n    polling-interval-ms: 20000', '429a090864aba7af472d926e8a1e3105', '2022-07-04 07:02:29', '2023-04-25 08:13:44', 'nacos', '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (682, 'datae-system-base.yml', 'DEFAULT_GROUP', 'casbin:\n    enableCasbin: true\n    storeType: jdbc\n    initializeSchema: create\n    model: classpath:casbin/model.conf\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n    druid: {\n      filters: stat,\n      maxActive: 20,\n      initialSize: 10,\n      maxWait: 60000,\n      minIdle: 1,\n      timeBetweenEvictionRunsMillis: 60000,\n      minEvictableIdleTimeMillis: 300000,\n      validationQuery: select \'x\',\n      testWhileIdle: true,\n      testOnBorrow: false,\n      testOnReturn: false,\n      poolPreparedStatements: true,\n      maxOpenPreparedStatements: 20\n    }\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n', 'd10ce5f04b588cace15e4c55c160ef78', '2022-07-04 07:02:29', '2022-07-04 07:02:29', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (683, 'datae-system-server.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 9001\r\n\r\n# 日志配置\r\nlogging:\r\n  level:\r\n    cn.gzsendi: debug', '4753cff431f31fd4ceaa21fe1e081e04', '2022-07-04 07:02:29', '2022-07-04 07:02:29', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (684, 'rpa-designer-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19100\n  servlet:\n    context-path: /designer\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.designer.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: true\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    #log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27779\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  designer-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', '41d1811e2c25a4512c554cedcc4c3941', '2022-07-04 07:02:29', '2023-06-14 06:11:12', 'nacos', '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (685, 'rpa-robot-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19098\n  servlet:\n    context-path: /rpa-robot-server\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.robot.dao.mapper.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j     \n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny: \n  #redis#\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nocr_default_url: http://127.0.0.1:18888/image_code\ngeneral_default_url: http://127.0.0.1:18810/text_cls\nreconnTime: 300\n\nfailMessage:\n  running_task_not_concurrent_message: 机器人正在运行不能并发的流程，需要等待任务运行结束\n  wait_task_not_concurrent_message: 等待运行的任务为独占流程，需要等待机器人正在运行的任务结束\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27780\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  robot-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', '259e41ff474c125df6d0702da7a433b1', '2022-07-04 07:02:29', '2023-04-03 01:41:29', 'nacos', '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (686, 'rpa-system-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9020\n  servlet:\n    context-path: /system\n\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    default-enum-type-handler: com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n\ncasbin:\n    enableCasbin: true\n    useSyncedEnforcer: true\n    storeType: jdbc\n    initializeSchema: create\n    model: classpath:casbin/model.conf\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.system.dao.mapper.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: \n        max-active: 10\n        max-wait: -1\n        max-idle: 8\n        min-idle: 0\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}', '26df5a5ef1066569e6c8018027e444f7', '2022-07-04 07:02:29', '2023-03-27 06:28:56', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (687, 'rpa-taskQueue-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19099\n  servlet:\n    context-path: /taskQueue\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.taskQueue.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27777\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  taskqueue-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', '143fc75746bb62bb153b457079981e1e', '2022-07-04 07:02:29', '2023-03-27 06:28:56', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (688, 'service.vgroupMapping.my_test_tx_group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2022-07-04 07:02:29', '2023-03-27 06:28:56', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (689, 'online_update.yml', 'DEFAULT_GROUP', 'server:\n  port: 15556\n  servlet:\n    context-path: /online-update\n  \nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\nknife4j:\n  enable: true    \nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n\nproductReleasePlatformIpAddr: 103.215.44.37:8889\ncheckVersionUpdateUri: /product-release-platform/onlineUpdate/checkVersionUpdate\ngetUpdatePkgDownloadPathUri: /product-release-platform/onlineUpdate/getUpdatePkgDownloadPath\ncharCodeValue: OTc0OTU3YzctMDFmMi00MGMwLWExZTctMTczZjdmMjg3MjE4\ncharCodeKey: char-code\n', '1f5c284684c92eefb6307a60cd78b4ce', '2022-07-04 07:02:29', '2023-03-27 06:28:56', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (690, 'ai-system-server-test.yml', 'DEFAULT_GROUP', 'server:\n  port: 9200\n  servlet:\n    context-path: /aiProject\nspring:\n  redis:\n    host: 172.168.201.90\n    port: 6379\n    password: Sd_12345\n  mvc:\n    view:\n      prefix: classpath:/templates/\n      suffix: .html\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://172.168.201.90:3306/ai_system?useSSL=false&characterEncoding=UTF-8\n    username: datae\n    password: Sd_12345\n  servlet:\n    multipart:\n      max-request-size: 1024MB\n      max-file-size: 1024MB\n\n\nmybatis-plus:\n  mapper-locations: classpath:mapping/*.xml\n  configuration:\n    map-underscore-to-camel-case: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n\nai:\n  linuxBaseUrl: /usr/local/lib/ai_system_server/files/\n  windowsBaseUrl: D:\\ai_system\\\n  verificationCodeExtends: jpg,zip\n  address: http://172.168.201.90:{0}{1}\n  #机器人交互\n  robot:\n    runRobotUrl: https://172.168.201.90:44391/controller/v2.0/api/runProcessWithNoFile  #运行机器人流程\n    cancelRobotUrl: https://172.168.201.90:44391/controller/v1.0/api/cancelTask         #\n    robotStatus: https://172.168.201.90:44391/controller/v1.0/api/selectRobotStatusById\n    taskStatus: https://172.168.201.90:44391/controller/v1.0/api/showResultByTaskId\n    key: 29359b15-c480-426c-b3c0-6d247200f67c\n    body:\n      callbackUrl:\n      inputValues:\n      processId: 1116\n      robotIds:', '81a7cfbe30d852d18bcc8eef12bbcb7d', '2022-07-04 07:02:29', '2023-03-27 06:28:56', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (691, 'component-market-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9234\n  servlet:\n    context-path: /component-market-server\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/component_market?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n\n  #redis#\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 5000s\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nknife4j:\n  enable: true    \nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn', '717d27335f5278c1d88de325d248c515', '2022-07-04 07:02:29', '2023-03-27 06:28:56', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (692, 'component-market-server-test.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 9234\r\n  servlet:\r\n    context-path: /component-market-server\r\n\r\nspring:\r\n  datasource:\r\n    url: jdbc:mysql://172.168.201.90:3306/component_market?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\r\n    username: datae\r\n    password: Sd_12345\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n\r\n  #redis#\r\n  redis:\r\n    database: 0\r\n    host: 127.0.0.1\r\n    port: 6379\r\n    password: Sd_12345\r\n    timeout: 5000s\r\n#mybatis#\r\nmybatis:\r\n  mapper-locations: classpath:mapper/*.xml\r\n  type-aliases-package: cn.sendi.dao.entity\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\nknife4j:\r\n  enable: true    \r\nlogging:\r\n  level:\r\n    root: info\r\n    com.netflix: warn\r\n    com.alibaba.nacos.client.naming: warn', 'f82f89f2a2461a0de2df45164d10ef98', '2022-07-04 07:02:29', '2023-03-27 06:28:56', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (693, 'product-release-platform.yml', 'DEFAULT_GROUP', 'server:\n  port: 19093\n  servlet:\n    context-path: /product-release-platform\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/product_release_platform?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n\n  #redis#\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 5000s\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nknife4j:\n  enable: true    \nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn', 'bb8cec4e52ce21a6021a3144480b8bcb', '2022-07-04 07:02:29', '2023-03-27 06:28:56', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (694, 'rpa-common.yml', 'DEFAULT_GROUP', 'minIO: \n    # 是否启动了minIO\n    enabled: true\n    # 启动了minIO后，文件路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://127.0.0.1:9010\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n\nLOG_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_photo/\nTASK_VIDEO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/task_file/\n\nPROCESS_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/process/\n#MODULE_PACKAGE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/module_package/\nMODULE_PACKAGE_PATH: D:/module_package/\n\nlicensePastDueMessage: 使用权限已到期-您的账号使用权限已到期，请联系业务人员或者拨打电话：400-830-3030续期，谢谢！\nlicensePastDueMessageTitle: 使用权限已到期\nchatGPT:\n    proxyHost: 192.168.62.20\n    proxyPort: 1080\n    apiKey: 123456\n    apiHost: https://api.openai.com/\n    mode: testMode', '80c5f7d9034bff555cea1e624ea51b94', '2022-07-04 07:02:29', '2023-06-14 09:52:26', 'nacos', '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (695, 'rpa-websocket-server.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 19100\r\n  servlet:\r\n    context-path: /rpa-websocket-server\r\n\r\n  #redis#\r\n  redis:\r\n    database: 0\r\n    host: 172.168.200.243\r\n    port: 6379\r\n    password: Sd_12345\r\n    timeout: 5000s \r\nswagger:\r\n  enable: true\r\n', 'cb5d5cead3db00100235b741bcc36d58', '2022-07-04 07:02:29', '2022-07-04 07:02:29', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', 'websocket服务端', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (792, 'rpa-warning-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19094\n  servlet:\n    context-path: /warning\n\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.warning.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000\n  quartz:\n    job-store-type: jdbc\n    properties:\n      org:\n        quartz:\n          jobStore:\n            # class: org.quartz.impl.jdbcjobstore.JobStoreTX\n            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore\n            clusterCheckinInterval: 10000\n            misfireThreshold: 60000\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            useProperties: false\n            tablePrefix: QRTZ_\n            isClustered: true\n        scheduler:\n          instanceId: AUTO\n          instanceName: clusteredScheduler\n        threadPool:\n          class: org.quartz.simpl.SimpleThreadPool\n          threadCount: 10\n          threadPriority: 5\n          threadsInheritContextClassLoaderOfInitializingThread: true\n #   auto-startup: ${cluster_mode?false:true}\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nrobot_unconn: true\n\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n  dingtalk:\n    webhook: https://oapi.dingtalk.com/robot/send?access_token=dddb5af98809d7f32e8cb64efdaef0743394fdb500f8b3b980953c1a2e74c4ee\n    secretKey: SEC6833fbf4d8d56f92ea5e362db2d3084458f6dd9ac23c941b5bd6492c53c35a55\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27778\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  warning-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}\n\n\n', 'a35376b41c01c613eb4236ebb0269786', '2022-12-09 09:30:18', '2023-03-31 06:16:09', 'nacos', '192.168.18.16', '', '00c78515-712c-4d63-ae50-6144e88958f3', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (793, 'controller.yml', 'DEFAULT_GROUP', 'server:\n  port: 19090\n  servlet:\n    context-path: /controller\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.sendi.controller.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n  quartz:\n    job-store-type: jdbc\n    properties:\n      org:\n        quartz:\n          jobStore:\n            # class: org.quartz.impl.jdbcjobstore.JobStoreTX\n            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore\n            clusterCheckinInterval: 10000\n            misfireThreshold: 60000\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            useProperties: false\n            tablePrefix: QRTZ_\n            isClustered: true\n        scheduler:\n          instanceId: AUTO\n          instanceName: clusteredScheduler\n        threadPool:\n          class: org.quartz.simpl.SimpleThreadPool\n          threadCount: 10\n          threadPriority: 5\n          threadsInheritContextClassLoaderOfInitializingThread: true\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n\nTASK_PHOTO_NGINX_PATH: /task_photo/\nTASK_VIDEO_NGINX_PATH: /task_video/\nocr_default_url: http://127.0.0.1:18888/image_code\ngeneral_default_url: http://127.0.0.1:18810/text_cls\n\nrobot_unconn: true   \nadd_userInfo_interceptor: true\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27781\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  console-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', '70db476af871d96644a2b7c9b4d37f2f', '2022-12-09 09:30:18', '2023-03-31 06:17:12', 'nacos', '192.168.18.16', '', '00c78515-712c-4d63-ae50-6144e88958f3', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (794, 'datae-authentication-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9040\n  servlet:\n    context-path: /auth\n\ndatae:\n  auth:\n    enabled: true\n    checkCodeBasePath: /tmp/check_code_image\n    ignoreCheckCode: true\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.datae.authenticationserver.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}', '4e6e4544998c25cbe777c1dfd11be5a1', '2022-12-09 09:30:18', '2023-03-31 06:18:08', 'nacos', '192.168.18.16', '', '00c78515-712c-4d63-ae50-6144e88958f3', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (795, 'datae-base.yml', 'DEFAULT_GROUP', 'spring:\n  devtools:\n    restart:\n      enabled: false\n  cloud:\n    nacos:\n      discovery:\n        server-addr: \'192.168.18.17:9002\'\n        namespace: 00c78515-712c-4d63-ae50-6144e88958f3\n\nswagger:\n    enabled: true\n\n# 关闭actuator的所有端点\nmanagement:\n  endpoints:\n    enabled-by-default: false\n\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 25000\n        readTimeout: 25000\n\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker:\n        requestVolumeThreshold: 1000\n      execution:\n        timeout:\n          enabled: true\n        isolation:\n          thread:\n            timeoutInMilliseconds: 20000\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default\n\nlogging:\n  config: classpath:logback-spring.xml\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    # 基础服务\n    cn.gzsendi.datae.authenticationserver: info\n    cn.gzsendi.datae.gateway: info\n    cn.gzsendi.rpa.system: info\n    # 业务服务\n    cn.sendi.controller: info\n    cn.gzsendi.rpa.controller: debug\n    cn.gzsendi.rpa.designer: info\n    cn.gzsendi.rpa.robot: info\n    cn.gzsendi.rpa.taskQueue: debug\n    cn.gzsendi.rpa.warning: info\n  # file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7\n\n\nquartz_url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\nquartz_user: datae\nquartz_password: Sd_12345\n\nschedule: \n  #是否集群模式，false：scheduler + quartz  , true: powerjob\n  cluster_mode: false\n  powerjob:\n    worker:\n      #是否启动powerJob\n      enabled: ${schedule.cluster_mode:false}\n      # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n      server-address: 192.168.18.17:7700\n      # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n      protocol: akka\n      # 持久化方式，可选，默认 disk\n      store-strategy: disk\n      # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n      max-result-length: 4096\n      # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n      max-appended-wf-context-length: 4096\n      # 同时运行的轻量级任务数量上限\n      max-lightweight-task-num: 1024\n      # 同时运行的重量级任务数量上限\n      max-heavy-task-num: 64\n\n', 'f1af96c18222cbf8328d4ac757570795', '2022-12-09 09:30:18', '2023-05-22 03:58:15', 'nacos', '192.168.18.16', '', '00c78515-712c-4d63-ae50-6144e88958f3', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (796, 'datae-gateway.yml', 'DEFAULT_GROUP', 'server:\n  port: 9030\n  # 2.x gateway 使用的是netty\n  # tomcat:\n  #   max-threads: 100\n  #   accept-count: 2000\n  #   max-connections: 2000\n\nspring:\n  servlet:\n    #文件上传大小限制\n    multipart:\n      maxRequestSize: 100MB\n      max-file-size: 100MB\n  cloud:\n    gateway:\n      #基于手动设置进行路由\n      routes:\n        ####################   RPA start   #######################\n        # 认证服务swagger\n        - id: auth_swagger\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_user_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/user/**\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务token\n        - id: auth_token_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/token/**\n        # 流程易基础系统服务\n        - id: rpa-system-swagger\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易告警管理服务\n        - id: rpa-warning-swagger\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # console服务druid监控\n        - id: console_druid\n          uri: lb://controller\n          predicates:\n            - Path=/controller/druid/**\n          filters:\n            - AuthSkipFilterFactory\n        # console服务prometheus监控\n        - id: console_prometheus\n          uri: lb://controller\n          predicates:\n            - Path=/controller/actuator/prometheus\n          filters:\n            - AuthSkipFilterFactory\n        # controller-swagger\n        - id: controller-swagger\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # controller-version\n        - id: controller-version\n          uri: lb://controller\n          predicates:\n            - Path=/controller/statistics/homePage/version\n          filters:\n            - AuthSkipFilterFactory\n        # 任务队列swagger\n        - id: taskQueue-swagger\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 设计器服务swagger\n        - id: designer-swagger\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人服务swagger\n        - id: robot-swagger\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 组件市场swagger\n        - id: component-market-server-swagger\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server-downloadIcon\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/moduleMenu/downloadIconFile\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/**\n        # 在线升级swagger\n        - id: online-update-swagger\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-reload\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/casbinController/reload\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system1\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/**\n        - id: rpa-robot-server\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/**\n        ####################   RPA end  #######################\n        # 设计器登录    \n        - id: controller-designer-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/designerLogin/signIn\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人登录    \n        - id: controller-robot-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/robotLogin/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1    \n        - id: controller-api1\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1.5   \n        - id: controller-api15\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.5/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V2    \n        - id: controller-api2\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 控制台服务\n        - id: controller\n          uri: lb://controller\n          predicates:\n            - Path=/controller/**\n        # 任务队列服务\n        - id: rpa-taskQueue-server\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/**\n        # 设计器服务\n        - id: rpa-designer-server\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/**\n        - id: rpa-warning-server\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/**\n        - id: online-update\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/**  \n        - id: ai-system-server\n          uri: lb://ai-system-server\n          predicates:\n            - Path=/aiProject/** \n\n      #基于服务发现进行路由\n#hystrix 取消超时\nhystrix:\n  #10分钟熔断\n  metrics:\n    enabled: true\n    polling-interval-ms: 20000', '4fc4abf9ea5a9131e936aa7d1744cf07', '2022-12-09 09:30:18', '2023-04-20 08:42:42', 'nacos', '192.168.18.16', '', '00c78515-712c-4d63-ae50-6144e88958f3', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (797, 'rpa-designer-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19100\n  servlet:\n    context-path: /designer\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.designer.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: true\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27779\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  designer-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', '26a7d4076b668f291236e1c43bac71ab', '2022-12-09 09:30:18', '2023-03-31 06:18:32', 'nacos', '192.168.18.16', '', '00c78515-712c-4d63-ae50-6144e88958f3', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (798, 'rpa-robot-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19098\n  servlet:\n    context-path: /rpa-robot-server\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.robot.dao.mapper.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j     \n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny: \n  #redis#\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl:  org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nocr_default_url: http://127.0.0.1:18888/image_code\ngeneral_default_url: http://127.0.0.1:18810/text_cls\nreconnTime: 300\n\nfailMessage:\n  running_task_not_concurrent_message: 机器人正在运行不能并发的流程，需要等待任务运行结束\n  wait_task_not_concurrent_message: 等待运行的任务为独占流程，需要等待机器人正在运行的任务结束\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27780\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  robot-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', 'decec45390269c7b1e5909bc68a6c81e', '2022-12-09 09:30:18', '2023-05-09 08:33:06', 'nacos', '192.168.18.16', '', '00c78515-712c-4d63-ae50-6144e88958f3', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (799, 'rpa-system-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9020\n  servlet:\n    context-path: /system\n\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    default-enum-type-handler: com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n\ncasbin:\n    enableCasbin: true\n    useSyncedEnforcer: true\n    storeType: jdbc\n    initializeSchema: create\n    model: classpath:casbin/model.conf\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.system.dao.mapper.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: \n        max-active: 10\n        max-wait: -1\n        max-idle: 8\n        min-idle: 0\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}', '26df5a5ef1066569e6c8018027e444f7', '2022-12-09 09:30:18', '2023-03-31 06:18:50', 'nacos', '192.168.18.16', '', '00c78515-712c-4d63-ae50-6144e88958f3', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (800, 'rpa-taskQueue-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19099\n  servlet:\n    context-path: /taskQueue\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.taskQueue.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl:  org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27777\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  taskqueue-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', '13fdc926ac8c6731ef83f994aed301a6', '2022-12-09 09:30:18', '2023-05-09 08:38:31', 'nacos', '192.168.18.16', '', '00c78515-712c-4d63-ae50-6144e88958f3', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (801, 'service.vgroupMapping.my_test_tx_group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2022-12-09 09:30:18', '2023-03-03 03:52:05', NULL, '192.168.18.16', '', '00c78515-712c-4d63-ae50-6144e88958f3', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (802, 'online_update.yml', 'DEFAULT_GROUP', 'server:\n  port: 15556\n  servlet:\n    context-path: /online-update\n  \nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\nknife4j:\n  enable: true    \nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n\nproductReleasePlatformIpAddr: 103.215.44.37:8889\ncheckVersionUpdateUri: /product-release-platform/onlineUpdate/checkVersionUpdate\ngetUpdatePkgDownloadPathUri: /product-release-platform/onlineUpdate/getUpdatePkgDownloadPath\ncharCodeValue: OTc0OTU3YzctMDFmMi00MGMwLWExZTctMTczZjdmMjg3MjE4\ncharCodeKey: char-code\n', '406e78e5a86ad7f97cd6079395b0c8e2', '2022-12-09 09:30:18', '2023-03-03 03:52:05', NULL, '192.168.18.16', '', '00c78515-712c-4d63-ae50-6144e88958f3', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (803, 'ai-system-server-test.yml', 'DEFAULT_GROUP', 'server:\n  port: 9200\n  servlet:\n    context-path: /aiProject\nspring:\n  redis:\n    host: 172.168.201.90\n    port: 6379\n    password: Sd_12345\n  mvc:\n    view:\n      prefix: classpath:/templates/\n      suffix: .html\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://172.168.201.90:3306/ai_system?useSSL=false&characterEncoding=UTF-8\n    username: datae\n    password: Sd_12345\n  servlet:\n    multipart:\n      max-request-size: 1024MB\n      max-file-size: 1024MB\n\n\nmybatis-plus:\n  mapper-locations: classpath:mapping/*.xml\n  configuration:\n    map-underscore-to-camel-case: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n\nai:\n  linuxBaseUrl: /usr/local/lib/ai_system_server/files/\n  windowsBaseUrl: D:\\ai_system\\\n  verificationCodeExtends: jpg,zip\n  address: http://172.168.201.90:{0}{1}\n  #机器人交互\n  robot:\n    runRobotUrl: https://172.168.201.90:44391/controller/v2.0/api/runProcessWithNoFile  #运行机器人流程\n    cancelRobotUrl: https://172.168.201.90:44391/controller/v1.0/api/cancelTask         #\n    robotStatus: https://172.168.201.90:44391/controller/v1.0/api/selectRobotStatusById\n    taskStatus: https://172.168.201.90:44391/controller/v1.0/api/showResultByTaskId\n    key: 29359b15-c480-426c-b3c0-6d247200f67c\n    body:\n      callbackUrl:\n      inputValues:\n      processId: 1116\n      robotIds:', '81a7cfbe30d852d18bcc8eef12bbcb7d', '2022-12-09 09:30:18', '2023-03-03 03:52:05', NULL, '192.168.18.16', '', '00c78515-712c-4d63-ae50-6144e88958f3', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (804, 'component-market-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9234\n  servlet:\n    context-path: /component-market-server\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/component_market?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n\n  #redis#\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 5000s\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nknife4j:\n  enable: true    \nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn', '99485af06b82fd4e4529301166bc572e', '2022-12-09 09:30:18', '2023-03-03 03:52:05', NULL, '192.168.18.16', '', '00c78515-712c-4d63-ae50-6144e88958f3', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (805, 'component-market-server-test.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 9234\r\n  servlet:\r\n    context-path: /component-market-server\r\n\r\nspring:\r\n  datasource:\r\n    url: jdbc:mysql://172.168.201.90:3306/component_market?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\r\n    username: datae\r\n    password: Sd_12345\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    driver-class-name: com.mysql.jdbc.Driver\r\n\r\n  #redis#\r\n  redis:\r\n    database: 0\r\n    host: 127.0.0.1\r\n    port: 6379\r\n    password: Sd_12345\r\n    timeout: 5000s\r\n#mybatis#\r\nmybatis:\r\n  mapper-locations: classpath:mapper/*.xml\r\n  type-aliases-package: cn.sendi.dao.entity\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\nknife4j:\r\n  enable: true    \r\nlogging:\r\n  level:\r\n    root: info\r\n    com.netflix: warn\r\n    com.alibaba.nacos.client.naming: warn', 'fc1dbc201953e6f25a79a9b8fbf5a7b3', '2022-12-09 09:30:18', '2023-03-03 03:52:05', NULL, '192.168.18.16', '', '00c78515-712c-4d63-ae50-6144e88958f3', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (806, 'product-release-platform.yml', 'DEFAULT_GROUP', 'server:\n  port: 19093\n  servlet:\n    context-path: /product-release-platform\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/product_release_platform?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n\n  #redis#\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 5000s\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nknife4j:\n  enable: true    \nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn', '3e407a532cd81b8fd79da407a0dd9bfe', '2022-12-09 09:30:18', '2023-03-03 03:52:05', NULL, '192.168.18.16', '', '00c78515-712c-4d63-ae50-6144e88958f3', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (807, 'rpa-common.yml', 'DEFAULT_GROUP', 'minIO: \n    # 是否启动了minIO\n    enabled: false\n    # 启动了minIO后，文件路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://127.0.0.1:9010\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n\nLOG_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_photo/\nTASK_VIDEO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/task_file/\n\nPROCESS_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/process/\n\nlicensePastDueMessage: 使用权限已到期-您的账号使用权限已到期，请联系业务人员或者拨打电话：400-830-3030续期，谢谢！\nlicensePastDueMessageTitle: 使用权限已到期\n\nchatGPT:\n    proxyHost: 192.168.62.20\n    proxyPort: 1080\n    apiKey: 123456\n    apiHost: https://api.openai.com/\n    mode: testMode', 'e226b35ecd8d9117174db8ea882eb968', '2022-12-09 09:30:18', '2023-05-24 08:25:37', 'nacos', '192.168.18.16', '', '00c78515-712c-4d63-ae50-6144e88958f3', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (808, 'rpa-websocket-server.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 19100\r\n  servlet:\r\n    context-path: /rpa-websocket-server\r\n\r\n  #redis#\r\n  redis:\r\n    database: 0\r\n    host: 172.168.200.243\r\n    port: 6379\r\n    password: Sd_12345\r\n    timeout: 5000s \r\nswagger:\r\n  enable: true\r\n', 'cb5d5cead3db00100235b741bcc36d58', '2022-12-09 09:30:18', '2023-02-13 02:30:48', NULL, '192.168.18.14', '', '00c78515-712c-4d63-ae50-6144e88958f3', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (1027, 'datae-gateway-sentinel-flow', 'SENTINEL_GROUP', '[\n    {\n        \"resource\": \"/**\",\n        \"limitApp\": \"default\",\n        \"count\": 5,\n        \"grade\": 1,\n        \"strategy\": 0,\n        \"controlBehavior\": 0,\n        \"clusterMode\": false\n    }\n]', '72e0f3a0bae73a2c5564d2b2329e1070', '2023-03-08 05:43:28', '2023-03-23 09:46:27', NULL, '192.168.18.3', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1029, 'datae-gateway-sentinel-degrade', 'SENTINEL_GROUP', '[\n    {\n        \"resource\":\"/**\",\n        \"limitApp\":\"default\",\n        \"grade\":2,\n        \"count\":20,\n        \"timeWindow\":100,\n        \"minRequestAmount\":5,\n        \"statIntervalMs\":1000\n    }\n]', '657270c58869021dd11c88c094060f54', '2023-03-08 05:45:35', '2023-03-23 09:46:27', NULL, '192.168.18.3', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1031, 'datae-gateway-sentinel-param-flow', 'SENTINEL_GROUP', '{}', '99914b932bd37a50b983c5e7c90ae93b', '2023-03-08 05:46:55', '2023-03-23 09:46:27', NULL, '192.168.18.3', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1032, 'datae-gateway-sentinel-system', 'SENTINEL_GROUP', '[\n  {\n    \"highestCpuUsage\": 0.75,\n    \"maxThread\": 10,\n    \"qps\": 20\n  }\n]', 'a68a43e2a278789b05c408446c990590', '2023-03-08 05:47:39', '2023-03-23 09:46:27', NULL, '192.168.18.3', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1033, 'datae-gateway-sentinel-authority', 'SENTINEL_GROUP', '{}', '99914b932bd37a50b983c5e7c90ae93b', '2023-03-08 05:49:08', '2023-03-23 09:46:27', NULL, '192.168.18.3', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1034, 'datae-gateway-sentinel-gw-flow', 'SENTINEL_GROUP', '{}', '99914b932bd37a50b983c5e7c90ae93b', '2023-03-08 05:50:32', '2023-03-23 09:46:27', NULL, '192.168.18.3', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1036, 'datae-gateway-sentinel-gw-api-group', 'SENTINEL_GROUP', '{}', '99914b932bd37a50b983c5e7c90ae93b', '2023-03-08 05:52:13', '2023-03-23 09:46:27', NULL, '192.168.18.3', '', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1077, 'datae-gateway-sentinel-flow', 'SENTINEL_GROUP', '[\n    {\n        \"resource\": \"/**\",\n        \"limitApp\": \"default\",\n        \"count\": 5,\n        \"grade\": 1,\n        \"strategy\": 0,\n        \"controlBehavior\": 0,\n        \"clusterMode\": false\n    }\n]', '72e0f3a0bae73a2c5564d2b2329e1070', '2023-03-27 06:28:56', '2023-03-27 06:28:56', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1078, 'datae-gateway-sentinel-degrade', 'SENTINEL_GROUP', '[\n    {\n        \"resource\":\"/**\",\n        \"limitApp\":\"default\",\n        \"grade\":2,\n        \"count\":20,\n        \"timeWindow\":100,\n        \"minRequestAmount\":5,\n        \"statIntervalMs\":1000\n    }\n]', '657270c58869021dd11c88c094060f54', '2023-03-27 06:28:56', '2023-03-27 06:28:56', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1079, 'datae-gateway-sentinel-param-flow', 'SENTINEL_GROUP', '{}', '99914b932bd37a50b983c5e7c90ae93b', '2023-03-27 06:28:56', '2023-03-27 06:28:56', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1080, 'datae-gateway-sentinel-system', 'SENTINEL_GROUP', '[\n  {\n    \"highestCpuUsage\": 0.75,\n    \"maxThread\": 10,\n    \"qps\": 20\n  }\n]', 'a68a43e2a278789b05c408446c990590', '2023-03-27 06:28:56', '2023-03-27 06:28:56', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1081, 'datae-gateway-sentinel-authority', 'SENTINEL_GROUP', '{}', '99914b932bd37a50b983c5e7c90ae93b', '2023-03-27 06:28:56', '2023-03-27 06:28:56', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1082, 'datae-gateway-sentinel-gw-flow', 'SENTINEL_GROUP', '{}', '99914b932bd37a50b983c5e7c90ae93b', '2023-03-27 06:28:56', '2023-03-27 06:28:56', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1083, 'datae-gateway-sentinel-gw-api-group', 'SENTINEL_GROUP', '{}', '99914b932bd37a50b983c5e7c90ae93b', '2023-03-27 06:28:56', '2023-03-27 06:28:56', NULL, '192.168.18.3', '', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1199, 'controller.yml', 'DEFAULT_GROUP', 'server:\n  port: 19090\n  servlet:\n    context-path: /controller\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nrobot_unconn: true    \nquartz_url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\nquartz_user: datae\nquartz_password: Sd_12345\nocr_default_url: http://127.0.0.1:18888/image_code\nLOG_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_photo/\nTASK_PHOTO_NGINX_PATH: /task_photo/\nTASK_VIDEO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/task_file/\nTASK_VIDEO_NGINX_PATH: /task_video/\ngeneral_default_url: http://127.0.0.1:18810/text_cls\nadd_userInfo_interceptor: true\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: controller\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"1fbe67fe-66ff-49da-8ef8-cbe59450ed33\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"1fbe67fe-66ff-49da-8ef8-cbe59450ed33\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default', 'f0565cf4b697abdb098dbded0293edfd', '2023-04-03 01:26:50', '2023-04-03 02:00:33', 'nacos', '192.168.18.16', '', '1fbe67fe-66ff-49da-8ef8-cbe59450ed33', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (1200, 'datae-authentication-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9040\n  servlet:\n    context-path: /auth\n\ndatae:\n  auth:\n    enabled: true\n    checkCodeBasePath: /tmp/check_code_image\n    ignoreCheckCode: true\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n    druid: {\n      filters: stat,\n      maxActive: 20,\n      initialSize: 10,\n      maxWait: 60000,\n      minIdle: 1,\n      timeBetweenEvictionRunsMillis: 60000,\n      minEvictableIdleTimeMillis: 300000,\n      validationQuery: select \'x\',\n      testWhileIdle: true,\n      testOnBorrow: false,\n      testOnReturn: false,\n      poolPreparedStatements: true,\n      maxOpenPreparedStatements: 20\n    }\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n', '0308b84512dfed7ce702a8b4913f036c', '2023-04-03 01:26:50', '2023-04-03 01:26:50', NULL, '192.168.18.16', '', '1fbe67fe-66ff-49da-8ef8-cbe59450ed33', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (1201, 'datae-base.yml', 'DEFAULT_GROUP', 'spring:\n  devtools:\n    restart:\n      enabled: false\n  cloud:\n    nacos:\n      discovery:\n        server-addr: \'192.168.18.17:9002\'\n        namespace: 1fbe67fe-66ff-49da-8ef8-cbe59450ed33\n\nswagger:\n    enabled: false\n\n# 关闭actuator的所有端点\nmanagement:\n  endpoints:\n    enabled-by-default: false\n\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 25000\n        readTimeout: 25000\n\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker:\n        requestVolumeThreshold: 1000\n      execution:\n        timeout:\n          enabled: true\n        isolation:\n          thread:\n            timeoutInMilliseconds: 20000\n\nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    # 基础服务\n    cn.gzsendi.datae.authenticationserver: info\n    cn.gzsendi.datae.gateway: info\n    cn.gzsendi.rpa.system: info\n    # 业务服务\n    cn.sendi.controller: info\n    cn.gzsendi.rpa.controller: info\n    cn.gzsendi.rpa.designer: info\n    cn.gzsendi.rpa.robot: info\n    cn.gzsendi.rpa.taskQueue: info\n    cn.gzsendi.rpa.warning: info\n  file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7\n', '017acc68acb9b4a38a1508243a9dcbd0', '2023-04-03 01:26:50', '2023-04-03 01:29:45', 'nacos', '192.168.18.16', '', '1fbe67fe-66ff-49da-8ef8-cbe59450ed33', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (1202, 'datae-gateway.yml', 'DEFAULT_GROUP', 'server:\n  port: 9030\n  tomcat:\n    max-threads: 100\n    accept-count: 2000\n    max-connections: 2000\n\nspring:\n  servlet:\n    #文件上传大小限制\n    multipart:\n      maxRequestSize: 100MB\n      max-file-size: 100MB\n  cloud:\n    gateway:\n      #基于手动设置进行路由\n      routes:\n        ####################   RPA start   #######################\n        # 认证服务swagger\n        - id: auth_swagger\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_user_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/user/**\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务token\n        - id: auth_token_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/token/**\n        # 流程易基础系统服务\n        - id: rpa-system-swagger\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易告警管理服务\n        - id: rpa-warning-swagger\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # controller-swagger\n        - id: controller-swagger\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # controller-version\n        - id: controller-version\n          uri: lb://controller\n          predicates:\n            - Path=/controller/statistics/homePage/version\n          filters:\n            - AuthSkipFilterFactory\n        # 任务队列swagger\n        - id: taskQueue-swagger\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 设计器服务swagger\n        - id: designer-swagger\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人服务swagger\n        - id: robot-swagger\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-reload\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/casbinController/reload\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system1\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/**\n        - id: rpa-robot-server\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/**\n        ####################   RPA end  #######################\n        # 设计器登录    \n        - id: controller-designer-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/designerLogin/signIn\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人登录    \n        - id: controller-robot-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/robotLogin/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1    \n        - id: controller-api1\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1.5   \n        - id: controller-api15\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.5/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V2    \n        - id: controller-api2\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 控制台服务\n        - id: controller\n          uri: lb://controller\n          predicates:\n            - Path=/controller/**\n        # 任务队列服务\n        - id: rpa-taskQueue-server\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/**\n        # 设计器服务\n        - id: rpa-designer-server\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/**\n        - id: rpa-warning-server\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/**\n        - id: online-update\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/**  \n        - id: ai-system-server\n          uri: lb://ai-system-server\n          predicates:\n            - Path=/aiProject/** \n\n      #基于服务发现进行路由\n#hystrix 取消超时\nhystrix:\n  #10分钟熔断\n  metrics:\n    enabled: true\n    polling-interval-ms: 20000', '72b3dc4687d0715ae85c93141e604dc9', '2023-04-03 01:26:50', '2023-04-03 01:26:50', NULL, '192.168.18.16', '', '1fbe67fe-66ff-49da-8ef8-cbe59450ed33', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (1203, 'rpa-common.yml', 'DEFAULT_GROUP', 'minIO: \r\n    # 是否启动了minIO\r\n    enabled: false\r\n    # 启动了minIO后，文件路径的前缀标记\r\n    prefix: MINIO\r\n    access_key: root\r\n    secret_key: gzSdLcyRpa@12@34\r\n    url: http://127.0.0.1:9010\r\n    # minIO中，任务运行日志路径\r\n    task_run_log_path: /run_log/\r\nnotify_way:\r\n  email:\r\n    account: sdorderrobot@gzsendi.cn\r\n    password: SdRobot_2019\r\n    host: mail.gzsendi.cn\r\n    port: 25', 'e641129ac070451b9b9a19f76301ec65', '2023-04-03 01:26:50', '2023-04-03 01:26:50', NULL, '192.168.18.16', '', '1fbe67fe-66ff-49da-8ef8-cbe59450ed33', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (1204, 'rpa-designer-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19100\n  servlet:\n    context-path: /designer\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n    \nPROCESS_PATH: /usr/local/lib/controller-java_2.0.0/rpa-designer-server-2.0.0/process/\n\n# 加入seata配置\nseata:\n  use-jdk-proxy: true\n  enabled: true\n  application-id: designer\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 127.0.0.1:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default', 'b8b6cca4341bdb8f1ab00c96da765e6b', '2023-04-03 01:26:50', '2023-04-03 01:26:50', NULL, '192.168.18.16', '', '1fbe67fe-66ff-49da-8ef8-cbe59450ed33', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (1205, 'rpa-robot-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19098\n  servlet:\n    context-path: /rpa-robot-server\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  #redis#\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nocr_default_url: http://127.0.0.1:18888/image_code\nTASK_PHOTO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_photo/\nTASK_FILE_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/task_file/\nTASK_VIDEO_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_video/\ngeneral_default_url: http://127.0.0.1:18810/text_cls\nreconnTime: 300\n\nfailMessage:\n  running_task_not_concurrent_message: 机器人正在运行不能并发的流程，需要等待任务运行结束\n  wait_task_not_concurrent_message: 等待运行的任务为独占流程，需要等待机器人正在运行的任务结束\n\n# 加入seata配置\nseata:\n  use-jdk-proxy: true\n  enabled: true\n  application-id: robot\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"1fbe67fe-66ff-49da-8ef8-cbe59450ed33\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"1fbe67fe-66ff-49da-8ef8-cbe59450ed33\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default', '68e3433824bb767d34fa8b7dddec2d77', '2023-04-03 01:26:50', '2023-04-03 01:57:47', 'nacos', '192.168.18.16', '', '1fbe67fe-66ff-49da-8ef8-cbe59450ed33', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (1206, 'rpa-system-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9020\n  servlet:\n    context-path: /system\n\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    default-enum-type-handler: com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n\ncasbin:\n    enableCasbin: true\n    useSyncedEnforcer: true\n    storeType: jdbc\n    initializeSchema: create\n    model: classpath:casbin/model.conf\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n    druid: {\n      filters: stat,\n      maxActive: 20,\n      initialSize: 10,\n      maxWait: 60000,\n      minIdle: 1,\n      timeBetweenEvictionRunsMillis: 60000,\n      minEvictableIdleTimeMillis: 300000,\n      validationQuery: select \'x\',\n      testWhileIdle: true,\n      testOnBorrow: false,\n      testOnReturn: false,\n      poolPreparedStatements: true,\n      maxOpenPreparedStatements: 20\n    }\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\n# 加入seata配置\nseata:\n  use-jdk-proxy: true\n  enabled: true\n  application-id: system\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 127.0.0.1:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default', 'd2ffdaa79dc2ada2321704314bec88f7', '2023-04-03 01:26:50', '2023-04-03 01:26:50', NULL, '192.168.18.16', '', '1fbe67fe-66ff-49da-8ef8-cbe59450ed33', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (1207, 'rpa-taskQueue-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19099\n  servlet:\n    context-path: /taskQueue\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nLOG_PATH: /usr/local/lib/controller-java_2.0.0/rpa-robot-server-2.0.0/run_log/\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: taskQueue\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:9002\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      group : SEATA_GROUP\n      cluster: default\n  config:\n    type: nacos\n    nacos:\n      group: SEATA_GROUP\n      cluster: default\n      namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n      server-addr: 127.0.0.1:9002\n  service:\n    vgroup-mapping:\n      my_test_tx_group: default', 'fcb9f49bc05a50d38c52e4226360306f', '2023-04-03 01:26:50', '2023-04-03 01:26:50', NULL, '192.168.18.16', '', '1fbe67fe-66ff-49da-8ef8-cbe59450ed33', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (1208, 'rpa-warning-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19094\n  servlet:\n    context-path: /warning\n\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.jdbc.Driver\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000\n  quartz:\n    job-store-type: jdbc\n    properties:\n      org:\n        quartz:\n          jobStore:\n            class: org.quartz.impl.jdbcjobstore.JobStoreTX\n            clusterCheckinInterval: 10000\n            misfireThreshold: 60000\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            useProperties: false\n            tablePrefix: QRTZ_\n            isClustered: true\n        scheduler:\n          instanceId: AUTO\n        threadPool:\n          class: org.quartz.simpl.SimpleThreadPool\n          threadCount: 10\n          threadPriority: 5\n          threadsInheritContextClassLoaderOfInitializingThread: true\n\nrobot_unconn: true\n\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n  dingtalk:\n    webhook: https://oapi.dingtalk.com/robot/send?access_token=dddb5af98809d7f32e8cb64efdaef0743394fdb500f8b3b980953c1a2e74c4ee\n    secretKey: SEC6833fbf4d8d56f92ea5e362db2d3084458f6dd9ac23c941b5bd6492c53c35a55\n', 'a22edb9fc1ef615ffe8a745c2b457145', '2023-04-03 01:26:50', '2023-04-03 01:26:50', NULL, '192.168.18.16', '', '1fbe67fe-66ff-49da-8ef8-cbe59450ed33', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (1209, 'service.vgroupMapping.my_test_tx_group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2023-04-03 01:26:50', '2023-04-03 01:26:50', NULL, '192.168.18.16', '', '1fbe67fe-66ff-49da-8ef8-cbe59450ed33', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1222, 'rpa-warning-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19094\n  servlet:\n    context-path: /warning\n\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.warning.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000\n  quartz:\n    job-store-type: jdbc\n    properties:\n      org:\n        quartz:\n          jobStore:\n            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore\n            clusterCheckinInterval: 10000\n            misfireThreshold: 60000\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            useProperties: false\n            tablePrefix: QRTZ_\n            isClustered: true\n        scheduler:\n          instanceId: AUTO\n        threadPool:\n          class: org.quartz.simpl.SimpleThreadPool\n          threadCount: 10\n          threadPriority: 5\n          threadsInheritContextClassLoaderOfInitializingThread: true\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nrobot_unconn: true\n\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n  dingtalk:\n    webhook: https://oapi.dingtalk.com/robot/send?access_token=dddb5af98809d7f32e8cb64efdaef0743394fdb500f8b3b980953c1a2e74c4ee\n    secretKey: SEC6833fbf4d8d56f92ea5e362db2d3084458f6dd9ac23c941b5bd6492c53c35a55\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27778\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  warning-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', 'cd94dec69c15270157a6b298787966de', '2023-04-03 05:54:09', '2023-04-03 05:54:09', NULL, '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (1223, 'controller.yml', 'DEFAULT_GROUP', 'server:\n  port: 19090\n  servlet:\n    context-path: /controller\n  compression:\n    enabled: true\n    mime-types: application/json\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.sendi.controller.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: \n        max-active: 10\n        max-wait: -1\n        max-idle: 8\n        min-idle: 0\n  quartz:\n    job-store-type: jdbc\n    properties:\n      org:\n        quartz:\n          jobStore:\n            # class: org.quartz.impl.jdbcjobstore.JobStoreTX\n            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore\n            clusterCheckinInterval: 10000\n            misfireThreshold: 60000\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            useProperties: false\n            tablePrefix: QRTZ_\n            isClustered: true\n        scheduler:\n          instanceId: AUTO\n          instanceName: clusteredScheduler\n        threadPool:\n          class: org.quartz.simpl.SimpleThreadPool\n          threadCount: 10\n          threadPriority: 5\n          threadsInheritContextClassLoaderOfInitializingThread: true\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nTASK_PHOTO_NGINX_PATH: /task_photo/\nTASK_VIDEO_NGINX_PATH: /task_video/\nocr_default_url: http://127.0.0.1:18888/image_code\ngeneral_default_url: http://127.0.0.1:18810/text_cls\n\nrobot_unconn: true   \nadd_userInfo_interceptor: true\n\n\n\npowerjob:\n  systemLogJob: 流程易-广播清理系统日志\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27781\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  console-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}\n\n\nalipay:\n  appId: 9021000122682369\n  merchantPrivateKey: MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCO9H0Xtusc4hU8oXqCp3+Jy4mqy+sPsQkWmKZoTdpbgGmw6avG1N7AzAekPYOaaLa8xmhNWxAPcOd47f7iFPDirS3mqZwXz6uWKQWeqQNl4hWk+cmLI0ca3o23w91DLCbde+oyJva1YKUlSPuSK7AABeDhCrHqkx3pnWSEfqcBNcVAMYLZVTpDmKgaJiUA61tY/6DpClK2trdFhOUGg2X+9ZpimPt1iACz7bcNjtMGFKD7zBuV1l+oLiS6YSP1j/xImTLa7FuXWAoLkqXG9nLpnmACeoMemyXvYLBmRFEnRChogwgIlZOXcHbW/e7y8nFiOn4J7RiDNNFtaxmoELk5AgMBAAECggEAcljybrOsITBemF76JeRhShF7DxmJ7sVHZcG46hnMHgD7ib1/382KWGFbg26JBEvaT+nMqIO8tv0yyjJk/OaPQGISIz1sVEeTEsvBaQX8Z9SOR6ZeJmOTjtSSO3n6VK7Ob7+ct30fPjoOH2LfiC5V287X8GqjoeUHukRhkPHWGEp0Q9ry9bCmltWhPC5b/tD+9zUgdoAMnZihv+Mwhf54TTcbxVAHQf5utLKB6rzQADd/pqNz98igRLeKaIe2XGaE8mV+dj5YZJS6L83nNr0rsD/AJ6KNRRX9Zz1dJ6yRyhnmU5XnbXHeyxW01ixxJE13MI6DLnSh4G8X/Z2HpKxTAQKBgQD3ZMVY+RiTTkBEVG/OBqZPYFRsS6iEuhrjpXCeAxEEw3N8Q0ZUEIt2vwD1uu0EwUXlrV9xglDjLHK8gV9Q4F89DGceIS0A8SuoLNRmGihGNGHOT/nMzovlS/ZigtoJK0WL4jDNb5fk9yXRYFyGAFPNXXBFNGRPw2TH3x6227LlaQKBgQCT7Zy/+GvxLfP+2hkGCJzIqC3q3eZOfdGOuiR4CZhXn5Uthc7OzcRnt+A2I3RT1fStO0kmI5hHCsdlNtGZ3iZRtGoFgpIDWR3sbi3mHAdjEsRgM6CdvbJRcO+rUrhSPv85gq1R2xPBD7W4neqdu/EQ4+CAZrNWPy2NoUwdt1GrUQKBgDZw8JTRzDyuXaorwqbeA783/ZwPUjhTFBPAlnXPSvF3aXSRAWsCcQ5inf11cy82sQEIFBbQjKhRYbZl6enMVmkCz7ZrqpGogOjzZJJLc01vvY4/P0N4uIRvIPswvHaEFTvhPMgYpJ54XNQklnfOnqJ0y34PN3vuDcGGMiYfVtDxAoGBAIPWOOU+WbVQ5ywy5CpkcpbCjGnN6fv6VlGFxArXQlaVezZfErls2aY2UjTt1DcDcFUTiVXcU1K9YIfsG1GukyguSm8ut0MUoX6dk3qJcGvzxeCXIoZzEgFTTca6qltimcR/mkhhn3FotuQamYaKgYY0EVleLmanV8np/xRc1QSBAoGADHZEmllp931219Rfty5kJYquQRNvIlOUAC6BhjmXGeJsy4C0oSBuriH8XucJ2Wgqn/6hFKQtiybY/pMEwdBOjYBA3QoT38yWjUC+6f1MlkIEpVDnvI8y8Cwhpi748U/eb4JZkXOss6XJEKWV0z1Qy0uy+YqYi+2mXbp8oZx4Uzo=\n  alipayPublicKey: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqFxk1A1LYFLuBDo2uCPxVmMtEI7SKkjAAuiIoRBjdGywY6Ze1SNiD2jaawp3lvzLLW7ZQ0ILQk9+r3uf20ZNehOwAOfoWRbpzYtuNgCsAZg9O2bPwNOPX7siph9cLKx+5/8wuhNk3lejDvYTT6McmbumhlK+sQNirlcrlt2xxNgQZNhGoJbO9yVqt0hPeXZTV3q+D8wLn7cj1XcPMfFyMOV+NAeGTsvsGqNNEdjIb4zVH6bRBi2ARktCCl3dbz9Gz+qK6Ml/hLVvcvQg/KT2cn+phgpHwNuDUI61HvMSbQf2n0vc5RC7H8DGAggs1bmNu98CfXIy57dPpYA3zxCuVQIDAQAB\n  gatewayUrl: https://openapi-sandbox.dl.alipaydev.com/gateway.do\n  notifyUrl: http://121.33.214.30:44390/chargeOrder/alipay/notify\n  returnUrl:\n\nwechat-pay:\n  app-id: 1\n  merchant-id: 1\n  merchant-serial-number: 1\n  notify-url: 1\n  private-key: MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCO9H0Xtusc4hU8oXqCp3+Jy4mqy+sPsQkWmKZoTdpbgGmw6avG1N7AzAekPYOaaLa8xmhNWxAPcOd47f7iFPDirS3mqZwXz6uWKQWeqQNl4hWk+cmLI0ca3o23w91DLCbde+oyJva1YKUlSPuSK7AABeDhCrHqkx3pnWSEfqcBNcVAMYLZVTpDmKgaJiUA61tY/6DpClK2trdFhOUGg2X+9ZpimPt1iACz7bcNjtMGFKD7zBuV1l+oLiS6YSP1j/xImTLa7FuXWAoLkqXG9nLpnmACeoMemyXvYLBmRFEnRChogwgIlZOXcHbW/e7y8nFiOn4J7RiDNNFtaxmoELk5AgMBAAECggEAcljybrOsITBemF76JeRhShF7DxmJ7sVHZcG46hnMHgD7ib1/382KWGFbg26JBEvaT+nMqIO8tv0yyjJk/OaPQGISIz1sVEeTEsvBaQX8Z9SOR6ZeJmOTjtSSO3n6VK7Ob7+ct30fPjoOH2LfiC5V287X8GqjoeUHukRhkPHWGEp0Q9ry9bCmltWhPC5b/tD+9zUgdoAMnZihv+Mwhf54TTcbxVAHQf5utLKB6rzQADd/pqNz98igRLeKaIe2XGaE8mV+dj5YZJS6L83nNr0rsD/AJ6KNRRX9Zz1dJ6yRyhnmU5XnbXHeyxW01ixxJE13MI6DLnSh4G8X/Z2HpKxTAQKBgQD3ZMVY+RiTTkBEVG/OBqZPYFRsS6iEuhrjpXCeAxEEw3N8Q0ZUEIt2vwD1uu0EwUXlrV9xglDjLHK8gV9Q4F89DGceIS0A8SuoLNRmGihGNGHOT/nMzovlS/ZigtoJK0WL4jDNb5fk9yXRYFyGAFPNXXBFNGRPw2TH3x6227LlaQKBgQCT7Zy/+GvxLfP+2hkGCJzIqC3q3eZOfdGOuiR4CZhXn5Uthc7OzcRnt+A2I3RT1fStO0kmI5hHCsdlNtGZ3iZRtGoFgpIDWR3sbi3mHAdjEsRgM6CdvbJRcO+rUrhSPv85gq1R2xPBD7W4neqdu/EQ4+CAZrNWPy2NoUwdt1GrUQKBgDZw8JTRzDyuXaorwqbeA783/ZwPUjhTFBPAlnXPSvF3aXSRAWsCcQ5inf11cy82sQEIFBbQjKhRYbZl6enMVmkCz7ZrqpGogOjzZJJLc01vvY4/P0N4uIRvIPswvHaEFTvhPMgYpJ54XNQklnfOnqJ0y34PN3vuDcGGMiYfVtDxAoGBAIPWOOU+WbVQ5ywy5CpkcpbCjGnN6fv6VlGFxArXQlaVezZfErls2aY2UjTt1DcDcFUTiVXcU1K9YIfsG1GukyguSm8ut0MUoX6dk3qJcGvzxeCXIoZzEgFTTca6qltimcR/mkhhn3FotuQamYaKgYY0EVleLmanV8np/xRc1QSBAoGADHZEmllp931219Rfty5kJYquQRNvIlOUAC6BhjmXGeJsy4C0oSBuriH8XucJ2Wgqn/6hFKQtiybY/pMEwdBOjYBA3QoT38yWjUC+6f1MlkIEpVDnvI8y8Cwhpi748U/eb4JZkXOss6XJEKWV0z1Qy0uy+YqYi+2mXbp8oZx4Uzo=\n  api-v3-key: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqFxk1A1LYFLuBDo2uCPxVmMtEI7SKkjAAuiIoRBjdGywY6Ze1SNiD2jaawp3lvzLLW7ZQ0ILQk9+r3uf20ZNehOwAOfoWRbpzYtuNgCsAZg9O2bPwNOPX7siph9cLKx+5/8wuhNk3lejDvYTT6McmbumhlK+sQNirlcrlt2xxNgQZNhGoJbO9yVqt0hPeXZTV3q+D8wLn7cj1XcPMfFyMOV+NAeGTsvsGqNNEdjIb4zVH6bRBi2ARktCCl3dbz9Gz+qK6Ml/hLVvcvQg/KT2cn+phgpHwNuDUI61HvMSbQf2n0vc5RC7H8DGAggs1bmNu98CfXIy57dPpYA3zxCuVQIDAQAB\n', '03702e50f6f0a3083c9e7c68fac35205', '2023-04-03 05:54:09', '2023-06-25 01:44:05', 'nacos', '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (1224, 'datae-authentication-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9040\n  servlet:\n    context-path: /auth\n\ndatae:\n  auth:\n    enabled: true\n    checkCodeBasePath: /tmp/check_code_image\n    ignoreCheckCode: true\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.datae.authenticationserver.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}', '4e6e4544998c25cbe777c1dfd11be5a1', '2023-04-03 05:54:09', '2023-04-03 05:54:09', NULL, '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (1225, 'datae-base.yml', 'DEFAULT_GROUP', 'spring:\n  devtools:\n    restart:\n      enabled: false\n  cloud:\n    nacos:\n      discovery:\n        server-addr: \'192.168.18.17:9002\'\n        namespace: 0655dab9-f097-4170-aa62-d94b23823be6\n\nswagger:\n    enabled: true\n\n# 关闭actuator的所有端点\n# management:\n#   endpoints:\n#     enabled-by-default: true\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 25000\n        readTimeout: 25000\n\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker:\n        requestVolumeThreshold: 1000\n      execution:\n        timeout:\n          enabled: true\n        isolation:\n          thread:\n            timeoutInMilliseconds: 20000\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default\n\nlogging:\n  config: classpath:logback-spring.xml\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    # 基础服务\n    cn.gzsendi.datae.authenticationclient: info\n    cn.gzsendi.datae.authenticationserver: info\n    cn.gzsendi.datae.gateway: info\n    cn.gzsendi.rpa.system: info\n    # 业务服务\n    cn.sendi.controller: info\n    cn.gzsendi.rpa.controller.dao.mapper: debug\n    cn.gzsendi.rpa.controller.service.impl: debug\n    cn.gzsendi.rpa.controller: info\n    cn.gzsendi.rpa.designer: info\n    cn.gzsendi.rpa.robot: info\n    cn.gzsendi.rpa.taskQueue: info\n    cn.gzsendi.rpa.warning: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n  # file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7\n\n\n\nschedule: \n  #是否集群模式，false：scheduler + quartz  , true: powerjob\n  cluster_mode: false\n  powerjob:\n    worker:\n      #是否启动powerJob\n      enabled: ${schedule.cluster_mode:false}\n      # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n      server-address: 192.168.18.17:7700\n      # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n      protocol: akka\n      # 持久化方式，可选，默认 disk\n      store-strategy: disk\n      # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n      max-result-length: 4096\n      # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n      max-appended-wf-context-length: 4096\n      # 同时运行的轻量级任务数量上限\n      max-lightweight-task-num: 1024\n      # 同时运行的重量级任务数量上限\n      max-heavy-task-num: 64', '91742762601c87cf84a76b4882637bf9', '2023-04-03 05:54:09', '2023-07-03 06:53:07', 'nacos', '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (1226, 'datae-gateway.yml', 'DEFAULT_GROUP', 'server:\n  port: 9030\n  # 2.x gateway 使用的是netty\n  tomcat:\n    max-threads: 100\n    accept-count: 2000\n    max-connections: 2000\n\nspring:\n  servlet:\n    #文件上传大小限制\n    multipart:\n      maxRequestSize: 100MB\n      max-file-size: 100MB\n  cloud:\n    # 负载均衡器缓存\n    loadbalancer:\n      ribbon:\n          enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    gateway:\n      #基于手动设置进行路由\n      routes:\n        ####################   RPA start   #######################\n        # 认证服务swagger\n        - id: auth_swagger\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_user_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/user/**\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务token\n        - id: auth_token_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/token/**\n        # 流程易基础系统服务\n        - id: rpa-system-swagger\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易告警管理服务\n        - id: rpa-warning-swagger\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # console服务druid监控\n        - id: console_druid\n          uri: lb://controller\n          predicates:\n            - Path=/controller/druid/**\n          filters:\n            - AuthSkipFilterFactory\n        # console服务prometheus监控\n        - id: console_prometheus\n          uri: lb://controller\n          predicates:\n            - Path=/controller/actuator/prometheus\n          filters:\n            - AuthSkipFilterFactory\n        # controller-swagger\n        - id: controller-swagger\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # controller-version\n        - id: controller-version\n          uri: lb://controller\n          predicates:\n            - Path=/controller/statistics/homePage/version\n          filters:\n            - AuthSkipFilterFactory\n        # controller-pay-notify\n        # - id: controller-pay-notify\n        #   uri: lb://controller\n        #   predicates:\n        #     - Path=/controller/chargeOrder/pay/notify/**\n        #   filters:\n        #     - AuthSkipFilterFactory\n        # 任务队列swagger\n        - id: taskQueue-swagger\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 设计器服务swagger\n        - id: designer-swagger\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人服务swagger\n        - id: robot-swagger\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 组件市场swagger\n        - id: component-market-server-swagger\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server-downloadIcon\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/moduleMenu/downloadIconFile\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/**\n        # 在线升级swagger\n        - id: online-update-swagger\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-reload\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/casbinController/reload\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-saas\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/system/saas/**\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system1\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/**\n        - id: rpa-robot-server\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/**\n        ####################   RPA end  #######################\n        # 设计器登录    \n        - id: controller-designer-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/designerLogin/signIn\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人登录    \n        - id: controller-robot-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/robotLogin/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1    \n        - id: controller-api1\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1.5   \n        - id: controller-api15\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.5/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V2    \n        - id: controller-api2\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 控制台服务\n        - id: controller\n          uri: lb://controller\n          predicates:\n            - Path=/controller/**\n        # 任务队列服务\n        - id: rpa-taskQueue-server\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/**\n        # 设计器服务\n        - id: rpa-designer-server\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/**\n        - id: rpa-warning-server\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/**\n        # 在线更新服务-获取最新安装包\n        - id: online-update-install-package\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/robotOnlineUpdate/getLatestInstallPkgDownloadPath,/online-update/designerOnlineUpdate/getLatestInstallPkgDownloadPath\n          filters:\n            - AuthSkipFilterFactory\n        - id: online-update\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/**  \n        - id: ai-system-server\n          uri: lb://ai-system-server\n          predicates:\n            - Path=/aiProject/** \n\n      #基于服务发现进行路由\n#hystrix 取消超时\nhystrix:\n  #10分钟熔断\n  metrics:\n    enabled: true\n    polling-interval-ms: 20000', 'a4f0e24acdc7c70aa27b87da97918470', '2023-04-03 05:54:09', '2023-06-15 01:38:32', 'nacos', '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (1227, 'rpa-designer-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19100\n  servlet:\n    context-path: /designer\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.designer.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: true\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27779\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  designer-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', '0ea0b25dedd800c90312cea2c080aa2b', '2023-04-03 05:54:09', '2023-04-23 03:32:30', 'nacos', '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (1228, 'rpa-robot-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19098\n  servlet:\n    context-path: /rpa-robot-server\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.robot.dao.mapper.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j     \n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny: \n  #redis#\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000s\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nocr_default_url: http://127.0.0.1:18888/image_code\ngeneral_default_url: http://127.0.0.1:18810/text_cls\nreconnTime: 300\n\nfailMessage:\n  running_task_not_concurrent_message: 机器人正在运行不能并发的流程，需要等待任务运行结束\n  wait_task_not_concurrent_message: 等待运行的任务为独占流程，需要等待机器人正在运行的任务结束\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27780\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  robot-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', '13a68abacc4d61b755519fe0067c04cb', '2023-04-03 05:54:09', '2023-05-30 05:58:02', 'nacos', '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (1229, 'rpa-system-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9020\n  servlet:\n    context-path: /system\n\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    default-enum-type-handler: com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n\ncasbin:\n    enableCasbin: true\n    useSyncedEnforcer: true\n    storeType: jdbc\n    initializeSchema: create\n    model: classpath:casbin/model.conf\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/datae_system_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.system.dao.mapper.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: \n        max-active: 10\n        max-wait: -1\n        max-idle: 8\n        min-idle: 0\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}', '26df5a5ef1066569e6c8018027e444f7', '2023-04-03 05:54:09', '2023-04-03 05:54:09', NULL, '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (1230, 'rpa-taskQueue-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 19099\n  servlet:\n    context-path: /taskQueue\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.taskQueue.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27777\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  taskqueue-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', '143fc75746bb62bb153b457079981e1e', '2023-04-03 05:54:09', '2023-04-03 05:54:09', NULL, '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (1231, 'service.vgroupMapping.my_test_tx_group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2023-04-03 05:54:09', '2023-04-03 05:54:09', NULL, '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1232, 'online_update.yml', 'DEFAULT_GROUP', 'server:\n  port: 15556\n  servlet:\n    context-path: /online-update\n  \nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\nknife4j:\n  enable: true    \nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n\n#productReleasePlatformIpAddr: 103.215.44.37:8889\nproductReleasePlatformIpAddr: 127.0.0.1:8889\ncheckVersionUpdateUri: /product-release-platform/onlineUpdate/checkVersionUpdate\ngetUpdatePkgDownloadPathUri: /product-release-platform/onlineUpdate/getUpdatePkgDownloadPath\ncharCodeValue: OTc0OTU3YzctMDFmMi00MGMwLWExZTctMTczZjdmMjg3MjE4\ncharCodeKey: char-code\n', 'd42b7c69c149c910935047e57014d90f', '2023-04-03 05:55:34', '2023-04-03 05:55:34', NULL, '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (1233, 'ai-system-server-test.yml', 'DEFAULT_GROUP', 'server:\n  port: 9200\n  servlet:\n    context-path: /aiProject\nspring:\n  redis:\n    host: 172.168.201.90\n    port: 6379\n    password: Sd_12345\n  mvc:\n    view:\n      prefix: classpath:/templates/\n      suffix: .html\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://172.168.201.90:3306/ai_system?useSSL=false&characterEncoding=UTF-8\n    username: datae\n    password: Sd_12345\n  servlet:\n    multipart:\n      max-request-size: 1024MB\n      max-file-size: 1024MB\n\n\nmybatis-plus:\n  mapper-locations: classpath:mapping/*.xml\n  configuration:\n    map-underscore-to-camel-case: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n\nai:\n  linuxBaseUrl: /usr/local/lib/ai_system_server/files/\n  windowsBaseUrl: D:\\ai_system\\\n  verificationCodeExtends: jpg,zip\n  address: http://172.168.201.90:{0}{1}\n  #机器人交互\n  robot:\n    runRobotUrl: https://172.168.201.90:44391/controller/v2.0/api/runProcessWithNoFile  #运行机器人流程\n    cancelRobotUrl: https://172.168.201.90:44391/controller/v1.0/api/cancelTask         #\n    robotStatus: https://172.168.201.90:44391/controller/v1.0/api/selectRobotStatusById\n    taskStatus: https://172.168.201.90:44391/controller/v1.0/api/showResultByTaskId\n    key: 29359b15-c480-426c-b3c0-6d247200f67c\n    body:\n      callbackUrl:\n      inputValues:\n      processId: 1116\n      robotIds:', '81a7cfbe30d852d18bcc8eef12bbcb7d', '2023-04-03 05:55:34', '2023-04-03 05:55:34', NULL, '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (1234, 'component-market-server.yml', 'DEFAULT_GROUP', 'server:\n  port: 9234\n  servlet:\n    context-path: /component-market-server\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/component_market?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n\n  #redis#\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 5000s\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nknife4j:\n  enable: true    \nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn', '717d27335f5278c1d88de325d248c515', '2023-04-03 05:55:34', '2023-04-03 05:55:34', NULL, '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (1235, 'component-market-server-test.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 9234\r\n  servlet:\r\n    context-path: /component-market-server\r\n\r\nspring:\r\n  datasource:\r\n    url: jdbc:mysql://172.168.201.90:3306/component_market?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\r\n    username: datae\r\n    password: Sd_12345\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n\r\n  #redis#\r\n  redis:\r\n    database: 0\r\n    host: 127.0.0.1\r\n    port: 6379\r\n    password: Sd_12345\r\n    timeout: 5000s\r\n#mybatis#\r\nmybatis:\r\n  mapper-locations: classpath:mapper/*.xml\r\n  type-aliases-package: cn.sendi.dao.entity\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\nknife4j:\r\n  enable: true    \r\nlogging:\r\n  level:\r\n    root: info\r\n    com.netflix: warn\r\n    com.alibaba.nacos.client.naming: warn', 'f82f89f2a2461a0de2df45164d10ef98', '2023-04-03 05:55:34', '2023-04-03 05:55:34', NULL, '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (1236, 'product-release-platform.yml', 'DEFAULT_GROUP', 'server:\n  port: 19093\n  servlet:\n    context-path: /product-release-platform\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/product_release_platform?allowMultiQueries=true&useSSL=false&characterEncoding=utf8\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n\n  #redis#\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 5000s\n#mybatis#\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: cn.sendi.dao.entity\n  configuration:\n    map-underscore-to-camel-case: true\nknife4j:\n  enable: true    \nlogging:\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn', 'bb8cec4e52ce21a6021a3144480b8bcb', '2023-04-03 05:55:34', '2023-04-03 05:55:34', NULL, '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (1237, 'rpa-common.yml', 'DEFAULT_GROUP', 'minIO: \n    # 是否启动了minIO\n    enabled: false\n    # 启动了minIO后，文件路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://127.0.0.1:9010\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n\nLOG_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_photo/\nTASK_VIDEO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/task_file/\n\nPROCESS_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/process/\n\nchatGPT:\n    proxyHost: 192.168.62.20\n    proxyPort: 1080\n    apiKey: 123456\n    apiHost: https://api.openai.com/\n    mode: testMode', '7def116c74ff24c0edbbaa62ab9b7368', '2023-04-03 05:55:34', '2023-04-23 03:06:42', 'nacos', '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (1238, 'datae-gateway-sentinel-flow', 'SENTINEL_GROUP', '[\n    {\n        \"resource\": \"/**\",\n        \"limitApp\": \"default\",\n        \"count\": 5,\n        \"grade\": 1,\n        \"strategy\": 0,\n        \"controlBehavior\": 0,\n        \"clusterMode\": false\n    }\n]', '72e0f3a0bae73a2c5564d2b2329e1070', '2023-04-03 05:55:34', '2023-04-03 05:55:34', NULL, '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1239, 'datae-gateway-sentinel-degrade', 'SENTINEL_GROUP', '[\n    {\n        \"resource\":\"/**\",\n        \"limitApp\":\"default\",\n        \"grade\":2,\n        \"count\":20,\n        \"timeWindow\":100,\n        \"minRequestAmount\":5,\n        \"statIntervalMs\":1000\n    }\n]', '657270c58869021dd11c88c094060f54', '2023-04-03 05:55:34', '2023-04-03 05:55:34', NULL, '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1240, 'datae-gateway-sentinel-param-flow', 'SENTINEL_GROUP', '{}', '99914b932bd37a50b983c5e7c90ae93b', '2023-04-03 05:55:34', '2023-04-03 05:55:34', NULL, '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1241, 'datae-gateway-sentinel-system', 'SENTINEL_GROUP', '[\n  {\n    \"highestCpuUsage\": 0.75,\n    \"maxThread\": 10,\n    \"qps\": 20\n  }\n]', 'a68a43e2a278789b05c408446c990590', '2023-04-03 05:55:34', '2023-04-03 05:55:34', NULL, '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1242, 'datae-gateway-sentinel-authority', 'SENTINEL_GROUP', '{}', '99914b932bd37a50b983c5e7c90ae93b', '2023-04-03 05:56:21', '2023-04-03 05:56:21', NULL, '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1243, 'datae-gateway-sentinel-gw-flow', 'SENTINEL_GROUP', '{}', '99914b932bd37a50b983c5e7c90ae93b', '2023-04-03 05:56:21', '2023-04-03 05:56:21', NULL, '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (1244, 'datae-gateway-sentinel-gw-api-group', 'SENTINEL_GROUP', '{}', '99914b932bd37a50b983c5e7c90ae93b', '2023-04-03 05:56:21', '2023-04-03 05:56:21', NULL, '192.168.18.57', '', '0655dab9-f097-4170-aa62-d94b23823be6', NULL, NULL, NULL, 'text', NULL);

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC, `datum_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = '增加租户字段' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'config_info_beta' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC, `tag_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'config_info_tag' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id` ASC, `tag_name` ASC, `tag_type` ASC) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'config_tag_relation' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of group_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint UNSIGNED NOT NULL,
  `nid` bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00',
  `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL,
  `src_ip` varchar(20) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create` ASC) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified` ASC) USING BTREE,
  INDEX `idx_did`(`data_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1835 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = '多租户改造' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (1225, 1790, 'datae-base.yml', 'DEFAULT_GROUP', '', 'spring:\n  devtools:\n    restart:\n      enabled: false\n  cloud:\n    nacos:\n      discovery:\n        server-addr: \'192.168.18.17:9002\'\n        namespace: 0655dab9-f097-4170-aa62-d94b23823be6\n\nswagger:\n    enabled: true\n\n# 关闭actuator的所有端点\n# management:\n#   endpoints:\n#     enabled-by-default: true\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 25000\n        readTimeout: 25000\n\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker:\n        requestVolumeThreshold: 1000\n      execution:\n        timeout:\n          enabled: true\n        isolation:\n          thread:\n            timeoutInMilliseconds: 20000\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default\n\nlogging:\n  config: classpath:logback-spring.xml\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    # 基础服务\n    cn.gzsendi.datae.authenticationclient: info\n    cn.gzsendi.datae.authenticationserver: info\n    cn.gzsendi.datae.gateway: info\n    cn.gzsendi.rpa.system: info\n    # 业务服务\n    cn.sendi.controller: info\n    cn.gzsendi.rpa.controller.dao.mapper: debug\n    cn.gzsendi.rpa.controller.service.impl: debug\n    cn.gzsendi.rpa.controller: info\n    cn.gzsendi.rpa.designer: info\n    cn.gzsendi.rpa.robot: info\n    cn.gzsendi.rpa.taskQueue: info\n    cn.gzsendi.rpa.warning: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n  # file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7\n\n\n\nschedule: \n  #是否集群模式，false：scheduler + quartz  , true: powerjob\n  cluster_mode: false\n  powerjob:\n    worker:\n      #是否启动powerJob\n      enabled: ${schedule.cluster_mode:false}\n      # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n      server-address: 192.168.18.17:7700\n      # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n      protocol: akka\n      # 持久化方式，可选，默认 disk\n      store-strategy: disk\n      # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n      max-result-length: 4096\n      # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n      max-appended-wf-context-length: 4096\n      # 同时运行的轻量级任务数量上限\n      max-lightweight-task-num: 1024\n      # 同时运行的重量级任务数量上限\n      max-heavy-task-num: 64', '91742762601c87cf84a76b4882637bf9', '2010-05-05 00:00:00', '2023-06-06 09:42:05', 'nacos', '192.168.18.57', 'U', '0655dab9-f097-4170-aa62-d94b23823be6');
INSERT INTO `his_config_info` VALUES (1225, 1791, 'datae-base.yml', 'DEFAULT_GROUP', '', 'spring:\n  devtools:\n    restart:\n      enabled: false\n  cloud:\n    nacos:\n      discovery:\n        server-addr: \'192.168.18.17:9002\'\n        namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n\nswagger:\n    enabled: true\n\n# 关闭actuator的所有端点\n# management:\n#   endpoints:\n#     enabled-by-default: true\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 25000\n        readTimeout: 25000\n\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker:\n        requestVolumeThreshold: 1000\n      execution:\n        timeout:\n          enabled: true\n        isolation:\n          thread:\n            timeoutInMilliseconds: 20000\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default\n\nlogging:\n  config: classpath:logback-spring.xml\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    # 基础服务\n    cn.gzsendi.datae.authenticationclient: info\n    cn.gzsendi.datae.authenticationserver: info\n    cn.gzsendi.datae.gateway: info\n    cn.gzsendi.rpa.system: info\n    # 业务服务\n    cn.sendi.controller: info\n    cn.gzsendi.rpa.controller.dao.mapper: debug\n    cn.gzsendi.rpa.controller.service.impl: debug\n    cn.gzsendi.rpa.controller: info\n    cn.gzsendi.rpa.designer: info\n    cn.gzsendi.rpa.robot: info\n    cn.gzsendi.rpa.taskQueue: info\n    cn.gzsendi.rpa.warning: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n  # file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7\n\n\n\nschedule: \n  #是否集群模式，false：scheduler + quartz  , true: powerjob\n  cluster_mode: false\n  powerjob:\n    worker:\n      #是否启动powerJob\n      enabled: ${schedule.cluster_mode:false}\n      # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n      server-address: 192.168.18.17:7700\n      # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n      protocol: akka\n      # 持久化方式，可选，默认 disk\n      store-strategy: disk\n      # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n      max-result-length: 4096\n      # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n      max-appended-wf-context-length: 4096\n      # 同时运行的轻量级任务数量上限\n      max-lightweight-task-num: 1024\n      # 同时运行的重量级任务数量上限\n      max-heavy-task-num: 64', '6368d4a23fdf01513158b27697ca492b', '2010-05-05 00:00:00', '2023-06-06 10:00:40', 'nacos', '192.168.18.57', 'U', '0655dab9-f097-4170-aa62-d94b23823be6');
INSERT INTO `his_config_info` VALUES (1225, 1792, 'datae-base.yml', 'DEFAULT_GROUP', '', 'spring:\n  devtools:\n    restart:\n      enabled: false\n  cloud:\n    nacos:\n      discovery:\n        server-addr: \'192.168.18.17:9002\'\n        namespace: 0655dab9-f097-4170-aa62-d94b23823be6\n\nswagger:\n    enabled: true\n\n# 关闭actuator的所有端点\n# management:\n#   endpoints:\n#     enabled-by-default: true\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 25000\n        readTimeout: 25000\n\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker:\n        requestVolumeThreshold: 1000\n      execution:\n        timeout:\n          enabled: true\n        isolation:\n          thread:\n            timeoutInMilliseconds: 20000\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default\n\nlogging:\n  config: classpath:logback-spring.xml\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    # 基础服务\n    cn.gzsendi.datae.authenticationclient: info\n    cn.gzsendi.datae.authenticationserver: info\n    cn.gzsendi.datae.gateway: info\n    cn.gzsendi.rpa.system: info\n    # 业务服务\n    cn.sendi.controller: info\n    cn.gzsendi.rpa.controller.dao.mapper: debug\n    cn.gzsendi.rpa.controller.service.impl: debug\n    cn.gzsendi.rpa.controller: info\n    cn.gzsendi.rpa.designer: info\n    cn.gzsendi.rpa.robot: info\n    cn.gzsendi.rpa.taskQueue: info\n    cn.gzsendi.rpa.warning: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n  # file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7\n\n\n\nschedule: \n  #是否集群模式，false：scheduler + quartz  , true: powerjob\n  cluster_mode: false\n  powerjob:\n    worker:\n      #是否启动powerJob\n      enabled: ${schedule.cluster_mode:false}\n      # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n      server-address: 192.168.18.17:7700\n      # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n      protocol: akka\n      # 持久化方式，可选，默认 disk\n      store-strategy: disk\n      # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n      max-result-length: 4096\n      # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n      max-appended-wf-context-length: 4096\n      # 同时运行的轻量级任务数量上限\n      max-lightweight-task-num: 1024\n      # 同时运行的重量级任务数量上限\n      max-heavy-task-num: 64', '91742762601c87cf84a76b4882637bf9', '2010-05-05 00:00:00', '2023-06-07 01:51:07', 'nacos', '192.168.18.57', 'U', '0655dab9-f097-4170-aa62-d94b23823be6');
INSERT INTO `his_config_info` VALUES (288, 1793, 'rpa-designer-server.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 19100\n  servlet:\n    context-path: /designer\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.designer.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: true\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27779\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  designer-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', 'ac8480e9e999c8d3ef7e75f853122d76', '2010-05-05 00:00:00', '2023-06-07 03:31:08', 'nacos', '192.168.18.3', 'U', 'ac20be3e-4991-4f59-9684-60bd218c9e4b');
INSERT INTO `his_config_info` VALUES (694, 1794, 'rpa-common.yml', 'DEFAULT_GROUP', '', 'minIO: \n    # 是否启动了minIO\n    enabled: false\n    # 启动了minIO后，文件路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://127.0.0.1:9010\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n\nLOG_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_photo/\nTASK_VIDEO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/task_file/\n\nPROCESS_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/process/', 'd61dc37310184677fcaf5e2d39c667f4', '2010-05-05 00:00:00', '2023-06-07 03:34:46', 'nacos', '192.168.18.3', 'U', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c');
INSERT INTO `his_config_info` VALUES (684, 1795, 'rpa-designer-server.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 19100\n  servlet:\n    context-path: /designer\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.designer.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: true\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27779\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  designer-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', '363624d04cddd8862dbf3e8b59bd4d5d', '2010-05-05 00:00:00', '2023-06-07 03:35:09', 'nacos', '192.168.18.3', 'U', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c');
INSERT INTO `his_config_info` VALUES (1225, 1796, 'datae-base.yml', 'DEFAULT_GROUP', '', 'spring:\n  devtools:\n    restart:\n      enabled: false\n  cloud:\n    nacos:\n      discovery:\n        server-addr: \'192.168.18.17:9002\'\n        namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n\nswagger:\n    enabled: true\n\n# 关闭actuator的所有端点\n# management:\n#   endpoints:\n#     enabled-by-default: true\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 25000\n        readTimeout: 25000\n\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker:\n        requestVolumeThreshold: 1000\n      execution:\n        timeout:\n          enabled: true\n        isolation:\n          thread:\n            timeoutInMilliseconds: 20000\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default\n\nlogging:\n  config: classpath:logback-spring.xml\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    # 基础服务\n    cn.gzsendi.datae.authenticationclient: info\n    cn.gzsendi.datae.authenticationserver: info\n    cn.gzsendi.datae.gateway: info\n    cn.gzsendi.rpa.system: info\n    # 业务服务\n    cn.sendi.controller: info\n    cn.gzsendi.rpa.controller.dao.mapper: debug\n    cn.gzsendi.rpa.controller.service.impl: debug\n    cn.gzsendi.rpa.controller: info\n    cn.gzsendi.rpa.designer: info\n    cn.gzsendi.rpa.robot: info\n    cn.gzsendi.rpa.taskQueue: info\n    cn.gzsendi.rpa.warning: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n  # file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7\n\n\n\nschedule: \n  #是否集群模式，false：scheduler + quartz  , true: powerjob\n  cluster_mode: false\n  powerjob:\n    worker:\n      #是否启动powerJob\n      enabled: ${schedule.cluster_mode:false}\n      # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n      server-address: 192.168.18.17:7700\n      # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n      protocol: akka\n      # 持久化方式，可选，默认 disk\n      store-strategy: disk\n      # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n      max-result-length: 4096\n      # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n      max-appended-wf-context-length: 4096\n      # 同时运行的轻量级任务数量上限\n      max-lightweight-task-num: 1024\n      # 同时运行的重量级任务数量上限\n      max-heavy-task-num: 64', '6368d4a23fdf01513158b27697ca492b', '2010-05-05 00:00:00', '2023-06-07 09:13:52', 'nacos', '192.168.18.57', 'U', '0655dab9-f097-4170-aa62-d94b23823be6');
INSERT INTO `his_config_info` VALUES (404, 1797, 'rpa-common.yml', 'DEFAULT_GROUP', '', 'minIO: \n    # 是否启动了minIO\n    enabled: false\n    # 启动了minIO后，文件路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://127.0.0.1:9010\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n\nLOG_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_photo/\nTASK_VIDEO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/task_file/\n\nPROCESS_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/process/\n\nlicensePastDueMessage: 使用权限已到期-您的账号使用权限已到期，请联系业务人员或者拨打电话：400-830-3030续期，谢谢！\nlicensePastDueMessageTitle: 使用权限已到期\nchatGPT:\n    proxyHost: 192.168.62.20\n    proxyPort: 1080\n    apiKey: 123456\n    apiHost: https://api.openai.com/\n    mode: testMode', '8bb8bfc7c74f267122cf97195d713c53', '2010-05-05 00:00:00', '2023-06-07 10:46:18', 'nacos', '192.168.18.3', 'U', 'ac20be3e-4991-4f59-9684-60bd218c9e4b');
INSERT INTO `his_config_info` VALUES (1225, 1798, 'datae-base.yml', 'DEFAULT_GROUP', '', 'spring:\n  devtools:\n    restart:\n      enabled: false\n  cloud:\n    nacos:\n      discovery:\n        server-addr: \'192.168.18.17:9002\'\n        namespace: 0655dab9-f097-4170-aa62-d94b23823be6\n\nswagger:\n    enabled: true\n\n# 关闭actuator的所有端点\n# management:\n#   endpoints:\n#     enabled-by-default: true\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 25000\n        readTimeout: 25000\n\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker:\n        requestVolumeThreshold: 1000\n      execution:\n        timeout:\n          enabled: true\n        isolation:\n          thread:\n            timeoutInMilliseconds: 20000\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default\n\nlogging:\n  config: classpath:logback-spring.xml\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    # 基础服务\n    cn.gzsendi.datae.authenticationclient: info\n    cn.gzsendi.datae.authenticationserver: info\n    cn.gzsendi.datae.gateway: info\n    cn.gzsendi.rpa.system: info\n    # 业务服务\n    cn.sendi.controller: info\n    cn.gzsendi.rpa.controller.dao.mapper: debug\n    cn.gzsendi.rpa.controller.service.impl: debug\n    cn.gzsendi.rpa.controller: info\n    cn.gzsendi.rpa.designer: info\n    cn.gzsendi.rpa.robot: info\n    cn.gzsendi.rpa.taskQueue: info\n    cn.gzsendi.rpa.warning: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n  # file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7\n\n\n\nschedule: \n  #是否集群模式，false：scheduler + quartz  , true: powerjob\n  cluster_mode: false\n  powerjob:\n    worker:\n      #是否启动powerJob\n      enabled: ${schedule.cluster_mode:false}\n      # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n      server-address: 192.168.18.17:7700\n      # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n      protocol: akka\n      # 持久化方式，可选，默认 disk\n      store-strategy: disk\n      # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n      max-result-length: 4096\n      # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n      max-appended-wf-context-length: 4096\n      # 同时运行的轻量级任务数量上限\n      max-lightweight-task-num: 1024\n      # 同时运行的重量级任务数量上限\n      max-heavy-task-num: 64', '91742762601c87cf84a76b4882637bf9', '2010-05-05 00:00:00', '2023-06-08 01:23:30', 'nacos', '192.168.18.57', 'U', '0655dab9-f097-4170-aa62-d94b23823be6');
INSERT INTO `his_config_info` VALUES (1225, 1799, 'datae-base.yml', 'DEFAULT_GROUP', '', 'spring:\n  devtools:\n    restart:\n      enabled: false\n  cloud:\n    nacos:\n      discovery:\n        server-addr: \'192.168.18.17:9002\'\n        namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n\nswagger:\n    enabled: true\n\n# 关闭actuator的所有端点\n# management:\n#   endpoints:\n#     enabled-by-default: true\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 25000\n        readTimeout: 25000\n\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker:\n        requestVolumeThreshold: 1000\n      execution:\n        timeout:\n          enabled: true\n        isolation:\n          thread:\n            timeoutInMilliseconds: 20000\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default\n\nlogging:\n  config: classpath:logback-spring.xml\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    # 基础服务\n    cn.gzsendi.datae.authenticationclient: info\n    cn.gzsendi.datae.authenticationserver: info\n    cn.gzsendi.datae.gateway: info\n    cn.gzsendi.rpa.system: info\n    # 业务服务\n    cn.sendi.controller: info\n    cn.gzsendi.rpa.controller.dao.mapper: debug\n    cn.gzsendi.rpa.controller.service.impl: debug\n    cn.gzsendi.rpa.controller: info\n    cn.gzsendi.rpa.designer: info\n    cn.gzsendi.rpa.robot: info\n    cn.gzsendi.rpa.taskQueue: info\n    cn.gzsendi.rpa.warning: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n  # file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7\n\n\n\nschedule: \n  #是否集群模式，false：scheduler + quartz  , true: powerjob\n  cluster_mode: false\n  powerjob:\n    worker:\n      #是否启动powerJob\n      enabled: ${schedule.cluster_mode:false}\n      # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n      server-address: 192.168.18.17:7700\n      # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n      protocol: akka\n      # 持久化方式，可选，默认 disk\n      store-strategy: disk\n      # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n      max-result-length: 4096\n      # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n      max-appended-wf-context-length: 4096\n      # 同时运行的轻量级任务数量上限\n      max-lightweight-task-num: 1024\n      # 同时运行的重量级任务数量上限\n      max-heavy-task-num: 64', '6368d4a23fdf01513158b27697ca492b', '2010-05-05 00:00:00', '2023-06-08 02:09:51', 'nacos', '192.168.18.57', 'U', '0655dab9-f097-4170-aa62-d94b23823be6');
INSERT INTO `his_config_info` VALUES (284, 1800, 'datae-gateway.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 9030\n  # 2.x gateway 使用的是netty\n  tomcat:\n    max-threads: 100\n    accept-count: 2000\n    max-connections: 2000\n\nspring:\n  servlet:\n    #文件上传大小限制\n    multipart:\n      maxRequestSize: 100MB\n      max-file-size: 100MB\n  cloud:\n    # 负载均衡器缓存\n    loadbalancer:\n      ribbon:\n          enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    gateway:\n      #基于手动设置进行路由\n      routes:\n        ####################   RPA start   #######################\n        # 认证服务swagger\n        - id: auth_swagger\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_user_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/user/**\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务token\n        - id: auth_token_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/token/**\n        # 流程易基础系统服务\n        - id: rpa-system-swagger\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易告警管理服务\n        - id: rpa-warning-swagger\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # console服务druid监控\n        - id: console_druid\n          uri: lb://controller\n          predicates:\n            - Path=/controller/druid/**\n          filters:\n            - AuthSkipFilterFactory\n        # console服务prometheus监控\n        - id: console_prometheus\n          uri: lb://controller\n          predicates:\n            - Path=/controller/actuator/prometheus\n          filters:\n            - AuthSkipFilterFactory\n        # controller-swagger\n        - id: controller-swagger\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # controller-version\n        - id: controller-version\n          uri: lb://controller\n          predicates:\n            - Path=/controller/statistics/homePage/version\n          filters:\n            - AuthSkipFilterFactory\n        # 任务队列swagger\n        - id: taskQueue-swagger\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 设计器服务swagger\n        - id: designer-swagger\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人服务swagger\n        - id: robot-swagger\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 组件市场swagger\n        - id: component-market-server-swagger\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server-downloadIcon\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/moduleMenu/downloadIconFile\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/**\n        # 在线升级swagger\n        - id: online-update-swagger\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-reload\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/casbinController/reload\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-saas\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/system/saas/**\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system1\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/**\n        - id: rpa-robot-server\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/**\n        ####################   RPA end  #######################\n        # 设计器登录    \n        - id: controller-designer-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/designerLogin/signIn\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人登录    \n        - id: controller-robot-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/robotLogin/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1    \n        - id: controller-api1\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1.5   \n        - id: controller-api15\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.5/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V2    \n        - id: controller-api2\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 控制台服务\n        - id: controller\n          uri: lb://controller\n          predicates:\n            - Path=/controller/**\n        # 任务队列服务\n        - id: rpa-taskQueue-server\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/**\n        # 设计器服务\n        - id: rpa-designer-server\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/**\n        - id: rpa-warning-server\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/**\n        # 在线更新服务-获取最新安装包\n        - id: online-update-install-package\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/robotOnlineUpdate/getLatestInstallPkgDownloadPath,/online-update/designerOnlineUpdate/getLatestInstallPkgDownloadPath\n          filters:\n            - AuthSkipFilterFactory\n        - id: online-update\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/**  \n        - id: ai-system-server\n          uri: lb://ai-system-server\n          predicates:\n            - Path=/aiProject/** \n\n      #基于服务发现进行路由\n#hystrix 取消超时\nhystrix:\n  #10分钟熔断\n  metrics:\n    enabled: true\n    polling-interval-ms: 20000', '44b396590aaa4cf859d2a631fd4c58bb', '2010-05-05 00:00:00', '2023-06-08 08:06:14', 'nacos', '192.168.18.57', 'U', 'ac20be3e-4991-4f59-9684-60bd218c9e4b');
INSERT INTO `his_config_info` VALUES (284, 1801, 'datae-gateway.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 9030\n  # 2.x gateway 使用的是netty\n  tomcat:\n    max-threads: 100\n    accept-count: 2000\n    max-connections: 2000\n\nspring:\n  servlet:\n    #文件上传大小限制\n    multipart:\n      maxRequestSize: 100MB\n      max-file-size: 100MB\n  cloud:\n    # 负载均衡器缓存\n    loadbalancer:\n      ribbon:\n          enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    gateway:\n      #基于手动设置进行路由\n      routes:\n        ####################   RPA start   #######################\n        # 认证服务swagger\n        - id: auth_swagger\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_user_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/user/**\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务token\n        - id: auth_token_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/token/**\n        # 流程易基础系统服务\n        - id: rpa-system-swagger\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易告警管理服务\n        - id: rpa-warning-swagger\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # console服务druid监控\n        - id: console_druid\n          uri: lb://controller\n          predicates:\n            - Path=/controller/druid/**\n          filters:\n            - AuthSkipFilterFactory\n        # console服务prometheus监控\n        - id: console_prometheus\n          uri: lb://controller\n          predicates:\n            - Path=/controller/actuator/prometheus\n          filters:\n            - AuthSkipFilterFactory\n        # controller-swagger\n        - id: controller-swagger\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # controller-version\n        - id: controller-version\n          uri: lb://controller\n          predicates:\n            - Path=/controller/statistics/homePage/version\n          filters:\n            - AuthSkipFilterFactory\n        # controller-pay-notify\n        - id: controller-pay-notify\n          uri: lb://controller\n          predicates:\n            - Path=/controller/chargeOrder/pay/notify/**\n          filters:\n            - AuthSkipFilterFactory\n        # 任务队列swagger\n        - id: taskQueue-swagger\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 设计器服务swagger\n        - id: designer-swagger\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人服务swagger\n        - id: robot-swagger\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 组件市场swagger\n        - id: component-market-server-swagger\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server-downloadIcon\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/moduleMenu/downloadIconFile\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/**\n        # 在线升级swagger\n        - id: online-update-swagger\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-reload\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/casbinController/reload\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-saas\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/system/saas/**\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system1\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/**\n        - id: rpa-robot-server\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/**\n        ####################   RPA end  #######################\n        # 设计器登录    \n        - id: controller-designer-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/designerLogin/signIn\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人登录    \n        - id: controller-robot-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/robotLogin/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1    \n        - id: controller-api1\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1.5   \n        - id: controller-api15\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.5/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V2    \n        - id: controller-api2\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 控制台服务\n        - id: controller\n          uri: lb://controller\n          predicates:\n            - Path=/controller/**\n        # 任务队列服务\n        - id: rpa-taskQueue-server\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/**\n        # 设计器服务\n        - id: rpa-designer-server\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/**\n        - id: rpa-warning-server\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/**\n        # 在线更新服务-获取最新安装包\n        - id: online-update-install-package\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/robotOnlineUpdate/getLatestInstallPkgDownloadPath,/online-update/designerOnlineUpdate/getLatestInstallPkgDownloadPath\n          filters:\n            - AuthSkipFilterFactory\n        - id: online-update\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/**  \n        - id: ai-system-server\n          uri: lb://ai-system-server\n          predicates:\n            - Path=/aiProject/** \n\n      #基于服务发现进行路由\n#hystrix 取消超时\nhystrix:\n  #10分钟熔断\n  metrics:\n    enabled: true\n    polling-interval-ms: 20000', '2e1d0649223a045f4478e3dcc92cf4ba', '2010-05-05 00:00:00', '2023-06-08 08:12:49', 'nacos', '192.168.18.57', 'U', 'ac20be3e-4991-4f59-9684-60bd218c9e4b');
INSERT INTO `his_config_info` VALUES (1226, 1802, 'datae-gateway.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 9030\n  # 2.x gateway 使用的是netty\n  tomcat:\n    max-threads: 100\n    accept-count: 2000\n    max-connections: 2000\n\nspring:\n  servlet:\n    #文件上传大小限制\n    multipart:\n      maxRequestSize: 100MB\n      max-file-size: 100MB\n  cloud:\n    # 负载均衡器缓存\n    loadbalancer:\n      ribbon:\n          enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    gateway:\n      #基于手动设置进行路由\n      routes:\n        ####################   RPA start   #######################\n        # 认证服务swagger\n        - id: auth_swagger\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_user_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/user/**\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务token\n        - id: auth_token_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/token/**\n        # 流程易基础系统服务\n        - id: rpa-system-swagger\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易告警管理服务\n        - id: rpa-warning-swagger\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # console服务druid监控\n        - id: console_druid\n          uri: lb://controller\n          predicates:\n            - Path=/controller/druid/**\n          filters:\n            - AuthSkipFilterFactory\n        # console服务prometheus监控\n        - id: console_prometheus\n          uri: lb://controller\n          predicates:\n            - Path=/controller/actuator/prometheus\n          filters:\n            - AuthSkipFilterFactory\n        # controller-swagger\n        - id: controller-swagger\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # controller-version\n        - id: controller-version\n          uri: lb://controller\n          predicates:\n            - Path=/controller/statistics/homePage/version\n          filters:\n            - AuthSkipFilterFactory\n        # 任务队列swagger\n        - id: taskQueue-swagger\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 设计器服务swagger\n        - id: designer-swagger\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人服务swagger\n        - id: robot-swagger\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 组件市场swagger\n        - id: component-market-server-swagger\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server-downloadIcon\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/moduleMenu/downloadIconFile\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/**\n        # 在线升级swagger\n        - id: online-update-swagger\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-reload\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/casbinController/reload\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system1\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/**\n        - id: rpa-robot-server\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/**\n        ####################   RPA end  #######################\n        # 设计器登录    \n        - id: controller-designer-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/designerLogin/signIn\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人登录    \n        - id: controller-robot-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/robotLogin/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1    \n        - id: controller-api1\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1.5   \n        - id: controller-api15\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.5/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V2    \n        - id: controller-api2\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 控制台服务\n        - id: controller\n          uri: lb://controller\n          predicates:\n            - Path=/controller/**\n        # 任务队列服务\n        - id: rpa-taskQueue-server\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/**\n        # 设计器服务\n        - id: rpa-designer-server\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/**\n        - id: rpa-warning-server\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/**\n        # 在线更新服务-获取最新安装包\n        - id: online-update-install-package\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/robotOnlineUpdate/getLatestInstallPkgDownloadPath,/online-update/designerOnlineUpdate/getLatestInstallPkgDownloadPath\n          filters:\n            - AuthSkipFilterFactory\n        - id: online-update\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/**  \n        - id: ai-system-server\n          uri: lb://ai-system-server\n          predicates:\n            - Path=/aiProject/** \n\n      #基于服务发现进行路由\n#hystrix 取消超时\nhystrix:\n  #10分钟熔断\n  metrics:\n    enabled: true\n    polling-interval-ms: 20000', 'ff17563a2836c6e06b312ed262dc3a88', '2010-05-05 00:00:00', '2023-06-08 08:13:41', 'nacos', '192.168.18.57', 'U', '0655dab9-f097-4170-aa62-d94b23823be6');
INSERT INTO `his_config_info` VALUES (561, 1803, 'rpa-common.yml', 'DEFAULT_GROUP', '', 'minIO: \n    # 是否启动了minIO\n    enabled: true\n    # 启动了minIO后，任务运行日志路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://172.168.200.243:9000\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\n', '5c8c0e0d25960eda48c1fddd389cabea', '2010-05-05 00:00:00', '2023-06-08 09:07:19', 'nacos', '192.168.18.3', 'U', '');
INSERT INTO `his_config_info` VALUES (561, 1804, 'rpa-common.yml', 'DEFAULT_GROUP', '', 'minIO: \n    # 是否启动了minIO\n    enabled: false\n    # 启动了minIO后，任务运行日志路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://172.168.200.243:9000\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\n', '314b1f65c2330e0cc2e7122a9b3e40db', '2010-05-05 00:00:00', '2023-06-08 09:09:00', 'nacos', '192.168.18.3', 'U', '');
INSERT INTO `his_config_info` VALUES (561, 1805, 'rpa-common.yml', 'DEFAULT_GROUP', '', 'minIO: \n    # 是否启动了minIO\n    enabled: false\n    # 启动了minIO后，文件路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://127.0.0.1:9010\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n\nLOG_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_photo/\nTASK_VIDEO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/task_file/\n\nPROCESS_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/process/\n#MODULE_PACKAGE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/module_package/\nMODULE_PACKAGE_PATH: D:/module_package/\n\nlicensePastDueMessage: 使用权限已到期-您的账号使用权限已到期，请联系业务人员或者拨打电话：400-830-3030续期，谢谢！\nlicensePastDueMessageTitle: 使用权限已到期\nchatGPT:\n    proxyHost: 192.168.62.20\n    proxyPort: 1080\n    apiKey: 123456\n    apiHost: https://api.openai.com/\n    mode: testMode', '73673478764348c9039ecc928c8f7511', '2010-05-05 00:00:00', '2023-06-08 09:09:42', 'nacos', '192.168.18.3', 'U', '');
INSERT INTO `his_config_info` VALUES (694, 1806, 'rpa-common.yml', 'DEFAULT_GROUP', '', 'minIO: \n    # 是否启动了minIO\n    enabled: false\n    # 启动了minIO后，文件路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://192.168.18.17:9010\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n\nLOG_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_photo/\nTASK_VIDEO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/task_file/\n\nPROCESS_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/process/', '0db231875362830b3484304db975fdbe', '2010-05-05 00:00:00', '2023-06-08 09:11:25', 'nacos', '192.168.18.3', 'U', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c');
INSERT INTO `his_config_info` VALUES (284, 1807, 'datae-gateway.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 9030\n  # 2.x gateway 使用的是netty\n  tomcat:\n    max-threads: 100\n    accept-count: 2000\n    max-connections: 2000\n\nspring:\n  servlet:\n    #文件上传大小限制\n    multipart:\n      maxRequestSize: 100MB\n      max-file-size: 100MB\n  cloud:\n    # 负载均衡器缓存\n    loadbalancer:\n      ribbon:\n          enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    gateway:\n      #基于手动设置进行路由\n      routes:\n        ####################   RPA start   #######################\n        # 认证服务swagger\n        - id: auth_swagger\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_user_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/user/**\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务token\n        - id: auth_token_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/token/**\n        # 流程易基础系统服务\n        - id: rpa-system-swagger\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易告警管理服务\n        - id: rpa-warning-swagger\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # console服务druid监控\n        - id: console_druid\n          uri: lb://controller\n          predicates:\n            - Path=/controller/druid/**\n          filters:\n            - AuthSkipFilterFactory\n        # console服务prometheus监控\n        - id: console_prometheus\n          uri: lb://controller\n          predicates:\n            - Path=/controller/actuator/prometheus\n          filters:\n            - AuthSkipFilterFactory\n        # controller-swagger\n        - id: controller-swagger\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # controller-version\n        - id: controller-version\n          uri: lb://controller\n          predicates:\n            - Path=/controller/statistics/homePage/version\n          filters:\n            - AuthSkipFilterFactory\n        # 任务队列swagger\n        - id: taskQueue-swagger\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 设计器服务swagger\n        - id: designer-swagger\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人服务swagger\n        - id: robot-swagger\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 组件市场swagger\n        - id: component-market-server-swagger\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server-downloadIcon\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/moduleMenu/downloadIconFile\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/**\n        # 在线升级swagger\n        - id: online-update-swagger\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-reload\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/casbinController/reload\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-saas\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/system/saas/**\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system1\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/**\n        - id: rpa-robot-server\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/**\n        ####################   RPA end  #######################\n        # 设计器登录    \n        - id: controller-designer-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/designerLogin/signIn\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人登录    \n        - id: controller-robot-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/robotLogin/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1    \n        - id: controller-api1\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1.5   \n        - id: controller-api15\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.5/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V2    \n        - id: controller-api2\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 控制台服务\n        - id: controller\n          uri: lb://controller\n          predicates:\n            - Path=/controller/**\n        # 任务队列服务\n        - id: rpa-taskQueue-server\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/**\n        # 设计器服务\n        - id: rpa-designer-server\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/**\n        - id: rpa-warning-server\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/**\n        # 在线更新服务-获取最新安装包\n        - id: online-update-install-package\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/robotOnlineUpdate/getLatestInstallPkgDownloadPath,/online-update/designerOnlineUpdate/getLatestInstallPkgDownloadPath\n          filters:\n            - AuthSkipFilterFactory\n        - id: online-update\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/**  \n        - id: ai-system-server\n          uri: lb://ai-system-server\n          predicates:\n            - Path=/aiProject/** \n\n      #基于服务发现进行路由\n#hystrix 取消超时\nhystrix:\n  #10分钟熔断\n  metrics:\n    enabled: true\n    polling-interval-ms: 20000', '44b396590aaa4cf859d2a631fd4c58bb', '2010-05-05 00:00:00', '2023-06-12 02:52:40', 'nacos', '192.168.18.3', 'U', 'ac20be3e-4991-4f59-9684-60bd218c9e4b');
INSERT INTO `his_config_info` VALUES (284, 1808, 'datae-gateway.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 9030\n  # 2.x gateway 使用的是netty\n  tomcat:\n    max-threads: 100\n    accept-count: 2000\n    max-connections: 2000\n\nspring:\n  servlet:\n    #文件上传大小限制\n    multipart:\n      maxRequestSize: 100MB\n      max-file-size: 100MB\n  cloud:\n    # 负载均衡器缓存\n    loadbalancer:\n      ribbon:\n          enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    gateway:\n      #基于手动设置进行路由\n      routes:\n        ####################   RPA start   #######################\n        # 认证服务swagger\n        - id: auth_swagger\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_user_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/user/**\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务token\n        - id: auth_token_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/token/**\n        # 流程易基础系统服务\n        - id: rpa-system-swagger\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易告警管理服务\n        - id: rpa-warning-swagger\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # console服务druid监控\n        - id: console_druid\n          uri: lb://controller\n          predicates:\n            - Path=/controller/druid/**\n          filters:\n            - AuthSkipFilterFactory\n        # console服务prometheus监控\n        - id: console_prometheus\n          uri: lb://controller\n          predicates:\n            - Path=/controller/actuator/prometheus\n          filters:\n            - AuthSkipFilterFactory\n        # controller-swagger\n        - id: controller-swagger\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # controller-version\n        - id: controller-version\n          uri: lb://controller\n          predicates:\n            - Path=/controller/statistics/homePage/version\n          filters:\n            - AuthSkipFilterFactory\n        # 任务队列swagger\n        - id: taskQueue-swagger\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 设计器服务swagger\n        - id: designer-swagger\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人服务swagger\n        - id: robot-swagger\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 组件市场swagger\n        - id: component-market-server-swagger\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server-downloadIcon\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/moduleMenu/downloadIconFile\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/**\n        # 在线升级swagger\n        - id: online-update-swagger\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-reload\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/casbinController/reload\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-saas\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/system/saas/**\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system1\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/**\n        - id: rpa-robot-server\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/**\n        ####################   RPA end  #######################\n        # 设计器登录    \n        - id: controller-designer-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/designerLogin/signIn\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人登录    \n        - id: controller-robot-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/robotLogin/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1    \n        - id: controller-api1\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1.5   \n        - id: controller-api15\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.5/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V2    \n        - id: controller-api2\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 控制台服务\n        - id: controller\n          uri: lb://controller\n          predicates:\n            - Path=/controller/**\n        # 任务队列服务\n        - id: rpa-taskQueue-server\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/**\n        # 设计器服务\n        - id: rpa-designer-server\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/**\n        - id: rpa-designer-server-test2\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/downloadModulePackage\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-warning-server\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/**\n        # 在线更新服务-获取最新安装包\n        - id: online-update-install-package\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/robotOnlineUpdate/getLatestInstallPkgDownloadPath,/online-update/designerOnlineUpdate/getLatestInstallPkgDownloadPath\n          filters:\n            - AuthSkipFilterFactory\n        - id: online-update\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/**  \n        - id: ai-system-server\n          uri: lb://ai-system-server\n          predicates:\n            - Path=/aiProject/** \n\n      #基于服务发现进行路由\n#hystrix 取消超时\nhystrix:\n  #10分钟熔断\n  metrics:\n    enabled: true\n    polling-interval-ms: 20000', '0eb14dd20df02cdfe0caaa533d7e26d3', '2010-05-05 00:00:00', '2023-06-12 03:08:17', 'nacos', '192.168.18.3', 'U', 'ac20be3e-4991-4f59-9684-60bd218c9e4b');
INSERT INTO `his_config_info` VALUES (278, 1809, 'controller.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 19090\n  servlet:\n    context-path: /controller\n  compression:\n    enabled: true\n    mime-types: application/json\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.sendi.controller.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: \n        max-active: 10\n        max-wait: -1\n        max-idle: 8\n        min-idle: 0\n  quartz:\n    job-store-type: jdbc\n    properties:\n      org:\n        quartz:\n          jobStore:\n            # class: org.quartz.impl.jdbcjobstore.JobStoreTX\n            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore\n            clusterCheckinInterval: 10000\n            misfireThreshold: 600000\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            useProperties: false\n            tablePrefix: QRTZ_\n            isClustered: true\n        scheduler:\n          instanceId: AUTO\n          instanceName: clusteredScheduler\n        threadPool:\n          class: org.quartz.simpl.SimpleThreadPool\n          threadCount: 10\n          threadPriority: 5\n          threadsInheritContextClassLoaderOfInitializingThread: true\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    #log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nTASK_PHOTO_NGINX_PATH: /task_photo/\nTASK_VIDEO_NGINX_PATH: /task_video/\nocr_default_url: http://127.0.0.1:18888/image_code\ngeneral_default_url: http://127.0.0.1:18810/text_cls\n\nrobot_unconn: true   \nadd_userInfo_interceptor: true\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27781\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  console-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', '1b545d5804cfd99a52781b72d5372658', '2010-05-05 00:00:00', '2023-06-13 01:21:20', 'nacos', '192.168.18.57', 'U', 'ac20be3e-4991-4f59-9684-60bd218c9e4b');
INSERT INTO `his_config_info` VALUES (1223, 1810, 'controller.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 19090\n  servlet:\n    context-path: /controller\n  compression:\n    enabled: true\n    mime-types: application/json\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.sendi.controller.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: \n        max-active: 10\n        max-wait: -1\n        max-idle: 8\n        min-idle: 0\n  quartz:\n    job-store-type: jdbc\n    properties:\n      org:\n        quartz:\n          jobStore:\n            # class: org.quartz.impl.jdbcjobstore.JobStoreTX\n            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore\n            clusterCheckinInterval: 10000\n            misfireThreshold: 60000\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            useProperties: false\n            tablePrefix: QRTZ_\n            isClustered: true\n        scheduler:\n          instanceId: AUTO\n          instanceName: clusteredScheduler\n        threadPool:\n          class: org.quartz.simpl.SimpleThreadPool\n          threadCount: 10\n          threadPriority: 5\n          threadsInheritContextClassLoaderOfInitializingThread: true\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nTASK_PHOTO_NGINX_PATH: /task_photo/\nTASK_VIDEO_NGINX_PATH: /task_video/\nocr_default_url: http://127.0.0.1:18888/image_code\ngeneral_default_url: http://127.0.0.1:18810/text_cls\n\nrobot_unconn: true   \nadd_userInfo_interceptor: true\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27781\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  console-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', 'e900d338856ae93a91e76f599817070e', '2010-05-05 00:00:00', '2023-06-13 01:21:39', 'nacos', '192.168.18.57', 'U', '0655dab9-f097-4170-aa62-d94b23823be6');
INSERT INTO `his_config_info` VALUES (404, 1811, 'rpa-common.yml', 'DEFAULT_GROUP', '', 'minIO: \n    # 是否启动了minIO\n    enabled: false\n    # 启动了minIO后，文件路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://127.0.0.1:9010\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n\nLOG_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_photo/\nTASK_VIDEO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/task_file/\n\nPROCESS_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/process/\nMODULE_PACKAGE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/module_package/\n\nlicensePastDueMessage: 使用权限已到期-您的账号使用权限已到期，请联系业务人员或者拨打电话：400-830-3030续期，谢谢！\nlicensePastDueMessageTitle: 使用权限已到期\nchatGPT:\n    proxyHost: 192.168.62.20\n    proxyPort: 1080\n    apiKey: 123456\n    apiHost: https://api.openai.com/\n    mode: testMode', 'ff0e5350a27335de53831f28aee7f03d', '2010-05-05 00:00:00', '2023-06-13 10:02:34', 'nacos', '192.168.18.16', 'U', 'ac20be3e-4991-4f59-9684-60bd218c9e4b');
INSERT INTO `his_config_info` VALUES (404, 1812, 'rpa-common.yml', 'DEFAULT_GROUP', '', 'minIO: \n    # 是否启动了minIO\n    enabled: false\n    # 启动了minIO后，文件路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://127.0.0.1:9010\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n\nLOG_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_photo/\nTASK_VIDEO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/task_file/\n\nPROCESS_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/process/\nMODULE_PACKAGE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/module_package/\n\nlcy:\n  system_log_path:\n    - /usr/local/lib/rpa-cloud-3.0.0/datae-authentication-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/datae-gateway-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-system-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-console-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-taskQueue-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-warning-server-3.0.0/logs\n\nlicensePastDueMessage: 使用权限已到期-您的账号使用权限已到期，请联系业务人员或者拨打电话：400-830-3030续期，谢谢！\nlicensePastDueMessageTitle: 使用权限已到期\nchatGPT:\n    proxyHost: 192.168.62.20\n    proxyPort: 1080\n    apiKey: 123456\n    apiHost: https://api.openai.com/\n    mode: testMode', 'e43ddc9c76596c3f5ea1ac94034be190', '2010-05-05 00:00:00', '2023-06-13 10:11:05', 'nacos', '192.168.18.16', 'U', 'ac20be3e-4991-4f59-9684-60bd218c9e4b');
INSERT INTO `his_config_info` VALUES (404, 1813, 'rpa-common.yml', 'DEFAULT_GROUP', '', 'minIO: \n    # 是否启动了minIO\n    enabled: false\n    # 启动了minIO后，文件路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://127.0.0.1:9010\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n\nLOG_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_photo/\nTASK_VIDEO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/task_file/\n\nPROCESS_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/process/\nMODULE_PACKAGE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/module_package/\n\nlcy:\n    system_log_path:\n        - /usr/local/lib/rpa-cloud-3.0.0/datae-authentication-server-3.0.0/logs\n        - /usr/local/lib/rpa-cloud-3.0.0/datae-gateway-3.0.0/logs\n        - /usr/local/lib/rpa-cloud-3.0.0/rpa-system-server-3.0.0/logs\n        - /usr/local/lib/rpa-cloud-3.0.0/rpa-console-server-3.0.0/logs\n        - /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/logs\n        - /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/logs\n        - /usr/local/lib/rpa-cloud-3.0.0/rpa-taskQueue-server-3.0.0/logs\n        - /usr/local/lib/rpa-cloud-3.0.0/rpa-warning-server-3.0.0/logs\n\nlicensePastDueMessage: 使用权限已到期-您的账号使用权限已到期，请联系业务人员或者拨打电话：400-830-3030续期，谢谢！\nlicensePastDueMessageTitle: 使用权限已到期\nchatGPT:\n    proxyHost: 192.168.62.20\n    proxyPort: 1080\n    apiKey: 123456\n    apiHost: https://api.openai.com/\n    mode: testMode', '3a7bffd23718337a81614d4f80fbfcac', '2010-05-05 00:00:00', '2023-06-13 10:13:27', 'nacos', '192.168.18.16', 'U', 'ac20be3e-4991-4f59-9684-60bd218c9e4b');
INSERT INTO `his_config_info` VALUES (404, 1814, 'rpa-common.yml', 'DEFAULT_GROUP', '', 'minIO: \n    # 是否启动了minIO\n    enabled: false\n    # 启动了minIO后，文件路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://127.0.0.1:9010\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n\nLOG_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_photo/\nTASK_VIDEO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/task_file/\n\nPROCESS_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/process/\nMODULE_PACKAGE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/module_package/\n\nlcy:\n  system_log_path:\n    - /usr/local/lib/rpa-cloud-3.0.0/datae-authentication-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/datae-gateway-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-system-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-console-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-taskQueue-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-warning-server-3.0.0/logs\n\nlicensePastDueMessage: 使用权限已到期-您的账号使用权限已到期，请联系业务人员或者拨打电话：400-830-3030续期，谢谢！\nlicensePastDueMessageTitle: 使用权限已到期\nchatGPT:\n    proxyHost: 192.168.62.20\n    proxyPort: 1080\n    apiKey: 123456\n    apiHost: https://api.openai.com/\n    mode: testMode', 'e43ddc9c76596c3f5ea1ac94034be190', '2010-05-05 00:00:00', '2023-06-14 01:58:25', 'nacos', '192.168.18.16', 'U', 'ac20be3e-4991-4f59-9684-60bd218c9e4b');
INSERT INTO `his_config_info` VALUES (684, 1815, 'rpa-designer-server.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 19100\n  servlet:\n    context-path: /designer\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.designer.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: true\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: {\n        max-active: 10,\n        max-wait: -1,\n        max-idle: 8,\n        min-idle: 0\n      }\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27779\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  designer-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', '0ea0b25dedd800c90312cea2c080aa2b', '2010-05-05 00:00:00', '2023-06-14 06:11:12', 'nacos', '192.168.18.3', 'U', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c');
INSERT INTO `his_config_info` VALUES (680, 1816, 'datae-base.yml', 'DEFAULT_GROUP', '', 'spring:\n  devtools:\n    restart:\n      enabled: false\n  cloud:\n    nacos:\n      discovery:\n        server-addr: \'192.168.18.17:9002\'\n        namespace: 9a1310b5-fb61-41ef-97ef-bdc9f5921f5c\n\nswagger:\n    enabled: true\n\n# 关闭actuator的所有端点\n# management:\n#   endpoints:\n#     enabled-by-default: true\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 25000\n        readTimeout: 25000\n\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker:\n        requestVolumeThreshold: 1000\n      execution:\n        timeout:\n          enabled: true\n        isolation:\n          thread:\n            timeoutInMilliseconds: 20000\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default\n\nlogging:\n  config: classpath:logback-spring.xml\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    # 基础服务\n    cn.gzsendi.datae.authenticationclient: info\n    cn.gzsendi.datae.authenticationserver: info\n    cn.gzsendi.datae.gateway: info\n    cn.gzsendi.rpa.system: info\n    # 业务服务\n    cn.sendi.controller: info\n    cn.gzsendi.rpa.controller.dao.mapper: debug\n    cn.gzsendi.rpa.controller.service.impl: debug\n    cn.gzsendi.rpa.controller: info\n    cn.gzsendi.rpa.designer: info\n    cn.gzsendi.rpa.robot: info\n    cn.gzsendi.rpa.taskQueue: info\n    cn.gzsendi.rpa.warning: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n  # file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7\n\n\n\nschedule: \n  #是否集群模式，false：scheduler + quartz  , true: powerjob\n  cluster_mode: false\n  powerjob:\n    worker:\n      #是否启动powerJob\n      enabled: ${schedule.cluster_mode:false}\n      # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n      server-address: 192.168.18.17:7700\n      # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n      protocol: akka\n      # 持久化方式，可选，默认 disk\n      store-strategy: disk\n      # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n      max-result-length: 4096\n      # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n      max-appended-wf-context-length: 4096\n      # 同时运行的轻量级任务数量上限\n      max-lightweight-task-num: 1024\n      # 同时运行的重量级任务数量上限\n      max-heavy-task-num: 64\n\n# 短信云\nsms:\n  huawei:\n    # 是否允许通过短信云平台发送短信，默认不打开，不打开情况下验证码会在显示在响应内容中（打开会产生短信费用）\n    enable: false\n    # APP接入地址(在控制台\"应用管理\"页面获取)+接口访问URI\n    url: https://smsapi.cn-south-1.myhuaweicloud.com:443/sms/batchSendSms/v1\n    appKey: qLv9PLV1KL4Sy1P803loqI4imd7y\n    appSecret: 43Sxr6sSWYFZHRcenRoLxnDuSfl3\n    # 短信签名通道号\n    sender: 8823041724996\n    # 模板ID\n    templateId: 5691fcf5464e49fb81893fc860e64780\n    # 当templateId指定的模板类型为通用模板时生效且必填,必须是已审核通过的,与模板类型一致0\n    signature: 广州云迪科技有限公司\n    # 选填,短信状态报告接收地址,推荐使用域名,为空或者不填表示不接收状态报告\n    statusCallBack: \n\n    ', '95eff35797ecff45222bbb4991633677', '2010-05-05 00:00:00', '2023-06-14 06:12:54', 'nacos', '192.168.18.3', 'U', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c');
INSERT INTO `his_config_info` VALUES (694, 1817, 'rpa-common.yml', 'DEFAULT_GROUP', '', 'minIO: \n    # 是否启动了minIO\n    enabled: false\n    # 启动了minIO后，文件路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://127.0.0.1:9010\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n\nLOG_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_photo/\nTASK_VIDEO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/task_file/\n\nPROCESS_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/process/\n#MODULE_PACKAGE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/module_package/\nMODULE_PACKAGE_PATH: D:/module_package/\n\nlicensePastDueMessage: 使用权限已到期-您的账号使用权限已到期，请联系业务人员或者拨打电话：400-830-3030续期，谢谢！\nlicensePastDueMessageTitle: 使用权限已到期\nchatGPT:\n    proxyHost: 192.168.62.20\n    proxyPort: 1080\n    apiKey: 123456\n    apiHost: https://api.openai.com/\n    mode: testMode', '73673478764348c9039ecc928c8f7511', '2010-05-05 00:00:00', '2023-06-14 09:52:26', 'nacos', '192.168.18.3', 'U', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c');
INSERT INTO `his_config_info` VALUES (284, 1818, 'datae-gateway.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 9030\n  # 2.x gateway 使用的是netty\n  tomcat:\n    max-threads: 100\n    accept-count: 2000\n    max-connections: 2000\n\nspring:\n  servlet:\n    #文件上传大小限制\n    multipart:\n      maxRequestSize: 100MB\n      max-file-size: 100MB\n  cloud:\n    # 负载均衡器缓存\n    loadbalancer:\n      ribbon:\n          enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    gateway:\n      #基于手动设置进行路由\n      routes:\n        ####################   RPA start   #######################\n        # 认证服务swagger\n        - id: auth_swagger\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_user_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/user/**\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务token\n        - id: auth_token_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/token/**\n        # 流程易基础系统服务\n        - id: rpa-system-swagger\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易告警管理服务\n        - id: rpa-warning-swagger\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # console服务druid监控\n        - id: console_druid\n          uri: lb://controller\n          predicates:\n            - Path=/controller/druid/**\n          filters:\n            - AuthSkipFilterFactory\n        # console服务prometheus监控\n        - id: console_prometheus\n          uri: lb://controller\n          predicates:\n            - Path=/controller/actuator/prometheus\n          filters:\n            - AuthSkipFilterFactory\n        # controller-swagger\n        - id: controller-swagger\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # controller-version\n        - id: controller-version\n          uri: lb://controller\n          predicates:\n            - Path=/controller/statistics/homePage/version\n          filters:\n            - AuthSkipFilterFactory\n        # 任务队列swagger\n        - id: taskQueue-swagger\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 设计器服务swagger\n        - id: designer-swagger\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人服务swagger\n        - id: robot-swagger\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 组件市场swagger\n        - id: component-market-server-swagger\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server-downloadIcon\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/moduleMenu/downloadIconFile\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/**\n        # 在线升级swagger\n        - id: online-update-swagger\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-reload\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/casbinController/reload\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-saas\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/system/saas/**\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system1\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/**\n        - id: rpa-robot-server\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/**\n        ####################   RPA end  #######################\n        # 设计器登录    \n        - id: controller-designer-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/designerLogin/signIn\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人登录    \n        - id: controller-robot-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/robotLogin/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1    \n        - id: controller-api1\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1.5   \n        - id: controller-api15\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.5/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V2    \n        - id: controller-api2\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 控制台服务\n        - id: controller\n          uri: lb://controller\n          predicates:\n            - Path=/controller/**\n        # 任务队列服务\n        - id: rpa-taskQueue-server\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/**\n        # 设计器服务\n        - id: rpa-designer-server\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/**\n        - id: rpa-warning-server\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/**\n        # 在线更新服务-获取最新安装包\n        - id: online-update-install-package\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/robotOnlineUpdate/getLatestInstallPkgDownloadPath,/online-update/designerOnlineUpdate/getLatestInstallPkgDownloadPath\n          filters:\n            - AuthSkipFilterFactory\n        - id: online-update\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/**  \n        - id: ai-system-server\n          uri: lb://ai-system-server\n          predicates:\n            - Path=/aiProject/** \n\n      #基于服务发现进行路由\n#hystrix 取消超时\nhystrix:\n  #10分钟熔断\n  metrics:\n    enabled: true\n    polling-interval-ms: 20000', '44b396590aaa4cf859d2a631fd4c58bb', '2010-05-05 00:00:00', '2023-06-15 01:28:09', 'nacos', '192.168.18.57', 'U', 'ac20be3e-4991-4f59-9684-60bd218c9e4b');
INSERT INTO `his_config_info` VALUES (1226, 1819, 'datae-gateway.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 9030\n  # 2.x gateway 使用的是netty\n  tomcat:\n    max-threads: 100\n    accept-count: 2000\n    max-connections: 2000\n\nspring:\n  servlet:\n    #文件上传大小限制\n    multipart:\n      maxRequestSize: 100MB\n      max-file-size: 100MB\n  cloud:\n    # 负载均衡器缓存\n    loadbalancer:\n      ribbon:\n          enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    gateway:\n      #基于手动设置进行路由\n      routes:\n        ####################   RPA start   #######################\n        # 认证服务swagger\n        - id: auth_swagger\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_user_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/user/**\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务token\n        - id: auth_token_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/token/**\n        # 流程易基础系统服务\n        - id: rpa-system-swagger\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易告警管理服务\n        - id: rpa-warning-swagger\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # console服务druid监控\n        - id: console_druid\n          uri: lb://controller\n          predicates:\n            - Path=/controller/druid/**\n          filters:\n            - AuthSkipFilterFactory\n        # console服务prometheus监控\n        - id: console_prometheus\n          uri: lb://controller\n          predicates:\n            - Path=/controller/actuator/prometheus\n          filters:\n            - AuthSkipFilterFactory\n        # controller-swagger\n        - id: controller-swagger\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # controller-version\n        - id: controller-version\n          uri: lb://controller\n          predicates:\n            - Path=/controller/statistics/homePage/version\n          filters:\n            - AuthSkipFilterFactory\n        # controller-pay-notify\n        - id: controller-pay-notify\n          uri: lb://controller\n          predicates:\n            - Path=/controller/chargeOrder/pay/notify/**\n          filters:\n            - AuthSkipFilterFactory\n        # 任务队列swagger\n        - id: taskQueue-swagger\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 设计器服务swagger\n        - id: designer-swagger\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人服务swagger\n        - id: robot-swagger\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 组件市场swagger\n        - id: component-market-server-swagger\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server-downloadIcon\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/moduleMenu/downloadIconFile\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/**\n        # 在线升级swagger\n        - id: online-update-swagger\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-reload\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/casbinController/reload\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system1\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/**\n        - id: rpa-robot-server\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/**\n        ####################   RPA end  #######################\n        # 设计器登录    \n        - id: controller-designer-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/designerLogin/signIn\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人登录    \n        - id: controller-robot-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/robotLogin/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1    \n        - id: controller-api1\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1.5   \n        - id: controller-api15\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.5/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V2    \n        - id: controller-api2\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 控制台服务\n        - id: controller\n          uri: lb://controller\n          predicates:\n            - Path=/controller/**\n        # 任务队列服务\n        - id: rpa-taskQueue-server\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/**\n        # 设计器服务\n        - id: rpa-designer-server\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/**\n        - id: rpa-warning-server\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/**\n        # 在线更新服务-获取最新安装包\n        - id: online-update-install-package\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/robotOnlineUpdate/getLatestInstallPkgDownloadPath,/online-update/designerOnlineUpdate/getLatestInstallPkgDownloadPath\n          filters:\n            - AuthSkipFilterFactory\n        - id: online-update\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/**  \n        - id: ai-system-server\n          uri: lb://ai-system-server\n          predicates:\n            - Path=/aiProject/** \n\n      #基于服务发现进行路由\n#hystrix 取消超时\nhystrix:\n  #10分钟熔断\n  metrics:\n    enabled: true\n    polling-interval-ms: 20000', '094b34bd9f1a986079eaabd9ba25ab0b', '2010-05-05 00:00:00', '2023-06-15 01:33:28', 'nacos', '192.168.18.57', 'U', '0655dab9-f097-4170-aa62-d94b23823be6');
INSERT INTO `his_config_info` VALUES (1226, 1820, 'datae-gateway.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 9030\n  # 2.x gateway 使用的是netty\n  tomcat:\n    max-threads: 100\n    accept-count: 2000\n    max-connections: 2000\n\nspring:\n  servlet:\n    #文件上传大小限制\n    multipart:\n      maxRequestSize: 100MB\n      max-file-size: 100MB\n  cloud:\n    # 负载均衡器缓存\n    loadbalancer:\n      ribbon:\n          enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    gateway:\n      #基于手动设置进行路由\n      routes:\n        ####################   RPA start   #######################\n        # 认证服务swagger\n        - id: auth_swagger\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务\n        - id: auth_user_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/user/**\n          filters:\n            - AuthSkipFilterFactory\n        # 认证服务token\n        - id: auth_token_router\n          uri: lb://datae-authentication-server\n          predicates:\n            - Path=/auth/token/**\n        # 流程易基础系统服务\n        - id: rpa-system-swagger\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易告警管理服务\n        - id: rpa-warning-swagger\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # console服务druid监控\n        - id: console_druid\n          uri: lb://controller\n          predicates:\n            - Path=/controller/druid/**\n          filters:\n            - AuthSkipFilterFactory\n        # console服务prometheus监控\n        - id: console_prometheus\n          uri: lb://controller\n          predicates:\n            - Path=/controller/actuator/prometheus\n          filters:\n            - AuthSkipFilterFactory\n        # controller-swagger\n        - id: controller-swagger\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # controller-version\n        - id: controller-version\n          uri: lb://controller\n          predicates:\n            - Path=/controller/statistics/homePage/version\n          filters:\n            - AuthSkipFilterFactory\n        # controller-pay-notify\n        # - id: controller-pay-notify\n        #   uri: lb://controller\n        #   predicates:\n        #     - Path=/controller/chargeOrder/pay/notify/**\n        #   filters:\n        #     - AuthSkipFilterFactory\n        # 任务队列swagger\n        - id: taskQueue-swagger\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 设计器服务swagger\n        - id: designer-swagger\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人服务swagger\n        - id: robot-swagger\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        # 组件市场swagger\n        - id: component-market-server-swagger\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server-downloadIcon\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/moduleMenu/downloadIconFile\n          filters:\n            - AuthSkipFilterFactory\n        - id: component-market-server\n          uri: lb://component-market-server\n          predicates:\n            - Path=/component-market-server/**\n        # 在线升级swagger\n        - id: online-update-swagger\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/v2/api-docs\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system-reload\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/casbinController/reload\n          filters:\n            - AuthSkipFilterFactory\n        - id: rpa-system1\n          uri: lb://rpa-system-server\n          predicates:\n            - Path=/system/**\n        - id: rpa-robot-server\n          uri: lb://rpa-robot-server\n          predicates:\n            - Path=/rpa-robot-server/**\n        ####################   RPA end  #######################\n        # 设计器登录    \n        - id: controller-designer-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/designerLogin/signIn\n          filters:\n            - AuthSkipFilterFactory\n        # 机器人登录    \n        - id: controller-robot-auth\n          uri: lb://controller\n          predicates:\n            - Path=/controller/robotLogin/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1    \n        - id: controller-api1\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V1.5   \n        - id: controller-api15\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v1.5/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 流程易服务型机器人接口V2    \n        - id: controller-api2\n          uri: lb://controller\n          predicates:\n            - Path=/controller/v2.0/api/**\n          filters:\n            - AuthSkipFilterFactory\n        # 控制台服务\n        - id: controller\n          uri: lb://controller\n          predicates:\n            - Path=/controller/**\n        # 任务队列服务\n        - id: rpa-taskQueue-server\n          uri: lb://rpa-taskQueue-server\n          predicates:\n            - Path=/taskQueue/**\n        # 设计器服务\n        - id: rpa-designer-server\n          uri: lb://rpa-designer-server\n          predicates:\n            - Path=/designer/**\n        - id: rpa-warning-server\n          uri: lb://rpa-warning-server\n          predicates:\n            - Path=/warning/**\n        # 在线更新服务-获取最新安装包\n        - id: online-update-install-package\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/robotOnlineUpdate/getLatestInstallPkgDownloadPath,/online-update/designerOnlineUpdate/getLatestInstallPkgDownloadPath\n          filters:\n            - AuthSkipFilterFactory\n        - id: online-update\n          uri: lb://online-update\n          predicates:\n            - Path=/online-update/**  \n        - id: ai-system-server\n          uri: lb://ai-system-server\n          predicates:\n            - Path=/aiProject/** \n\n      #基于服务发现进行路由\n#hystrix 取消超时\nhystrix:\n  #10分钟熔断\n  metrics:\n    enabled: true\n    polling-interval-ms: 20000', '8e4b8f583876543aa595e6c15d8e4dab', '2010-05-05 00:00:00', '2023-06-15 01:38:32', 'nacos', '192.168.18.57', 'U', '0655dab9-f097-4170-aa62-d94b23823be6');
INSERT INTO `his_config_info` VALUES (404, 1821, 'rpa-common.yml', 'DEFAULT_GROUP', '', 'minIO: \n    # 是否启动了minIO\n    enabled: false\n    # 启动了minIO后，文件路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://127.0.0.1:9010\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n\nLOG_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_photo/\nTASK_VIDEO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/task_file/\n\nPROCESS_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/process/\nMODULE_PACKAGE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/module_package/\n\nlcy:\n  systemLogPath:\n    - /usr/local/lib/rpa-cloud-3.0.0/datae-authentication-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/datae-gateway-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-system-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-console-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-taskQueue-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-warning-server-3.0.0/logs\n\nlicensePastDueMessage: 使用权限已到期-您的账号使用权限已到期，请联系业务人员或者拨打电话：400-830-3030续期，谢谢！\nlicensePastDueMessageTitle: 使用权限已到期\nchatGPT:\n    proxyHost: 192.168.62.20\n    proxyPort: 1080\n    apiKey: 123456\n    apiHost: https://api.openai.com/\n    mode: testMode', '9e5917a9bd36286edc598f5f013377f5', '2010-05-05 00:00:00', '2023-06-15 02:03:24', 'nacos', '192.168.18.3', 'U', 'ac20be3e-4991-4f59-9684-60bd218c9e4b');
INSERT INTO `his_config_info` VALUES (404, 1822, 'rpa-common.yml', 'DEFAULT_GROUP', '', 'minIO: \n    # 是否启动了minIO\n    enabled: true\n    # 启动了minIO后，文件路径的前缀标记\n    prefix: MINIO\n    access_key: root\n    secret_key: gzSdLcyRpa@12@34\n    url: http://127.0.0.1:9010\n    # minIO中，任务运行日志路径\n    task_run_log_path: /run_log/\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n\nLOG_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_log/\nTASK_PHOTO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_photo/\nTASK_VIDEO_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/run_video/\nTASK_FILE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/task_file/\n\nPROCESS_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/process/\nMODULE_PACKAGE_PATH: /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/module_package/\n\nlcy:\n  systemLogPath:\n    - /usr/local/lib/rpa-cloud-3.0.0/datae-authentication-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/datae-gateway-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-system-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-console-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-designer-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-robot-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-taskQueue-server-3.0.0/logs\n    - /usr/local/lib/rpa-cloud-3.0.0/rpa-warning-server-3.0.0/logs\n\nlicensePastDueMessage: 使用权限已到期-您的账号使用权限已到期，请联系业务人员或者拨打电话：400-830-3030续期，谢谢！\nlicensePastDueMessageTitle: 使用权限已到期\nchatGPT:\n    proxyHost: 192.168.62.20\n    proxyPort: 1080\n    apiKey: 123456\n    apiHost: https://api.openai.com/\n    mode: testMode', '4c53f362c3676e088eb8c45adc29d7f0', '2010-05-05 00:00:00', '2023-06-15 02:09:35', 'nacos', '192.168.18.3', 'U', 'ac20be3e-4991-4f59-9684-60bd218c9e4b');
INSERT INTO `his_config_info` VALUES (1225, 1823, 'datae-base.yml', 'DEFAULT_GROUP', '', 'spring:\n  devtools:\n    restart:\n      enabled: false\n  cloud:\n    nacos:\n      discovery:\n        server-addr: \'192.168.18.17:9002\'\n        namespace: 0655dab9-f097-4170-aa62-d94b23823be6\n\nswagger:\n    enabled: true\n\n# 关闭actuator的所有端点\n# management:\n#   endpoints:\n#     enabled-by-default: true\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 25000\n        readTimeout: 25000\n\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker:\n        requestVolumeThreshold: 1000\n      execution:\n        timeout:\n          enabled: true\n        isolation:\n          thread:\n            timeoutInMilliseconds: 20000\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default\n\nlogging:\n  config: classpath:logback-spring.xml\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    # 基础服务\n    cn.gzsendi.datae.authenticationclient: info\n    cn.gzsendi.datae.authenticationserver: info\n    cn.gzsendi.datae.gateway: info\n    cn.gzsendi.rpa.system: info\n    # 业务服务\n    cn.sendi.controller: info\n    cn.gzsendi.rpa.controller.dao.mapper: debug\n    cn.gzsendi.rpa.controller.service.impl: debug\n    cn.gzsendi.rpa.controller: info\n    cn.gzsendi.rpa.designer: info\n    cn.gzsendi.rpa.robot: info\n    cn.gzsendi.rpa.taskQueue: info\n    cn.gzsendi.rpa.warning: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n  # file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7\n\n\n\nschedule: \n  #是否集群模式，false：scheduler + quartz  , true: powerjob\n  cluster_mode: false\n  powerjob:\n    worker:\n      #是否启动powerJob\n      enabled: ${schedule.cluster_mode:false}\n      # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n      server-address: 192.168.18.17:7700\n      # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n      protocol: akka\n      # 持久化方式，可选，默认 disk\n      store-strategy: disk\n      # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n      max-result-length: 4096\n      # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n      max-appended-wf-context-length: 4096\n      # 同时运行的轻量级任务数量上限\n      max-lightweight-task-num: 1024\n      # 同时运行的重量级任务数量上限\n      max-heavy-task-num: 64', '91742762601c87cf84a76b4882637bf9', '2010-05-05 00:00:00', '2023-06-15 05:50:02', 'nacos', '192.168.18.57', 'U', '0655dab9-f097-4170-aa62-d94b23823be6');
INSERT INTO `his_config_info` VALUES (1225, 1824, 'datae-base.yml', 'DEFAULT_GROUP', '', 'spring:\n  devtools:\n    restart:\n      enabled: false\n  cloud:\n    nacos:\n      discovery:\n        server-addr: \'192.168.18.17:9002\'\n        namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n\nswagger:\n    enabled: true\n\n# 关闭actuator的所有端点\n# management:\n#   endpoints:\n#     enabled-by-default: true\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 25000\n        readTimeout: 25000\n\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker:\n        requestVolumeThreshold: 1000\n      execution:\n        timeout:\n          enabled: true\n        isolation:\n          thread:\n            timeoutInMilliseconds: 20000\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default\n\nlogging:\n  config: classpath:logback-spring.xml\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    # 基础服务\n    cn.gzsendi.datae.authenticationclient: info\n    cn.gzsendi.datae.authenticationserver: info\n    cn.gzsendi.datae.gateway: info\n    cn.gzsendi.rpa.system: info\n    # 业务服务\n    cn.sendi.controller: info\n    cn.gzsendi.rpa.controller.dao.mapper: debug\n    cn.gzsendi.rpa.controller.service.impl: debug\n    cn.gzsendi.rpa.controller: info\n    cn.gzsendi.rpa.designer: info\n    cn.gzsendi.rpa.robot: info\n    cn.gzsendi.rpa.taskQueue: info\n    cn.gzsendi.rpa.warning: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n  # file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7\n\n\n\nschedule: \n  #是否集群模式，false：scheduler + quartz  , true: powerjob\n  cluster_mode: false\n  powerjob:\n    worker:\n      #是否启动powerJob\n      enabled: ${schedule.cluster_mode:false}\n      # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n      server-address: 192.168.18.17:7700\n      # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n      protocol: akka\n      # 持久化方式，可选，默认 disk\n      store-strategy: disk\n      # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n      max-result-length: 4096\n      # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n      max-appended-wf-context-length: 4096\n      # 同时运行的轻量级任务数量上限\n      max-lightweight-task-num: 1024\n      # 同时运行的重量级任务数量上限\n      max-heavy-task-num: 64', '6368d4a23fdf01513158b27697ca492b', '2010-05-05 00:00:00', '2023-06-15 06:39:28', 'nacos', '192.168.18.57', 'U', '0655dab9-f097-4170-aa62-d94b23823be6');
INSERT INTO `his_config_info` VALUES (266, 1825, 'rpa-warning-server.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 19094\n  servlet:\n    context-path: /warning\n\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n\nspring:\n  datasource:\n    url: jdbc:mysql://127.0.0.1:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.warning.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000\n  quartz:\n    job-store-type: jdbc\n    properties:\n      org:\n        quartz:\n          jobStore:\n            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore\n            clusterCheckinInterval: 10000\n            misfireThreshold: 60000\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            useProperties: false\n            tablePrefix: QRTZ_\n            isClustered: true\n        scheduler:\n          instanceId: AUTO\n        threadPool:\n          class: org.quartz.simpl.SimpleThreadPool\n          threadCount: 10\n          threadPriority: 5\n          threadsInheritContextClassLoaderOfInitializingThread: true\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nrobot_unconn: true\n\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n  dingtalk:\n    webhook: https://oapi.dingtalk.com/robot/send?access_token=dddb5af98809d7f32e8cb64efdaef0743394fdb500f8b3b980953c1a2e74c4ee\n    secretKey: SEC6833fbf4d8d56f92ea5e362db2d3084458f6dd9ac23c941b5bd6492c53c35a55\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27778\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  warning-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', '22619874d48143167d8e1974707ef9e4', '2010-05-05 00:00:00', '2023-06-16 09:04:02', 'nacos', '192.168.18.15', 'U', 'ac20be3e-4991-4f59-9684-60bd218c9e4b');
INSERT INTO `his_config_info` VALUES (266, 1826, 'rpa-warning-server.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 19094\n  servlet:\n    context-path: /warning\n\nmybatis-plus:\n  global-config:\n    db-config:\n      id-type: auto\n  configuration:\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_warning?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.gzsendi.rpa.warning.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        max-wait: -1\n        min-idle: 5\n    timeout: 5000\n  quartz:\n    job-store-type: jdbc\n    properties:\n      org:\n        quartz:\n          jobStore:\n            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore\n            clusterCheckinInterval: 10000\n            misfireThreshold: 60000\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            useProperties: false\n            tablePrefix: QRTZ_\n            isClustered: true\n        scheduler:\n          instanceId: AUTO\n        threadPool:\n          class: org.quartz.simpl.SimpleThreadPool\n          threadCount: 10\n          threadPriority: 5\n          threadsInheritContextClassLoaderOfInitializingThread: true\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nrobot_unconn: true\n\nnotify_way:\n  email:\n    account: sdorderrobot@gzsendi.cn\n    password: SdRobot_2019\n    host: mail.gzsendi.cn\n    port: 25\n  dingtalk:\n    webhook: https://oapi.dingtalk.com/robot/send?access_token=dddb5af98809d7f32e8cb64efdaef0743394fdb500f8b3b980953c1a2e74c4ee\n    secretKey: SEC6833fbf4d8d56f92ea5e362db2d3084458f6dd9ac23c941b5bd6492c53c35a55\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27778\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  warning-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', 'f9b0ae6f4610df542806cee6e5f9018a', '2010-05-05 00:00:00', '2023-06-16 09:07:46', 'nacos', '192.168.18.15', 'U', 'ac20be3e-4991-4f59-9684-60bd218c9e4b');
INSERT INTO `his_config_info` VALUES (278, 1827, 'controller.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 19090\n  servlet:\n    context-path: /controller\n  compression:\n    enabled: true\n    mime-types: application/json\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.sendi.controller.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: \n        max-active: 10\n        max-wait: -1\n        max-idle: 8\n        min-idle: 0\n  quartz:\n    job-store-type: jdbc\n    properties:\n      org:\n        quartz:\n          jobStore:\n            # class: org.quartz.impl.jdbcjobstore.JobStoreTX\n            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore\n            clusterCheckinInterval: 10000\n            misfireThreshold: 600000\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            useProperties: false\n            tablePrefix: QRTZ_\n            isClustered: true\n        scheduler:\n          instanceId: AUTO\n          instanceName: clusteredScheduler\n        threadPool:\n          class: org.quartz.simpl.SimpleThreadPool\n          threadCount: 10\n          threadPriority: 5\n          threadsInheritContextClassLoaderOfInitializingThread: true\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    #log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nTASK_PHOTO_NGINX_PATH: /task_photo/\nTASK_VIDEO_NGINX_PATH: /task_video/\nocr_default_url: http://127.0.0.1:18888/image_code\ngeneral_default_url: http://127.0.0.1:18810/text_cls\n\nrobot_unconn: true   \nadd_userInfo_interceptor: true\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27781\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  console-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}\n\nalipay:\n  appId: 9021000122682369\n  merchantPrivateKey: MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCO9H0Xtusc4hU8oXqCp3+Jy4mqy+sPsQkWmKZoTdpbgGmw6avG1N7AzAekPYOaaLa8xmhNWxAPcOd47f7iFPDirS3mqZwXz6uWKQWeqQNl4hWk+cmLI0ca3o23w91DLCbde+oyJva1YKUlSPuSK7AABeDhCrHqkx3pnWSEfqcBNcVAMYLZVTpDmKgaJiUA61tY/6DpClK2trdFhOUGg2X+9ZpimPt1iACz7bcNjtMGFKD7zBuV1l+oLiS6YSP1j/xImTLa7FuXWAoLkqXG9nLpnmACeoMemyXvYLBmRFEnRChogwgIlZOXcHbW/e7y8nFiOn4J7RiDNNFtaxmoELk5AgMBAAECggEAcljybrOsITBemF76JeRhShF7DxmJ7sVHZcG46hnMHgD7ib1/382KWGFbg26JBEvaT+nMqIO8tv0yyjJk/OaPQGISIz1sVEeTEsvBaQX8Z9SOR6ZeJmOTjtSSO3n6VK7Ob7+ct30fPjoOH2LfiC5V287X8GqjoeUHukRhkPHWGEp0Q9ry9bCmltWhPC5b/tD+9zUgdoAMnZihv+Mwhf54TTcbxVAHQf5utLKB6rzQADd/pqNz98igRLeKaIe2XGaE8mV+dj5YZJS6L83nNr0rsD/AJ6KNRRX9Zz1dJ6yRyhnmU5XnbXHeyxW01ixxJE13MI6DLnSh4G8X/Z2HpKxTAQKBgQD3ZMVY+RiTTkBEVG/OBqZPYFRsS6iEuhrjpXCeAxEEw3N8Q0ZUEIt2vwD1uu0EwUXlrV9xglDjLHK8gV9Q4F89DGceIS0A8SuoLNRmGihGNGHOT/nMzovlS/ZigtoJK0WL4jDNb5fk9yXRYFyGAFPNXXBFNGRPw2TH3x6227LlaQKBgQCT7Zy/+GvxLfP+2hkGCJzIqC3q3eZOfdGOuiR4CZhXn5Uthc7OzcRnt+A2I3RT1fStO0kmI5hHCsdlNtGZ3iZRtGoFgpIDWR3sbi3mHAdjEsRgM6CdvbJRcO+rUrhSPv85gq1R2xPBD7W4neqdu/EQ4+CAZrNWPy2NoUwdt1GrUQKBgDZw8JTRzDyuXaorwqbeA783/ZwPUjhTFBPAlnXPSvF3aXSRAWsCcQ5inf11cy82sQEIFBbQjKhRYbZl6enMVmkCz7ZrqpGogOjzZJJLc01vvY4/P0N4uIRvIPswvHaEFTvhPMgYpJ54XNQklnfOnqJ0y34PN3vuDcGGMiYfVtDxAoGBAIPWOOU+WbVQ5ywy5CpkcpbCjGnN6fv6VlGFxArXQlaVezZfErls2aY2UjTt1DcDcFUTiVXcU1K9YIfsG1GukyguSm8ut0MUoX6dk3qJcGvzxeCXIoZzEgFTTca6qltimcR/mkhhn3FotuQamYaKgYY0EVleLmanV8np/xRc1QSBAoGADHZEmllp931219Rfty5kJYquQRNvIlOUAC6BhjmXGeJsy4C0oSBuriH8XucJ2Wgqn/6hFKQtiybY/pMEwdBOjYBA3QoT38yWjUC+6f1MlkIEpVDnvI8y8Cwhpi748U/eb4JZkXOss6XJEKWV0z1Qy0uy+YqYi+2mXbp8oZx4Uzo=\n  alipayPublicKey: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqFxk1A1LYFLuBDo2uCPxVmMtEI7SKkjAAuiIoRBjdGywY6Ze1SNiD2jaawp3lvzLLW7ZQ0ILQk9+r3uf20ZNehOwAOfoWRbpzYtuNgCsAZg9O2bPwNOPX7siph9cLKx+5/8wuhNk3lejDvYTT6McmbumhlK+sQNirlcrlt2xxNgQZNhGoJbO9yVqt0hPeXZTV3q+D8wLn7cj1XcPMfFyMOV+NAeGTsvsGqNNEdjIb4zVH6bRBi2ARktCCl3dbz9Gz+qK6Ml/hLVvcvQg/KT2cn+phgpHwNuDUI61HvMSbQf2n0vc5RC7H8DGAggs1bmNu98CfXIy57dPpYA3zxCuVQIDAQAB\n  gatewayUrl: https://openapi-sandbox.dl.alipaydev.com/gateway.do\n  notifyUrl: http://121.33.214.30:44390/chargeOrder/alipay/notify\n  returnUrl:\n\nwechat-pay:\n  app-id: 1\n  merchant-id: 1\n  merchant-serial-number: 1\n  notify-url: 1\n  private-key: MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCO9H0Xtusc4hU8oXqCp3+Jy4mqy+sPsQkWmKZoTdpbgGmw6avG1N7AzAekPYOaaLa8xmhNWxAPcOd47f7iFPDirS3mqZwXz6uWKQWeqQNl4hWk+cmLI0ca3o23w91DLCbde+oyJva1YKUlSPuSK7AABeDhCrHqkx3pnWSEfqcBNcVAMYLZVTpDmKgaJiUA61tY/6DpClK2trdFhOUGg2X+9ZpimPt1iACz7bcNjtMGFKD7zBuV1l+oLiS6YSP1j/xImTLa7FuXWAoLkqXG9nLpnmACeoMemyXvYLBmRFEnRChogwgIlZOXcHbW/e7y8nFiOn4J7RiDNNFtaxmoELk5AgMBAAECggEAcljybrOsITBemF76JeRhShF7DxmJ7sVHZcG46hnMHgD7ib1/382KWGFbg26JBEvaT+nMqIO8tv0yyjJk/OaPQGISIz1sVEeTEsvBaQX8Z9SOR6ZeJmOTjtSSO3n6VK7Ob7+ct30fPjoOH2LfiC5V287X8GqjoeUHukRhkPHWGEp0Q9ry9bCmltWhPC5b/tD+9zUgdoAMnZihv+Mwhf54TTcbxVAHQf5utLKB6rzQADd/pqNz98igRLeKaIe2XGaE8mV+dj5YZJS6L83nNr0rsD/AJ6KNRRX9Zz1dJ6yRyhnmU5XnbXHeyxW01ixxJE13MI6DLnSh4G8X/Z2HpKxTAQKBgQD3ZMVY+RiTTkBEVG/OBqZPYFRsS6iEuhrjpXCeAxEEw3N8Q0ZUEIt2vwD1uu0EwUXlrV9xglDjLHK8gV9Q4F89DGceIS0A8SuoLNRmGihGNGHOT/nMzovlS/ZigtoJK0WL4jDNb5fk9yXRYFyGAFPNXXBFNGRPw2TH3x6227LlaQKBgQCT7Zy/+GvxLfP+2hkGCJzIqC3q3eZOfdGOuiR4CZhXn5Uthc7OzcRnt+A2I3RT1fStO0kmI5hHCsdlNtGZ3iZRtGoFgpIDWR3sbi3mHAdjEsRgM6CdvbJRcO+rUrhSPv85gq1R2xPBD7W4neqdu/EQ4+CAZrNWPy2NoUwdt1GrUQKBgDZw8JTRzDyuXaorwqbeA783/ZwPUjhTFBPAlnXPSvF3aXSRAWsCcQ5inf11cy82sQEIFBbQjKhRYbZl6enMVmkCz7ZrqpGogOjzZJJLc01vvY4/P0N4uIRvIPswvHaEFTvhPMgYpJ54XNQklnfOnqJ0y34PN3vuDcGGMiYfVtDxAoGBAIPWOOU+WbVQ5ywy5CpkcpbCjGnN6fv6VlGFxArXQlaVezZfErls2aY2UjTt1DcDcFUTiVXcU1K9YIfsG1GukyguSm8ut0MUoX6dk3qJcGvzxeCXIoZzEgFTTca6qltimcR/mkhhn3FotuQamYaKgYY0EVleLmanV8np/xRc1QSBAoGADHZEmllp931219Rfty5kJYquQRNvIlOUAC6BhjmXGeJsy4C0oSBuriH8XucJ2Wgqn/6hFKQtiybY/pMEwdBOjYBA3QoT38yWjUC+6f1MlkIEpVDnvI8y8Cwhpi748U/eb4JZkXOss6XJEKWV0z1Qy0uy+YqYi+2mXbp8oZx4Uzo=\n  api-v3-key: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqFxk1A1LYFLuBDo2uCPxVmMtEI7SKkjAAuiIoRBjdGywY6Ze1SNiD2jaawp3lvzLLW7ZQ0ILQk9+r3uf20ZNehOwAOfoWRbpzYtuNgCsAZg9O2bPwNOPX7siph9cLKx+5/8wuhNk3lejDvYTT6McmbumhlK+sQNirlcrlt2xxNgQZNhGoJbO9yVqt0hPeXZTV3q+D8wLn7cj1XcPMfFyMOV+NAeGTsvsGqNNEdjIb4zVH6bRBi2ARktCCl3dbz9Gz+qK6Ml/hLVvcvQg/KT2cn+phgpHwNuDUI61HvMSbQf2n0vc5RC7H8DGAggs1bmNu98CfXIy57dPpYA3zxCuVQIDAQAB\n', '5b06a6caa356442f0a0bc92a5b5c8c45', '2010-05-05 00:00:00', '2023-06-19 07:21:17', 'nacos', '192.168.18.16', 'U', 'ac20be3e-4991-4f59-9684-60bd218c9e4b');
INSERT INTO `his_config_info` VALUES (1225, 1828, 'datae-base.yml', 'DEFAULT_GROUP', '', 'spring:\n  devtools:\n    restart:\n      enabled: false\n  cloud:\n    nacos:\n      discovery:\n        server-addr: \'192.168.18.17:9002\'\n        namespace: 0655dab9-f097-4170-aa62-d94b23823be6\n\nswagger:\n    enabled: true\n\n# 关闭actuator的所有端点\n# management:\n#   endpoints:\n#     enabled-by-default: true\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 25000\n        readTimeout: 25000\n\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker:\n        requestVolumeThreshold: 1000\n      execution:\n        timeout:\n          enabled: true\n        isolation:\n          thread:\n            timeoutInMilliseconds: 20000\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default\n\nlogging:\n  config: classpath:logback-spring.xml\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    # 基础服务\n    cn.gzsendi.datae.authenticationclient: info\n    cn.gzsendi.datae.authenticationserver: info\n    cn.gzsendi.datae.gateway: info\n    cn.gzsendi.rpa.system: info\n    # 业务服务\n    cn.sendi.controller: info\n    cn.gzsendi.rpa.controller.dao.mapper: debug\n    cn.gzsendi.rpa.controller.service.impl: debug\n    cn.gzsendi.rpa.controller: info\n    cn.gzsendi.rpa.designer: info\n    cn.gzsendi.rpa.robot: info\n    cn.gzsendi.rpa.taskQueue: info\n    cn.gzsendi.rpa.warning: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n  # file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7\n\n\n\nschedule: \n  #是否集群模式，false：scheduler + quartz  , true: powerjob\n  cluster_mode: false\n  powerjob:\n    worker:\n      #是否启动powerJob\n      enabled: ${schedule.cluster_mode:false}\n      # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n      server-address: 192.168.18.17:7700\n      # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n      protocol: akka\n      # 持久化方式，可选，默认 disk\n      store-strategy: disk\n      # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n      max-result-length: 4096\n      # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n      max-appended-wf-context-length: 4096\n      # 同时运行的轻量级任务数量上限\n      max-lightweight-task-num: 1024\n      # 同时运行的重量级任务数量上限\n      max-heavy-task-num: 64', '91742762601c87cf84a76b4882637bf9', '2010-05-05 00:00:00', '2023-06-21 06:03:21', 'nacos', '192.168.18.57', 'U', '0655dab9-f097-4170-aa62-d94b23823be6');
INSERT INTO `his_config_info` VALUES (1225, 1829, 'datae-base.yml', 'DEFAULT_GROUP', '', 'spring:\n  devtools:\n    restart:\n      enabled: false\n  cloud:\n    nacos:\n      discovery:\n        server-addr: \'192.168.18.17:9002\'\n        namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n\nswagger:\n    enabled: true\n\n# 关闭actuator的所有端点\n# management:\n#   endpoints:\n#     enabled-by-default: true\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 25000\n        readTimeout: 25000\n\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker:\n        requestVolumeThreshold: 1000\n      execution:\n        timeout:\n          enabled: true\n        isolation:\n          thread:\n            timeoutInMilliseconds: 20000\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default\n\nlogging:\n  config: classpath:logback-spring.xml\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    # 基础服务\n    cn.gzsendi.datae.authenticationclient: info\n    cn.gzsendi.datae.authenticationserver: info\n    cn.gzsendi.datae.gateway: info\n    cn.gzsendi.rpa.system: info\n    # 业务服务\n    cn.sendi.controller: info\n    cn.gzsendi.rpa.controller.dao.mapper: debug\n    cn.gzsendi.rpa.controller.service.impl: debug\n    cn.gzsendi.rpa.controller: info\n    cn.gzsendi.rpa.designer: info\n    cn.gzsendi.rpa.robot: info\n    cn.gzsendi.rpa.taskQueue: info\n    cn.gzsendi.rpa.warning: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n  # file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7\n\n\n\nschedule: \n  #是否集群模式，false：scheduler + quartz  , true: powerjob\n  cluster_mode: false\n  powerjob:\n    worker:\n      #是否启动powerJob\n      enabled: ${schedule.cluster_mode:false}\n      # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n      server-address: 192.168.18.17:7700\n      # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n      protocol: akka\n      # 持久化方式，可选，默认 disk\n      store-strategy: disk\n      # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n      max-result-length: 4096\n      # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n      max-appended-wf-context-length: 4096\n      # 同时运行的轻量级任务数量上限\n      max-lightweight-task-num: 1024\n      # 同时运行的重量级任务数量上限\n      max-heavy-task-num: 64', '6368d4a23fdf01513158b27697ca492b', '2010-05-05 00:00:00', '2023-06-25 01:38:46', 'nacos', '192.168.18.57', 'U', '0655dab9-f097-4170-aa62-d94b23823be6');
INSERT INTO `his_config_info` VALUES (1223, 1830, 'controller.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 19090\n  servlet:\n    context-path: /controller\n  compression:\n    enabled: true\n    mime-types: application/json\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.sendi.controller.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: \n        max-active: 10\n        max-wait: -1\n        max-idle: 8\n        min-idle: 0\n  quartz:\n    job-store-type: jdbc\n    properties:\n      org:\n        quartz:\n          jobStore:\n            # class: org.quartz.impl.jdbcjobstore.JobStoreTX\n            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore\n            clusterCheckinInterval: 10000\n            misfireThreshold: 60000\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            useProperties: false\n            tablePrefix: QRTZ_\n            isClustered: true\n        scheduler:\n          instanceId: AUTO\n          instanceName: clusteredScheduler\n        threadPool:\n          class: org.quartz.simpl.SimpleThreadPool\n          threadCount: 10\n          threadPriority: 5\n          threadsInheritContextClassLoaderOfInitializingThread: true\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nTASK_PHOTO_NGINX_PATH: /task_photo/\nTASK_VIDEO_NGINX_PATH: /task_video/\nocr_default_url: http://127.0.0.1:18888/image_code\ngeneral_default_url: http://127.0.0.1:18810/text_cls\n\nrobot_unconn: true   \nadd_userInfo_interceptor: true\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27781\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  console-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}\n\n\nalipay:\n  appId: 9021000122682369\n  merchantPrivateKey: MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCO9H0Xtusc4hU8oXqCp3+Jy4mqy+sPsQkWmKZoTdpbgGmw6avG1N7AzAekPYOaaLa8xmhNWxAPcOd47f7iFPDirS3mqZwXz6uWKQWeqQNl4hWk+cmLI0ca3o23w91DLCbde+oyJva1YKUlSPuSK7AABeDhCrHqkx3pnWSEfqcBNcVAMYLZVTpDmKgaJiUA61tY/6DpClK2trdFhOUGg2X+9ZpimPt1iACz7bcNjtMGFKD7zBuV1l+oLiS6YSP1j/xImTLa7FuXWAoLkqXG9nLpnmACeoMemyXvYLBmRFEnRChogwgIlZOXcHbW/e7y8nFiOn4J7RiDNNFtaxmoELk5AgMBAAECggEAcljybrOsITBemF76JeRhShF7DxmJ7sVHZcG46hnMHgD7ib1/382KWGFbg26JBEvaT+nMqIO8tv0yyjJk/OaPQGISIz1sVEeTEsvBaQX8Z9SOR6ZeJmOTjtSSO3n6VK7Ob7+ct30fPjoOH2LfiC5V287X8GqjoeUHukRhkPHWGEp0Q9ry9bCmltWhPC5b/tD+9zUgdoAMnZihv+Mwhf54TTcbxVAHQf5utLKB6rzQADd/pqNz98igRLeKaIe2XGaE8mV+dj5YZJS6L83nNr0rsD/AJ6KNRRX9Zz1dJ6yRyhnmU5XnbXHeyxW01ixxJE13MI6DLnSh4G8X/Z2HpKxTAQKBgQD3ZMVY+RiTTkBEVG/OBqZPYFRsS6iEuhrjpXCeAxEEw3N8Q0ZUEIt2vwD1uu0EwUXlrV9xglDjLHK8gV9Q4F89DGceIS0A8SuoLNRmGihGNGHOT/nMzovlS/ZigtoJK0WL4jDNb5fk9yXRYFyGAFPNXXBFNGRPw2TH3x6227LlaQKBgQCT7Zy/+GvxLfP+2hkGCJzIqC3q3eZOfdGOuiR4CZhXn5Uthc7OzcRnt+A2I3RT1fStO0kmI5hHCsdlNtGZ3iZRtGoFgpIDWR3sbi3mHAdjEsRgM6CdvbJRcO+rUrhSPv85gq1R2xPBD7W4neqdu/EQ4+CAZrNWPy2NoUwdt1GrUQKBgDZw8JTRzDyuXaorwqbeA783/ZwPUjhTFBPAlnXPSvF3aXSRAWsCcQ5inf11cy82sQEIFBbQjKhRYbZl6enMVmkCz7ZrqpGogOjzZJJLc01vvY4/P0N4uIRvIPswvHaEFTvhPMgYpJ54XNQklnfOnqJ0y34PN3vuDcGGMiYfVtDxAoGBAIPWOOU+WbVQ5ywy5CpkcpbCjGnN6fv6VlGFxArXQlaVezZfErls2aY2UjTt1DcDcFUTiVXcU1K9YIfsG1GukyguSm8ut0MUoX6dk3qJcGvzxeCXIoZzEgFTTca6qltimcR/mkhhn3FotuQamYaKgYY0EVleLmanV8np/xRc1QSBAoGADHZEmllp931219Rfty5kJYquQRNvIlOUAC6BhjmXGeJsy4C0oSBuriH8XucJ2Wgqn/6hFKQtiybY/pMEwdBOjYBA3QoT38yWjUC+6f1MlkIEpVDnvI8y8Cwhpi748U/eb4JZkXOss6XJEKWV0z1Qy0uy+YqYi+2mXbp8oZx4Uzo=\n  alipayPublicKey: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqFxk1A1LYFLuBDo2uCPxVmMtEI7SKkjAAuiIoRBjdGywY6Ze1SNiD2jaawp3lvzLLW7ZQ0ILQk9+r3uf20ZNehOwAOfoWRbpzYtuNgCsAZg9O2bPwNOPX7siph9cLKx+5/8wuhNk3lejDvYTT6McmbumhlK+sQNirlcrlt2xxNgQZNhGoJbO9yVqt0hPeXZTV3q+D8wLn7cj1XcPMfFyMOV+NAeGTsvsGqNNEdjIb4zVH6bRBi2ARktCCl3dbz9Gz+qK6Ml/hLVvcvQg/KT2cn+phgpHwNuDUI61HvMSbQf2n0vc5RC7H8DGAggs1bmNu98CfXIy57dPpYA3zxCuVQIDAQAB\n  gatewayUrl: https://openapi-sandbox.dl.alipaydev.com/gateway.do\n  notifyUrl: http://121.33.214.30:44390/chargeOrder/alipay/notify\n  returnUrl:\n\nwechat-pay:\n  app-id: 1\n  merchant-id: 1\n  merchant-serial-number: 1\n  notify-url: 1\n  private-key: MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCO9H0Xtusc4hU8oXqCp3+Jy4mqy+sPsQkWmKZoTdpbgGmw6avG1N7AzAekPYOaaLa8xmhNWxAPcOd47f7iFPDirS3mqZwXz6uWKQWeqQNl4hWk+cmLI0ca3o23w91DLCbde+oyJva1YKUlSPuSK7AABeDhCrHqkx3pnWSEfqcBNcVAMYLZVTpDmKgaJiUA61tY/6DpClK2trdFhOUGg2X+9ZpimPt1iACz7bcNjtMGFKD7zBuV1l+oLiS6YSP1j/xImTLa7FuXWAoLkqXG9nLpnmACeoMemyXvYLBmRFEnRChogwgIlZOXcHbW/e7y8nFiOn4J7RiDNNFtaxmoELk5AgMBAAECggEAcljybrOsITBemF76JeRhShF7DxmJ7sVHZcG46hnMHgD7ib1/382KWGFbg26JBEvaT+nMqIO8tv0yyjJk/OaPQGISIz1sVEeTEsvBaQX8Z9SOR6ZeJmOTjtSSO3n6VK7Ob7+ct30fPjoOH2LfiC5V287X8GqjoeUHukRhkPHWGEp0Q9ry9bCmltWhPC5b/tD+9zUgdoAMnZihv+Mwhf54TTcbxVAHQf5utLKB6rzQADd/pqNz98igRLeKaIe2XGaE8mV+dj5YZJS6L83nNr0rsD/AJ6KNRRX9Zz1dJ6yRyhnmU5XnbXHeyxW01ixxJE13MI6DLnSh4G8X/Z2HpKxTAQKBgQD3ZMVY+RiTTkBEVG/OBqZPYFRsS6iEuhrjpXCeAxEEw3N8Q0ZUEIt2vwD1uu0EwUXlrV9xglDjLHK8gV9Q4F89DGceIS0A8SuoLNRmGihGNGHOT/nMzovlS/ZigtoJK0WL4jDNb5fk9yXRYFyGAFPNXXBFNGRPw2TH3x6227LlaQKBgQCT7Zy/+GvxLfP+2hkGCJzIqC3q3eZOfdGOuiR4CZhXn5Uthc7OzcRnt+A2I3RT1fStO0kmI5hHCsdlNtGZ3iZRtGoFgpIDWR3sbi3mHAdjEsRgM6CdvbJRcO+rUrhSPv85gq1R2xPBD7W4neqdu/EQ4+CAZrNWPy2NoUwdt1GrUQKBgDZw8JTRzDyuXaorwqbeA783/ZwPUjhTFBPAlnXPSvF3aXSRAWsCcQ5inf11cy82sQEIFBbQjKhRYbZl6enMVmkCz7ZrqpGogOjzZJJLc01vvY4/P0N4uIRvIPswvHaEFTvhPMgYpJ54XNQklnfOnqJ0y34PN3vuDcGGMiYfVtDxAoGBAIPWOOU+WbVQ5ywy5CpkcpbCjGnN6fv6VlGFxArXQlaVezZfErls2aY2UjTt1DcDcFUTiVXcU1K9YIfsG1GukyguSm8ut0MUoX6dk3qJcGvzxeCXIoZzEgFTTca6qltimcR/mkhhn3FotuQamYaKgYY0EVleLmanV8np/xRc1QSBAoGADHZEmllp931219Rfty5kJYquQRNvIlOUAC6BhjmXGeJsy4C0oSBuriH8XucJ2Wgqn/6hFKQtiybY/pMEwdBOjYBA3QoT38yWjUC+6f1MlkIEpVDnvI8y8Cwhpi748U/eb4JZkXOss6XJEKWV0z1Qy0uy+YqYi+2mXbp8oZx4Uzo=\n  api-v3-key: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqFxk1A1LYFLuBDo2uCPxVmMtEI7SKkjAAuiIoRBjdGywY6Ze1SNiD2jaawp3lvzLLW7ZQ0ILQk9+r3uf20ZNehOwAOfoWRbpzYtuNgCsAZg9O2bPwNOPX7siph9cLKx+5/8wuhNk3lejDvYTT6McmbumhlK+sQNirlcrlt2xxNgQZNhGoJbO9yVqt0hPeXZTV3q+D8wLn7cj1XcPMfFyMOV+NAeGTsvsGqNNEdjIb4zVH6bRBi2ARktCCl3dbz9Gz+qK6Ml/hLVvcvQg/KT2cn+phgpHwNuDUI61HvMSbQf2n0vc5RC7H8DGAggs1bmNu98CfXIy57dPpYA3zxCuVQIDAQAB\n', 'b009a32d56ec268c782b478dff24f8d7', '2010-05-05 00:00:00', '2023-06-25 01:44:05', 'nacos', '192.168.18.57', 'U', '0655dab9-f097-4170-aa62-d94b23823be6');
INSERT INTO `his_config_info` VALUES (1225, 1831, 'datae-base.yml', 'DEFAULT_GROUP', '', 'spring:\n  devtools:\n    restart:\n      enabled: false\n  cloud:\n    nacos:\n      discovery:\n        server-addr: \'192.168.18.17:9002\'\n        namespace: 0655dab9-f097-4170-aa62-d94b23823be6\n\nswagger:\n    enabled: true\n\n# 关闭actuator的所有端点\n# management:\n#   endpoints:\n#     enabled-by-default: true\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 25000\n        readTimeout: 25000\n\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker:\n        requestVolumeThreshold: 1000\n      execution:\n        timeout:\n          enabled: true\n        isolation:\n          thread:\n            timeoutInMilliseconds: 20000\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default\n\nlogging:\n  config: classpath:logback-spring.xml\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    # 基础服务\n    cn.gzsendi.datae.authenticationclient: info\n    cn.gzsendi.datae.authenticationserver: info\n    cn.gzsendi.datae.gateway: info\n    cn.gzsendi.rpa.system: info\n    # 业务服务\n    cn.sendi.controller: info\n    cn.gzsendi.rpa.controller.dao.mapper: debug\n    cn.gzsendi.rpa.controller.service.impl: debug\n    cn.gzsendi.rpa.controller: info\n    cn.gzsendi.rpa.designer: info\n    cn.gzsendi.rpa.robot: info\n    cn.gzsendi.rpa.taskQueue: info\n    cn.gzsendi.rpa.warning: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n  # file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7\n\n\n\nschedule: \n  #是否集群模式，false：scheduler + quartz  , true: powerjob\n  cluster_mode: false\n  powerjob:\n    worker:\n      #是否启动powerJob\n      enabled: ${schedule.cluster_mode:false}\n      # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n      server-address: 192.168.18.17:7700\n      # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n      protocol: akka\n      # 持久化方式，可选，默认 disk\n      store-strategy: disk\n      # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n      max-result-length: 4096\n      # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n      max-appended-wf-context-length: 4096\n      # 同时运行的轻量级任务数量上限\n      max-lightweight-task-num: 1024\n      # 同时运行的重量级任务数量上限\n      max-heavy-task-num: 64', '91742762601c87cf84a76b4882637bf9', '2010-05-05 00:00:00', '2023-07-03 01:53:00', 'nacos', '192.168.18.57', 'U', '0655dab9-f097-4170-aa62-d94b23823be6');
INSERT INTO `his_config_info` VALUES (1225, 1832, 'datae-base.yml', 'DEFAULT_GROUP', '', 'spring:\n  devtools:\n    restart:\n      enabled: false\n  cloud:\n    nacos:\n      discovery:\n        server-addr: \'192.168.18.17:9002\'\n        namespace: ac20be3e-4991-4f59-9684-60bd218c9e4b\n\nswagger:\n    enabled: true\n\n# 关闭actuator的所有端点\n# management:\n#   endpoints:\n#     enabled-by-default: true\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n\nfeign:\n  hystrix:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 25000\n        readTimeout: 25000\n\nhystrix:\n  threadpool:\n    default:\n      coreSize: 50\n      maxQueueSize: 100\n      queueSizeRejectionThreshold: 50\n  command:\n    default:\n      coreSize: 500000\n      circuitBreaker:\n        requestVolumeThreshold: 1000\n      execution:\n        timeout:\n          enabled: true\n        isolation:\n          thread:\n            timeoutInMilliseconds: 20000\n\n# 加入seata配置\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: my_test_tx_group \n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.18.17:9002\n      group: \"SEATA_GROUP\"\n      namespace: \"ac20be3e-4991-4f59-9684-60bd218c9e4b\"\n  service:\n    vgroupMapping:\n      my_test_tx_group: default\n\nlogging:\n  config: classpath:logback-spring.xml\n  level:\n    root: info\n    com.netflix: warn\n    com.alibaba.nacos.client.naming: warn\n    # 基础服务\n    cn.gzsendi.datae.authenticationclient: info\n    cn.gzsendi.datae.authenticationserver: info\n    cn.gzsendi.datae.gateway: info\n    cn.gzsendi.rpa.system: info\n    # 业务服务\n    cn.sendi.controller: info\n    cn.gzsendi.rpa.controller.dao.mapper: debug\n    cn.gzsendi.rpa.controller.service.impl: debug\n    cn.gzsendi.rpa.controller: info\n    cn.gzsendi.rpa.designer: info\n    cn.gzsendi.rpa.robot: info\n    cn.gzsendi.rpa.taskQueue: info\n    cn.gzsendi.rpa.warning: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n  # file: ./logs/${spring.application.name}.log\n  # 日志文件保留天数\n  info:\n    MaxHistory: 7\n  debug:\n    MaxHistory: 7\n  error:\n    MaxHistory: 7\n\n\n\nschedule: \n  #是否集群模式，false：scheduler + quartz  , true: powerjob\n  cluster_mode: false\n  powerjob:\n    worker:\n      #是否启动powerJob\n      enabled: ${schedule.cluster_mode:false}\n      # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n      server-address: 192.168.18.17:7700\n      # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n      protocol: akka\n      # 持久化方式，可选，默认 disk\n      store-strategy: disk\n      # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n      max-result-length: 4096\n      # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n      max-appended-wf-context-length: 4096\n      # 同时运行的轻量级任务数量上限\n      max-lightweight-task-num: 1024\n      # 同时运行的重量级任务数量上限\n      max-heavy-task-num: 64', '6368d4a23fdf01513158b27697ca492b', '2010-05-05 00:00:00', '2023-07-03 06:53:07', 'nacos', '192.168.18.57', 'U', '0655dab9-f097-4170-aa62-d94b23823be6');
INSERT INTO `his_config_info` VALUES (676, 1833, 'controller.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 19090\n  servlet:\n    context-path: /controller\n  compression:\n    enabled: true\n    mime-types: application/json\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.sendi.controller.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: \n        max-active: 10\n        max-wait: -1\n        max-idle: 8\n        min-idle: 0\n  quartz:\n    job-store-type: jdbc\n    properties:\n      org:\n        quartz:\n          jobStore:\n            # class: org.quartz.impl.jdbcjobstore.JobStoreTX\n            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore\n            clusterCheckinInterval: 10000\n            misfireThreshold: 60000\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            useProperties: false\n            tablePrefix: QRTZ_\n            isClustered: true\n        scheduler:\n          instanceId: AUTO\n          instanceName: clusteredScheduler\n        threadPool:\n          class: org.quartz.simpl.SimpleThreadPool\n          threadCount: 10\n          threadPriority: 5\n          threadsInheritContextClassLoaderOfInitializingThread: true\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nTASK_PHOTO_NGINX_PATH: /task_photo/\nTASK_VIDEO_NGINX_PATH: /task_video/\nocr_default_url: http://127.0.0.1:18888/image_code\ngeneral_default_url: http://127.0.0.1:18810/text_cls\n\nrobot_unconn: true   \nadd_userInfo_interceptor: true\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27781\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  console-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}', 'e900d338856ae93a91e76f599817070e', '2010-05-05 00:00:00', '2023-07-05 07:16:01', 'nacos', '192.168.18.3', 'U', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c');
INSERT INTO `his_config_info` VALUES (676, 1834, 'controller.yml', 'DEFAULT_GROUP', '', 'server:\n  port: 19090\n  servlet:\n    context-path: /controller\n  compression:\n    enabled: true\n    mime-types: application/json\n\nspring:\n  datasource:\n    url: jdbc:mysql://192.168.18.17:3306/lcy_remake?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: datae\n    password: Sd_12345\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      # 配置初始化大小、最小、最大\n      initial-size: 5\n      minIdle: 10\n      max-active: 20\n      # 配置获取连接等待超时的时间(单位：毫秒)\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 2000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 600000\n      max-evictable-idle-time-millis: 900000\n      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql\n      validationQuery: select 1\n      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用\n      testWhileIdle: true\n      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的\n      testOnBorrow: false\n      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用\n      testOnReturn: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle\n      poolPreparedStatements: true\n      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，\n      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，\n      # 可以把这个数值配置大一些，比如说100\n      maxOpenPreparedStatements: 20\n      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作\n      keepAlive: true\n      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录\n      aop-patterns: \"cn.sendi.controller.dao.*\"\n      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########\n      filters: stat,wall,slf4j\n      # 自己配置监控统计拦截的filter\n      filter:\n        # 开启druiddatasource的状态监控\n        stat:\n          enabled: false\n          db-type: mysql\n          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中\n          log-slow-sql: true\n          slow-sql-millis: 2000\n        # 日志监控，使用slf4j 进行日志输出\n        slf4j:\n          enabled: false\n          statement-log-error-enabled: true\n          statement-create-after-log-enabled: false\n          statement-close-after-log-enabled: false\n          result-set-open-after-log-enabled: false\n          result-set-close-after-log-enabled: false\n      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########\n      web-stat-filter:\n        # 启动 StatFilter\n        enabled: false\n        # 过滤所有url\n        url-pattern: /*\n        # 排除一些不必要的url\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\"\n        # 开启session统计功能\n        session-stat-enable: true\n        # session的最大个数,默认100\n        session-stat-max-count: 1000\n      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########\n      stat-view-servlet:\n        # 启用StatViewServlet\n        enabled: false\n        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html\n        url-pattern: /druid/*\n        # 不允许清空统计数据,重新计算\n        reset-enable: false\n        # 配置监控页面访问密码\n        login-username: root\n        login-password: $fDkK$#qP7NG\n        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问\n        allow:\n        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝\n        deny:\n  redis:\n    database: 0\n    host: 192.168.18.17\n    port: 6379\n    password: Sd_12345\n    timeout: 10000\n    lettuce:\n      pool: \n        max-active: 10\n        max-wait: -1\n        max-idle: 8\n        min-idle: 0\n  quartz:\n    job-store-type: jdbc\n    properties:\n      org:\n        quartz:\n          jobStore:\n            # class: org.quartz.impl.jdbcjobstore.JobStoreTX\n            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore\n            clusterCheckinInterval: 10000\n            misfireThreshold: 60000\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            useProperties: false\n            tablePrefix: QRTZ_\n            isClustered: true\n        scheduler:\n          instanceId: AUTO\n          instanceName: clusteredScheduler\n        threadPool:\n          class: org.quartz.simpl.SimpleThreadPool\n          threadCount: 10\n          threadPriority: 5\n          threadsInheritContextClassLoaderOfInitializingThread: true\n\n# actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus\n    metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: ${spring.application.name}\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    auto-mapping-behavior: full\n    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\nTASK_PHOTO_NGINX_PATH: /task_photo/\nTASK_VIDEO_NGINX_PATH: /task_video/\nocr_default_url: http://127.0.0.1:18888/image_code\ngeneral_default_url: http://127.0.0.1:18810/text_cls\n\nrobot_unconn: true   \nadd_userInfo_interceptor: true\n\n\n\npowerjob:\n  worker:\n    #是否启动powerJob\n    enabled: ${schedule.cluster_mode:false}\n    # akka 工作端口，可选，默认 27777\n    akka-port: 27781\n    # 接入应用名称，用于分组隔离，推荐填写 本 Java 项目名称\n    app-name:  console-server\n    # 调度服务器地址，IP:Port 或 域名，多值逗号分隔\n    server-address: ${schedule.powerjob.worker.server-address}\n    # 通讯协议，4.3.0 开始支持 HTTP 和 AKKA 两种协议\n    protocol: ${schedule.powerjob.worker.protocol}\n    # 持久化方式，可选，默认 disk\n    store-strategy: ${schedule.powerjob.worker.store-strategy}\n    # 任务返回结果信息的最大长度，超过这个长度的信息会被截断，默认值 8192\n    max-result-length: ${schedule.powerjob.worker.max-result-length}\n    # 单个任务追加的工作流上下文最大长度，超过这个长度的会被直接丢弃，默认值 8192\n    max-appended-wf-context-length: ${schedule.powerjob.worker.max-appended-wf-context-length}\n    # 同时运行的轻量级任务数量上限\n    max-lightweight-task-num: ${schedule.powerjob.worker.max-lightweight-task-num}\n    # 同时运行的重量级任务数量上限\n    max-heavy-task-num: ${schedule.powerjob.worker.max-heavy-task-num}\n\nalipay:\n  appId: 9021000122682369\n  merchantPrivateKey: MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCO9H0Xtusc4hU8oXqCp3+Jy4mqy+sPsQkWmKZoTdpbgGmw6avG1N7AzAekPYOaaLa8xmhNWxAPcOd47f7iFPDirS3mqZwXz6uWKQWeqQNl4hWk+cmLI0ca3o23w91DLCbde+oyJva1YKUlSPuSK7AABeDhCrHqkx3pnWSEfqcBNcVAMYLZVTpDmKgaJiUA61tY/6DpClK2trdFhOUGg2X+9ZpimPt1iACz7bcNjtMGFKD7zBuV1l+oLiS6YSP1j/xImTLa7FuXWAoLkqXG9nLpnmACeoMemyXvYLBmRFEnRChogwgIlZOXcHbW/e7y8nFiOn4J7RiDNNFtaxmoELk5AgMBAAECggEAcljybrOsITBemF76JeRhShF7DxmJ7sVHZcG46hnMHgD7ib1/382KWGFbg26JBEvaT+nMqIO8tv0yyjJk/OaPQGISIz1sVEeTEsvBaQX8Z9SOR6ZeJmOTjtSSO3n6VK7Ob7+ct30fPjoOH2LfiC5V287X8GqjoeUHukRhkPHWGEp0Q9ry9bCmltWhPC5b/tD+9zUgdoAMnZihv+Mwhf54TTcbxVAHQf5utLKB6rzQADd/pqNz98igRLeKaIe2XGaE8mV+dj5YZJS6L83nNr0rsD/AJ6KNRRX9Zz1dJ6yRyhnmU5XnbXHeyxW01ixxJE13MI6DLnSh4G8X/Z2HpKxTAQKBgQD3ZMVY+RiTTkBEVG/OBqZPYFRsS6iEuhrjpXCeAxEEw3N8Q0ZUEIt2vwD1uu0EwUXlrV9xglDjLHK8gV9Q4F89DGceIS0A8SuoLNRmGihGNGHOT/nMzovlS/ZigtoJK0WL4jDNb5fk9yXRYFyGAFPNXXBFNGRPw2TH3x6227LlaQKBgQCT7Zy/+GvxLfP+2hkGCJzIqC3q3eZOfdGOuiR4CZhXn5Uthc7OzcRnt+A2I3RT1fStO0kmI5hHCsdlNtGZ3iZRtGoFgpIDWR3sbi3mHAdjEsRgM6CdvbJRcO+rUrhSPv85gq1R2xPBD7W4neqdu/EQ4+CAZrNWPy2NoUwdt1GrUQKBgDZw8JTRzDyuXaorwqbeA783/ZwPUjhTFBPAlnXPSvF3aXSRAWsCcQ5inf11cy82sQEIFBbQjKhRYbZl6enMVmkCz7ZrqpGogOjzZJJLc01vvY4/P0N4uIRvIPswvHaEFTvhPMgYpJ54XNQklnfOnqJ0y34PN3vuDcGGMiYfVtDxAoGBAIPWOOU+WbVQ5ywy5CpkcpbCjGnN6fv6VlGFxArXQlaVezZfErls2aY2UjTt1DcDcFUTiVXcU1K9YIfsG1GukyguSm8ut0MUoX6dk3qJcGvzxeCXIoZzEgFTTca6qltimcR/mkhhn3FotuQamYaKgYY0EVleLmanV8np/xRc1QSBAoGADHZEmllp931219Rfty5kJYquQRNvIlOUAC6BhjmXGeJsy4C0oSBuriH8XucJ2Wgqn/6hFKQtiybY/pMEwdBOjYBA3QoT38yWjUC+6f1MlkIEpVDnvI8y8Cwhpi748U/eb4JZkXOss6XJEKWV0z1Qy0uy+YqYi+2mXbp8oZx4Uzo=\n  alipayPublicKey: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqFxk1A1LYFLuBDo2uCPxVmMtEI7SKkjAAuiIoRBjdGywY6Ze1SNiD2jaawp3lvzLLW7ZQ0ILQk9+r3uf20ZNehOwAOfoWRbpzYtuNgCsAZg9O2bPwNOPX7siph9cLKx+5/8wuhNk3lejDvYTT6McmbumhlK+sQNirlcrlt2xxNgQZNhGoJbO9yVqt0hPeXZTV3q+D8wLn7cj1XcPMfFyMOV+NAeGTsvsGqNNEdjIb4zVH6bRBi2ARktCCl3dbz9Gz+qK6Ml/hLVvcvQg/KT2cn+phgpHwNuDUI61HvMSbQf2n0vc5RC7H8DGAggs1bmNu98CfXIy57dPpYA3zxCuVQIDAQAB\n  gatewayUrl: https://openapi-sandbox.dl.alipaydev.com/gateway.do\n  notifyUrl: http://121.33.214.30:44390/chargeOrder/alipay/notify\n  returnUrl:\n\nwechat-pay:\n  app-id: 1\n  merchant-id: 1\n  merchant-serial-number: 1\n  notify-url: 1\n  private-key: MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCO9H0Xtusc4hU8oXqCp3+Jy4mqy+sPsQkWmKZoTdpbgGmw6avG1N7AzAekPYOaaLa8xmhNWxAPcOd47f7iFPDirS3mqZwXz6uWKQWeqQNl4hWk+cmLI0ca3o23w91DLCbde+oyJva1YKUlSPuSK7AABeDhCrHqkx3pnWSEfqcBNcVAMYLZVTpDmKgaJiUA61tY/6DpClK2trdFhOUGg2X+9ZpimPt1iACz7bcNjtMGFKD7zBuV1l+oLiS6YSP1j/xImTLa7FuXWAoLkqXG9nLpnmACeoMemyXvYLBmRFEnRChogwgIlZOXcHbW/e7y8nFiOn4J7RiDNNFtaxmoELk5AgMBAAECggEAcljybrOsITBemF76JeRhShF7DxmJ7sVHZcG46hnMHgD7ib1/382KWGFbg26JBEvaT+nMqIO8tv0yyjJk/OaPQGISIz1sVEeTEsvBaQX8Z9SOR6ZeJmOTjtSSO3n6VK7Ob7+ct30fPjoOH2LfiC5V287X8GqjoeUHukRhkPHWGEp0Q9ry9bCmltWhPC5b/tD+9zUgdoAMnZihv+Mwhf54TTcbxVAHQf5utLKB6rzQADd/pqNz98igRLeKaIe2XGaE8mV+dj5YZJS6L83nNr0rsD/AJ6KNRRX9Zz1dJ6yRyhnmU5XnbXHeyxW01ixxJE13MI6DLnSh4G8X/Z2HpKxTAQKBgQD3ZMVY+RiTTkBEVG/OBqZPYFRsS6iEuhrjpXCeAxEEw3N8Q0ZUEIt2vwD1uu0EwUXlrV9xglDjLHK8gV9Q4F89DGceIS0A8SuoLNRmGihGNGHOT/nMzovlS/ZigtoJK0WL4jDNb5fk9yXRYFyGAFPNXXBFNGRPw2TH3x6227LlaQKBgQCT7Zy/+GvxLfP+2hkGCJzIqC3q3eZOfdGOuiR4CZhXn5Uthc7OzcRnt+A2I3RT1fStO0kmI5hHCsdlNtGZ3iZRtGoFgpIDWR3sbi3mHAdjEsRgM6CdvbJRcO+rUrhSPv85gq1R2xPBD7W4neqdu/EQ4+CAZrNWPy2NoUwdt1GrUQKBgDZw8JTRzDyuXaorwqbeA783/ZwPUjhTFBPAlnXPSvF3aXSRAWsCcQ5inf11cy82sQEIFBbQjKhRYbZl6enMVmkCz7ZrqpGogOjzZJJLc01vvY4/P0N4uIRvIPswvHaEFTvhPMgYpJ54XNQklnfOnqJ0y34PN3vuDcGGMiYfVtDxAoGBAIPWOOU+WbVQ5ywy5CpkcpbCjGnN6fv6VlGFxArXQlaVezZfErls2aY2UjTt1DcDcFUTiVXcU1K9YIfsG1GukyguSm8ut0MUoX6dk3qJcGvzxeCXIoZzEgFTTca6qltimcR/mkhhn3FotuQamYaKgYY0EVleLmanV8np/xRc1QSBAoGADHZEmllp931219Rfty5kJYquQRNvIlOUAC6BhjmXGeJsy4C0oSBuriH8XucJ2Wgqn/6hFKQtiybY/pMEwdBOjYBA3QoT38yWjUC+6f1MlkIEpVDnvI8y8Cwhpi748U/eb4JZkXOss6XJEKWV0z1Qy0uy+YqYi+2mXbp8oZx4Uzo=\n  api-v3-key: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqFxk1A1LYFLuBDo2uCPxVmMtEI7SKkjAAuiIoRBjdGywY6Ze1SNiD2jaawp3lvzLLW7ZQ0ILQk9+r3uf20ZNehOwAOfoWRbpzYtuNgCsAZg9O2bPwNOPX7siph9cLKx+5/8wuhNk3lejDvYTT6McmbumhlK+sQNirlcrlt2xxNgQZNhGoJbO9yVqt0hPeXZTV3q+D8wLn7cj1XcPMfFyMOV+NAeGTsvsGqNNEdjIb4zVH6bRBi2ARktCCl3dbz9Gz+qK6Ml/hLVvcvQg/KT2cn+phgpHwNuDUI61HvMSbQf2n0vc5RC7H8DGAggs1bmNu98CfXIy57dPpYA3zxCuVQIDAQAB\n', 'e0232ec923842b2e62a80018e4f46cd8', '2010-05-05 00:00:00', '2023-07-05 07:18:30', 'nacos', '192.168.18.3', 'U', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c');

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `role` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL,
  `resource` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL,
  `action` varchar(8) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL,
  UNIQUE INDEX `uk_role_permission`(`role` ASC, `resource` ASC, `action` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb3 COLLATE = utf8mb3_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of permissions
-- ----------------------------

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL,
  `role` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL,
  UNIQUE INDEX `username`(`username` ASC, `role` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb3 COLLATE = utf8mb3_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = '租户容量信息表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp` ASC, `tenant_id` ASC) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 10 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'tenant_info' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------
INSERT INTO `tenant_info` VALUES (1, '1', 'f76627e8-ea63-4192-8250-df0fbf384902', 'dev', '开发', 'nacos', 1553766332166, 1553766332166);
INSERT INTO `tenant_info` VALUES (2, '1', 'ac20be3e-4991-4f59-9684-60bd218c9e4b', 'test', '测试', 'nacos', 1553766341086, 1553766341086);
INSERT INTO `tenant_info` VALUES (3, '1', 'bc51c982-83ed-47a4-be84-570a17234e39', '243', '172.168.200.243环境', 'nacos', 1637822213802, 1637822213802);
INSERT INTO `tenant_info` VALUES (4, '1', '1b536005-3024-4690-b4de-688110a19106', 'test2', 'test2', 'nacos', 1640939827853, 1640939827853);
INSERT INTO `tenant_info` VALUES (5, '1', '9a1310b5-fb61-41ef-97ef-bdc9f5921f5c', 'lk_env', 'lk的服务环境', 'nacos', 1656917465308, 1656917465308);
INSERT INTO `tenant_info` VALUES (6, '1', 'e4cb99a3-f198-4d39-a688-4129340e5178', 'skywalking', 'skywalking', 'nacos', 1662432497081, 1662432497081);
INSERT INTO `tenant_info` VALUES (7, '1', '00c78515-712c-4d63-ae50-6144e88958f3', 'hy_local', '本地测试', 'nacos', 1670578110937, 1670578110937);
INSERT INTO `tenant_info` VALUES (8, '1', '1fbe67fe-66ff-49da-8ef8-cbe59450ed33', 'rpa-2.0', '2.0版本配置', 'nacos', 1680485158653, 1680485158653);
INSERT INTO `tenant_info` VALUES (9, '1', '0655dab9-f097-4170-aa62-d94b23823be6', 'zys_dev', 'zys_dev', 'nacos', 1680501178980, 1680501178980);

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL,
  `password` varchar(500) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb3 COLLATE = utf8mb3_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$QF1jRVmY5O4F0xzaXjSpuuRELgBf1Qx6DwsWLuHfDVvAHg9/wUWym', 1);

SET FOREIGN_KEY_CHECKS = 1;
